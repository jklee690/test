<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="pfm.mgt">

    <select id="selectVolumeRptTargetList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.VolumeReportVO">
	    SELECT rpt_option
	         , rpt_sub_option
	         , rpt_option_nm
	         , rpt_sub_option_nm
		  FROM ( 	    
			    SELECT
			    <dynamic> 
			    	<isNotNull property="s_sel_val">
		        		$rpt_tp_opt_col$		as rpt_option
				       ,$rpt_tp_opt_nm_col$		as rpt_option_nm 
				    </isNotNull>
				    <isNull property="s_sel_val">
			    		'' as rpt_option
			    	   ,'' as rpt_option_nm	
			    	</isNull>
			    	
				    <isNotNull property="s_sel_sub_val">
				    	,$rpt_sub_opt_col$		as rpt_sub_option
				        ,$rpt_sub_opt_nm_col$	as rpt_sub_option_nm 
			    	</isNotNull> 
			    	<isNull property="s_sel_sub_val">
			    		,'' as rpt_sub_option
			    		,'' as rpt_sub_option_nm
			    	</isNull>
			    FROM
			        DBO.VW_BL_VOL V WITH(NOLOCK)   
			    WHERE 1=1                   
			        <isEqual property="s_dt_clss_cd" compareValue="PDT">
			        AND V.POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#  	
			        </isEqual>
			        <isEqual property="s_dt_clss_cd" compareValue="ETD">
			        AND V.ETD_DT_TM BETWEEN #s_prd_strdt# AND #s_prd_enddt#+'9999' 
			        </isEqual>
			        <isEqual property="s_dt_clss_cd" compareValue="ETA">
			        AND V.ETA_DT_TM BETWEEN #s_prd_strdt# AND #s_prd_enddt#+'9999' 
			        </isEqual>
			        <isEqual property="s_dt_clss_cd" compareValue="MBL">
			        AND V.MBL_PERIOD_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt# 	
			        </isEqual>
			        <isNotNull property="s_ofc_cd">
			        	AND V.REF_OFC_CD = #s_ofc_cd#
			        </isNotNull>
			        <isNotNull property="s_sel_val">
				        AND $rpt_tp_opt_nm_col$ LIKE '%' + #s_sel_val# + '%'	
			        </isNotNull>
		    		<isNotNull property="s_sel_sub_val">
				        AND $rpt_sub_opt_nm_col$ LIKE '%' + #s_sel_sub_val# + '%'	
					</isNotNull>
				</dynamic>    	
			  ) bl		      
     GROUP BY rpt_option
	         , rpt_sub_option
	         , rpt_option_nm
	         , rpt_sub_option_nm
    </select>
    
    <select id="selectProfitRptTargetList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.VolumeReportVO">
	    SELECT rpt_option
	         , rpt_sub_option
	         , rpt_option_nm
	         , rpt_sub_option_nm
		  FROM ( 
		  		<dynamic> 	    
			    SELECT 
			    	<isNotNull property="s_sel_val">
				        $rpt_tp_opt_col$				as rpt_option
				       ,$rpt_tp_opt_nm_col$				as rpt_option_nm 
				    </isNotNull>
				    <isNull property="s_sel_val">
			    		'' as rpt_option
			    	   ,'' as rpt_option_nm	
			    	</isNull>
			    	
				    <isNotNull property="s_sel_sub_val">
		        		,$rpt_sub_opt_col$				as rpt_sub_option
				        ,$rpt_sub_opt_nm_col$			as rpt_sub_option_nm 
			    	</isNotNull> 
			    	<isNull property="s_sel_sub_val">
			    		,'' as rpt_sub_option
			    		,'' as rpt_sub_option_nm
			    	</isNull>
			    FROM DBO.VW_PFMC V WITH(NOLOCK)
			    WHERE V.INV_CURR_CD IS NOT NULL
		        <isEqual property="s_dt_clss_cd" compareValue="PDT">
		        	AND V.POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#  	
		        </isEqual>
		        <isEqual property="s_dt_clss_cd" compareValue="IDT">
		        	AND V.INV_POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
		        </isEqual>
		        <isNotNull property="s_ofc_cd">
		        	AND V.REF_OFC_CD = #s_ofc_cd#
		        </isNotNull>
       			<isNotNull property="s_sel_val">
			        AND $rpt_tp_opt_nm_col$ LIKE '%' + #s_sel_val# + '%'	
		        </isNotNull>
	    		<isNotNull property="s_sel_sub_val">
			        AND $rpt_sub_opt_nm_col$ LIKE '%' + #s_sel_sub_val# + '%'	
				</isNotNull> 
				</dynamic>  	 	 
			  ) bl		      
     GROUP BY rpt_option
	         , rpt_sub_option
	         , rpt_option_nm
	         , rpt_sub_option_nm
    </select>
    
    <select id="selectProfitMultiCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    SELECT bl.curr_cd as multi_curr_cd
		  FROM ( 
		  		<dynamic> 	    
			    SELECT 
			    	frt.inv_curr_cd as curr_cd
			    FROM
			        tb_intg_bl bl                   
			    JOIN
			        tb_add_info_bnd bnd           
			            ON   bl.intg_bl_seq = bnd.intg_bl_seq 
			            AND bnd.delt_flg = 'N'   
			    JOIN 
			    	tb_frt frt 
     					ON bl.intg_bl_seq = ISNULL(frt.intg_bl_seq_2, frt.intg_bl_seq) 
     					AND frt.inv_seq is not null
     					AND frt.delt_flg = 'N'
    			JOIN 
    				tb_inv inv 
     					ON inv.inv_seq = frt.inv_seq 
     					AND inv.delt_flg = 'N'  
    			LEFT OUTER JOIN 
    				tb_inv_dtl dtl 
     					ON dtl.inv_seq = inv.inv_seq 
     					AND dtl.delt_flg = 'N'  
			    LEFT OUTER JOIN
			        tb_bl_prnr act            
			            ON   bl.intg_bl_seq = act.intg_bl_seq  
			            AND act.bl_trdp_tp_cd = 'S02' 
			            AND act.delt_flg = 'N'              
			    LEFT OUTER JOIN
			        tb_bl_prnr shp            
			            ON   bl.intg_bl_seq = shp.intg_bl_seq  
			            AND shp.bl_trdp_tp_cd = 'S01' 
			            AND shp.delt_flg = 'N'           
			    LEFT OUTER JOIN
			        tb_bl_prnr cne            
			            ON   bl.intg_bl_seq = cne.intg_bl_seq  
			            AND cne.bl_trdp_tp_cd = 'C01' 
			            AND cne.delt_flg = 'N'     
			    LEFT OUTER JOIN
			        tb_bl_prnr lnr            
			            ON   bl.intg_bl_seq = lnr.intg_bl_seq  
			            AND lnr.bl_trdp_tp_cd = 'L01' 
			            AND lnr.delt_flg = 'N'  
			    LEFT OUTER JOIN
			        tb_bl_prnr agent            
			            ON   bl.intg_bl_seq = agent.intg_bl_seq  
			            AND agent.bl_trdp_tp_cd = 'A01' 
			            AND agent.delt_flg = 'N'  
			    LEFT OUTER JOIN
			        tb_bl_prnr carr            
			            ON   bl.intg_bl_seq = carr.intg_bl_seq  
			            AND carr.bl_trdp_tp_cd = 'B01' 
			            AND carr.delt_flg = 'N'             
			    LEFT OUTER JOIN
			        tb_intg_bl_rlt rlt             
			            ON  bl.intg_bl_seq = rlt.intg_bl_seq 
			            AND rlt.delt_flg = 'N'          
			    LEFT OUTER JOIN
			        tb_intg_bl mbl             
			            ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq 
			            AND mbl.biz_clss_cd = 'M' 
			            AND mbl.delt_flg = 'N' 
			    LEFT OUTER JOIN
			        tb_usr usr
			            ON  usr.usr_tp = 'I'
			            AND usr.usrid = bl.rgst_usrid
			    LEFT OUTER JOIN
			        tb_bl_prnr ptn            
			            ON   bl.intg_bl_seq = ptn.intg_bl_seq  
			            AND ptn.bl_trdp_tp_cd = 'P01' 
			            AND ptn.delt_flg = 'N'  
			    LEFT OUTER JOIN
			        tb_bl_prnr ptn2            
			            ON   bl.intg_bl_seq = ptn2.intg_bl_seq  
			            AND ptn2.bl_trdp_tp_cd = 'P03' 
			            AND ptn2.delt_flg = 'N'  
			    LEFT OUTER JOIN
			        tb_trdp trdp_ptn            
			            ON   trdp_ptn.trdp_cd = ptn.trdp_cd  
			    LEFT OUTER JOIN
			        tb_trdp trdp_ptn2            
			            ON   trdp_ptn2.trdp_cd = ptn2.trdp_cd
			    LEFT OUTER JOIN
			        tb_trdp trdp_act            
			            ON   trdp_act.trdp_cd = act.trdp_cd       
			    LEFT OUTER JOIN
			        tb_trdp trdp_shp            
			            ON   trdp_shp.trdp_cd = shp.trdp_cd    
			    LEFT OUTER JOIN
			        tb_trdp trdp_cne            
			            ON   trdp_cne.trdp_cd = cne.trdp_cd
			    LEFT OUTER JOIN
			        tb_trdp trdp_lnr            
			            ON   trdp_lnr.trdp_cd = lnr.trdp_cd 
			    LEFT OUTER JOIN
			        tb_trdp trdp_agent            
			            ON   trdp_agent.trdp_cd = agent.trdp_cd 
			    LEFT OUTER JOIN
			        tb_trdp trdp_carr            
			            ON   trdp_carr.trdp_cd = carr.trdp_cd                                      
			    WHERE
			        bl.delt_flg = 'N' 
			        AND isnull(bl.sub_mbl_flg, '') != 'Y'
			        AND (
			              bl.biz_clss_cd =  'H' /**P*/ 
			            OR 
			              (bl.biz_clss_cd =  'M' AND (bl.hbl_tp_cd = 'DR' OR bl.hbl_tp_cd = 'DT' )) 
			            )
			        <isEqual property="s_dt_clss_cd" compareValue="MPDT">
			        AND bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#  	
			        </isEqual>
			        <isEqual property="s_dt_clss_cd" compareValue="IPDT">
			        AND dtl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
			        </isEqual>
			        
			        <isNotNull property="s_ofc_cd">
			        AND bl.ref_ofc_cd = #s_ofc_cd#
			        </isNotNull>
			        
	       			<isNotNull property="s_sel_val">
		        		<isEqual property="rpt_tp_opt" compareValue="1">
				        AND bl.ref_no LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="3">
				        AND bl.bl_no LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="4">
				        AND dbo.FC_GET_SLS_USR_NM(bl.biz_clss_cd, bl.intg_bl_seq, bl.ref_no) LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="5">
				        AND (case 
		                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'TR' 
		                    then trdp_ptn2.locl_nm              
		                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'CL'
                            then trdp_act.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DT'
		                    then trdp_ptn2.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'I'                
		                    then trdp_shp.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'O'
		                    then trdp_cne.locl_nm                 
		                    else trdp_ptn.locl_nm            
		                end) LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="6">
				        AND trdp_shp.locl_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="7">
				        AND trdp_lnr.locl_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="8">
				        AND trdp_cne.locl_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="9">
				        AND bl.pol_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="10">
				        AND trdp_act.locl_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="11">
				        AND bl.pod_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="13">
				        AND (case 
			                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'TR' 
			                    then trdp_ptn2.acct_cd          
			                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'CL'
	                            then trdp_act.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DT'
			                    then trdp_ptn2.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'I'                
			                    then trdp_shp.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'O'
			                    then trdp_cne.acct_cd                 
			                    else trdp_ptn.acct_cd            
			                end) LIKE '%' + #s_sel_val# + '%'	
		                </isEqual>
			        </isNotNull>
			    	
		    		<isNotNull property="s_sel_sub_val">
		        		<isEqual property="rpt_sub_opt" compareValue="1">
				        AND bl.ref_no LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="3">
				        AND bl.bl_no LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="4">
				        AND bnd.sls_usr_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="5">
				        AND (case 
		                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'TR' 
		                    then trdp_ptn2.locl_nm              
		                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'CL'
                            then trdp_act.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DT'
		                    then trdp_ptn2.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'I'                
		                    then trdp_shp.locl_nm              
		                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'O'
		                    then trdp_cne.locl_nm                 
		                    else trdp_ptn.locl_nm            
		                end) LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="6">
				        AND trdp_shp.locl_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="7">
				        AND trdp_lnr.locl_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="8">
				        AND trdp_cne.locl_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="9">
				        AND bl.pol_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="10">
				        AND trdp_act.locl_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="11">
				        AND bl.pod_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="13">
				        AND (case 
			                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'TR' 
			                    then trdp_ptn2.acct_cd          
			                    when bl.biz_clss_cd =  'H' AND bl.hbl_tp_cd = 'CL'
	                            then trdp_act.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DT'
			                    then trdp_ptn2.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'I'                
			                    then trdp_shp.acct_cd              
			                    when bl.biz_clss_cd =  'M' AND bl.hbl_tp_cd = 'DR' AND bnd.bnd_clss_cd = 'O'
			                    then trdp_cne.acct_cd                 
			                    else trdp_ptn.acct_cd            
			                end) LIKE '%' + #s_sel_sub_val# + '%'	
		                </isEqual>
					</isNotNull> 
				
				<isNotEqual property="rpt_tp_opt" compareValue="3">
				<isNotEqual property="rpt_tp_opt" compareValue="5">
				<isNotEqual property="rpt_tp_opt" compareValue="7">
				<isNotEqual property="rpt_tp_opt" compareValue="13">
				UNION
				
				SELECT 
			    	frt.inv_curr_cd as curr_cd
			    FROM
			        tb_oth_sales bl                   
			    JOIN 
			    	tb_frt frt 
     					ON bl.oth_seq = ISNULL(frt.intg_bl_seq_2, frt.intg_bl_seq) 
     					AND frt.inv_seq is not null
     					AND frt.delt_flg = 'N'
    			JOIN 
    				tb_inv inv 
     					ON inv.inv_seq = frt.inv_seq 
     					AND inv.delt_flg = 'N'  
    			LEFT OUTER JOIN 
    				tb_inv_dtl dtl 
     					ON dtl.inv_seq = inv.inv_seq 
     					AND dtl.delt_flg = 'N'  
     			LEFT OUTER JOIN
			        tb_usr usr
			            ON  usr.usr_tp = 'I'
			            AND usr.usrid = bl.sls_usrid
			    LEFT OUTER JOIN
			        tb_trdp trdp           
			            ON   trdp.trdp_cd = bl.cust_cd         	
			    WHERE
			        bl.delt_flg = 'N' 
			        <isEqual property="s_dt_clss_cd" compareValue="MPDT">
			        AND bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#  	
			        </isEqual>
			        <isEqual property="s_dt_clss_cd" compareValue="IPDT">
			        AND dtl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
			        </isEqual>
			        
			        <isNotNull property="s_ofc_cd">
			        AND bl.ofc_cd = #s_ofc_cd#
			        </isNotNull>
			        
	       			<isNotNull property="s_sel_val">
		        		<isEqual property="rpt_tp_opt" compareValue="1">
				        AND bl.ref_no LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="4">
				        AND usr.locl_usr_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="6">
				        AND bl.shpr_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="8">
				        AND bl.cnee_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="9">
				        AND bl.pol_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="10">
				        AND trdp.locl_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_tp_opt" compareValue="11">
				        AND bl.pod_nm LIKE '%' + #s_sel_val# + '%'	
				        </isEqual>
			        </isNotNull>
			    	
		    		<isNotNull property="s_sel_sub_val">
		        		<isEqual property="rpt_sub_opt" compareValue="1">
				        AND bl.ref_no LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="4">
				        AND usr.locl_usr_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="6">
				        AND bl.shpr_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="8">
				        AND bl.cnee_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="9">
				        AND bl.pol_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="10">
				        AND trdp.locl_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="11">
				        AND bl.pod_nm LIKE '%' + #s_sel_sub_val# + '%'	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="3">
				        AND 1 != 1	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="5">
				        AND 1 != 1	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="7">
				        AND 1 != 1	
				        </isEqual>
				        <isEqual property="rpt_sub_opt" compareValue="13">
				        AND 1 != 1	
				        </isEqual>
					</isNotNull> 
				</isNotEqual>
				</isNotEqual>
				</isNotEqual>	
				</isNotEqual>
				</dynamic>  	 	 
			  ) bl		      
     GROUP BY bl.curr_cd
    </select>
    
    <select id="selectProfitOneCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    <dynamic>
	    SELECT bl.curr_cd as curr_cd
	          ,substring(bl.inv_post_dt,1,6) as aply_fm_dt
        	  ,0 as rate
	      FROM (
	      		<isNotEqual property="f_dptm_val" compareValue="'O'">
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM    tb_intg_bl bl  WITH(NOLOCK) 
						JOIN tb_add_info_bnd bnd  WITH(NOLOCK) 
							ON bl.intg_bl_seq = bnd.intg_bl_seq 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON bl.intg_bl_seq = Isnull(frt.intg_bl_seq_2, frt.intg_bl_seq) 	
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq							
						LEFT OUTER JOIN tb_intg_bl_rlt rlt  WITH(NOLOCK) 
							ON bl.intg_bl_seq = rlt.intg_bl_seq  AND rlt.delt_flg = 'N' 
						LEFT OUTER JOIN tb_intg_bl mbl  WITH(NOLOCK) 
							ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'     
					WHERE  bl.delt_flg  = 'N'
					AND    bnd.delt_flg = 'N'
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotEmpty property="in_air_sea_clss_cd">
					AND  bl.air_sea_clss_cd IN ($in_air_sea_clss_cd$)
					</isNotEmpty> 
					<isNotEmpty property="in_bnd_clss_cd">
					AND  bnd.bnd_clss_cd IN ($in_bnd_clss_cd$)
					</isNotEmpty>
					<isNotNull property="s_ofc_cd">
					AND  bl.ref_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
		       		GROUP BY frt.inv_curr_cd,
            				 frt.inv_post_dt   
               </isNotEqual>
               
               <isEqual property="s_on_dptm_flg" compareValue="O">
	               <isNotEqual property="f_dptm_val" compareValue="'O'">
	               UNION
	               </isNotEqual>
               
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM tb_oth_sales oth  WITH(NOLOCK) 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON oth.oth_seq = frt.oth_seq
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq	
					WHERE  oth.delt_flg = 'N' 
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotNull property="s_ofc_cd">
					AND  oth.ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  oth.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
		            GROUP BY frt.inv_curr_cd,
            			     frt.inv_post_dt   
               </isEqual>
		       ) bl
		       LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_mm              
			        ON  fixc_mm.fm_curr_cd = bl.curr_cd    
			        AND fixc_mm.dt_clss_cd = 'M' 
			        AND substring(fixc_mm.aply_fm_dt,1,6) = substring(bl.inv_post_dt,1,6) 
			        AND fixc_mm.delt_flg = 'N'                                                       
			        AND fixc_mm.to_curr_cd = '$s_curr_cd$'   
			   LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_dd              
			        ON  fixc_dd.fm_curr_cd = bl.curr_cd    
			        AND fixc_dd.dt_clss_cd = 'D' 
			        AND fixc_dd.aply_fm_dt = bl.inv_post_dt
			        AND fixc_dd.delt_flg = 'N'                                                       
			        AND fixc_dd.to_curr_cd = '$s_curr_cd$'
		WHERE ISNULL(fixc_dd.xch_rt_ut,fixc_mm.xch_rt_ut) IS NULL
		  AND bl.curr_cd != '$s_curr_cd$'   
		GROUP BY
		    bl.curr_cd,
		    substring(bl.inv_post_dt,1,6)
		</dynamic>
    </select>
    
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="selectPrfOneCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    <dynamic>
	    /** PfmMgtSQL.xml > selectPrfOneCurrList **/
	    SELECT bl.curr_cd as curr_cd
	          ,substring(bl.inv_post_dt,1,6) as aply_fm_dt
        	  ,0 as rate
	      FROM (
	      		<isEqual property="s_uncheck_flg" compareValue="T">
		      		/** uncheck **/ 
		      		SELECT frt.inv_curr_cd as curr_cd
						  ,substring(frt.inv_post_dt,1,6)  as inv_post_mm
	            	 	  ,frt.inv_post_dt as inv_post_dt
	            	FROM tb_frt frt WITH(NOLOCK) 
	            	WHERE 1=2
	      		</isEqual>
	      		<isEqual property="s_fms_flg" compareValue="T">
					/** FMS **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM    tb_intg_bl bl  WITH(NOLOCK) 
						JOIN tb_add_info_bnd bnd  WITH(NOLOCK) 
							ON bl.intg_bl_seq = bnd.intg_bl_seq 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON bl.intg_bl_seq = Isnull(frt.intg_bl_seq_2, frt.intg_bl_seq) 	
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq							
						LEFT OUTER JOIN tb_intg_bl_rlt rlt  WITH(NOLOCK) 
							ON bl.intg_bl_seq = rlt.intg_bl_seq  AND rlt.delt_flg = 'N' 
						LEFT OUTER JOIN tb_intg_bl mbl  WITH(NOLOCK) 
							ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'     
					WHERE  bl.delt_flg  = 'N'
					AND    bnd.delt_flg = 'N'
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotEmpty property="in_air_sea_clss_cd">
					AND  bl.air_sea_clss_cd IN ($in_air_sea_clss_cd$)
					</isNotEmpty> 
					<isNotEmpty property="in_bnd_clss_cd">
					AND  bnd.bnd_clss_cd IN ($in_bnd_clss_cd$)
					</isNotEmpty>
					<isNotNull property="s_ofc_cd">
					AND  bl.ref_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
		       		GROUP BY frt.inv_curr_cd,
            				 frt.inv_post_dt   
               </isEqual>
               
               <isEqual property="s_oth_flg" compareValue="T">
	               <isEqual property="s_fms_flg" compareValue="T">
	               UNION
	               </isEqual>
               		/** Other **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM tb_oth_sales oth  WITH(NOLOCK) 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON oth.oth_seq = frt.oth_seq
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq	
					WHERE  oth.delt_flg = 'N' 
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotNull property="s_ofc_cd">
					AND  oth.ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  oth.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
		            GROUP BY frt.inv_curr_cd,
            			     frt.inv_post_dt   
               </isEqual>
               
               <isEqual property="s_wms_flg" compareValue="T">
	               <isEqual property="s_fms_oth_flg" compareValue="T">
	               UNION
	               </isEqual>
               		/** WMS **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM tb_wm_doc_mst wms  WITH(NOLOCK) 		
						JOIN tb_frt frt WITH(NOLOCK)  
							ON wms.wm_doc_seq = frt.wms_seq
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq	
					WHERE  wms.delt_flg = 'N' 
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotNull property="s_ofc_cd">
					AND  wms.ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  wms.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
		            GROUP BY frt.inv_curr_cd,
            			     frt.inv_post_dt   
               </isEqual>
		       ) bl
		       LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_mm              
			        ON  fixc_mm.fm_curr_cd = bl.curr_cd    
			        AND fixc_mm.dt_clss_cd = 'M' 
			        AND substring(fixc_mm.aply_fm_dt,1,6) = substring(bl.inv_post_dt,1,6) 
			        AND fixc_mm.delt_flg = 'N'                                                       
			        AND fixc_mm.to_curr_cd = '$s_curr_cd$'   
			   LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_dd              
			        ON  fixc_dd.fm_curr_cd = bl.curr_cd    
			        AND fixc_dd.dt_clss_cd = 'D' 
			        AND fixc_dd.aply_fm_dt = bl.inv_post_dt
			        AND fixc_dd.delt_flg = 'N'                                                       
			        AND fixc_dd.to_curr_cd = '$s_curr_cd$'
		WHERE ISNULL(fixc_dd.xch_rt_ut,fixc_mm.xch_rt_ut) IS NULL
		  AND bl.curr_cd != '$s_curr_cd$'   
		GROUP BY
		    bl.curr_cd,
		    substring(bl.inv_post_dt,1,6)
		</dynamic>
    </select>
    
    <select id="selectAccRptOneCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    <dynamic>
	    SELECT c.curr_cd as curr_cd
	          ,substring(c.inv_post_dt,1,6) as aply_fm_dt
        	  ,0 as rate
	      FROM (
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM    tb_frt frt WITH(NOLOCK)	
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq   
					WHERE  frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					<isNotNull property="s_ofc_cd">
					AND  frt.sls_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isNotNull property="f_fr_dt">
					AND  frt.inv_post_dt BETWEEN #f_fr_dt# AND #f_to_dt#
					</isNotNull>
		       		GROUP BY frt.inv_curr_cd,
            				 frt.inv_post_dt   
               
	                UNION
               
					SELECT  d.curr_cd,
							m.post_dt AS inv_post_dt
					FROM    tb_slip_mst m WITH(NOLOCK),
							tb_slip_dtl d WITH(NOLOCK)
					WHERE   m.slip_no = d.slip_no
					AND     m.delt_flg = 'N'
					AND     m.slip_tp IN ('SL','BB','EY')
					<isNotNull property="s_ofc_cd">
					AND  d.p_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isNotNull property="f_fr_dt">
					AND  m.post_dt BETWEEN #f_fr_dt# AND #f_to_dt#
					</isNotNull>
		            GROUP BY d.curr_cd,
            			     m.post_dt   
		       ) c
		       LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_mm              
			        ON  fixc_mm.fm_curr_cd = c.curr_cd    
			        AND fixc_mm.dt_clss_cd = 'M' 
			        AND substring(fixc_mm.aply_fm_dt,1,6) = substring(c.inv_post_dt,1,6) 
			        AND fixc_mm.delt_flg = 'N'                                                       
			        AND fixc_mm.to_curr_cd = '$s_curr_cd$'   
			   LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_dd              
			        ON  fixc_dd.fm_curr_cd = c.curr_cd    
			        AND fixc_dd.dt_clss_cd = 'D' 
			        AND fixc_dd.aply_fm_dt = c.inv_post_dt
			        AND fixc_dd.delt_flg = 'N'                                                       
			        AND fixc_dd.to_curr_cd = '$s_curr_cd$'
		WHERE ISNULL(fixc_dd.xch_rt_ut,fixc_mm.xch_rt_ut) IS NULL
		  AND c.curr_cd != '$s_curr_cd$'   
		GROUP BY
		    c.curr_cd,
		    substring(c.inv_post_dt,1,6)
		</dynamic>
    </select>
    
    
    <select id="selectGlMinMaxInfo" parameterClass="HashMap" resultClass="HashMap">
    	SELECT (CASE WHEN (SELECT ISNULL(MAX(A1.OPT_VAL),'') FROM TB_SYS_OPT A1 WHERE A1.OPT_KEY = 'GL_RPT_RANGE_END') = ''
			         THEN MAX(GL_CD)
		             ELSE (SELECT A2.OPT_VAL FROM TB_SYS_OPT A2 WHERE A2.OPT_KEY = 'GL_RPT_RANGE_END')
			    END) AS MAX_GL,
			   (CASE WHEN (SELECT ISNULL(MAX(A1.OPT_VAL),'') FROM TB_SYS_OPT A1 WHERE A1.OPT_KEY = 'GL_RPT_RANGE_START') = ''
			         THEN MIN(GL_CD)
		             ELSE (SELECT A2.OPT_VAL FROM TB_SYS_OPT A2 WHERE A2.OPT_KEY = 'GL_RPT_RANGE_START')
			    END) AS MIN_GL
		  FROM TB_GL_CD C
		 WHERE 1 = 1
		   AND C.GL_TYPE = 'EX'
		   AND C.USE_FLG = 'Y'
    </select>
    
    <select id="selectGlMinMaxInfoAll" parameterClass="HashMap" resultClass="HashMap">
    	SELECT  MAX(GL_CD) AS MAX_GL_ALL
		       ,MIN(GL_CD) AS MIN_GL_ALL 
		  FROM TB_GL_CD 
		 WHERE USE_FLG = 'Y'
    </select>
    
    <select id="searchCtmzRptList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.CtmzReportVO">
    	SELECT	TOP $topCnt$
    			rpt_seq,		rpt_title,			desc_1,
    			tp_1,			desc_2,				tp_2,
				desc_3,			tp_3,				desc_4,
				tp_4,			desc_5,				tp_5,
				desc_6,			tp_6,				hdr_txt,
				qry_txt
    	  FROM	tb_ctmz_rpt
    </select>
    
    <select id="searchCtmzRptList_CNT" parameterClass="HashMap" resultClass="Integer">
    	SELECT	COUNT(rpt_seq)
    	  FROM	tb_ctmz_rpt
    </select>
    
    <insert id="insertCtmzRpt" parameterClass="com.clt.apps.fis.pfm.mgt.management.dto.CtmzReportVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_ctmz_rpt(
    		rpt_seq,
    		rpt_title,			desc_1,				tp_1,
    		desc_2,				tp_2,				desc_3,
    		tp_3,				desc_4,				tp_4,
    		desc_5,				tp_5,				desc_6,
    		tp_6,				hdr_txt,			qry_txt,
    		rgst_usrid,         rgst_ofc_cd,        rgst_tms,
    		modi_usrid,         modi_ofc_cd,        modi_tms
    	)VALUES(
    		(SELECT ISNULL(MAX(rpt_seq),0) + 1 FROM tb_ctmz_rpt),
    		#rpt_title#,		#desc_1#,			#tp_1#,
    		#desc_2#,			#tp_2#,				#desc_3#,
    		#tp_3#,				#desc_4#,			#tp_4#,
    		#desc_5#,			#tp_5#,				#desc_6#,
    		#tp_6#,				#hdr_txt#,			#qry_txt#,
    		#rgst_usrid#,		#rgst_ofc_cd#,		GETDATE(),
    		#modi_usrid#,		#modi_ofc_cd#,		GETDATE()
    	)
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_ctmz_rpt(
    		rpt_seq,
    		rpt_title,			desc_1,				tp_1,
    		desc_2,				tp_2,				desc_3,
    		tp_3,				desc_4,				tp_4,
    		desc_5,				tp_5,				desc_6,
    		tp_6,				hdr_txt,			qry_txt,
    		rgst_usrid,         rgst_ofc_cd,        rgst_tms,
    		modi_usrid,         modi_ofc_cd,        modi_tms
    	) SELECT
    		(SELECT ISNULL(MAX(rpt_seq),0) + 1 FROM tb_ctmz_rpt),
    		#rpt_title#,		#desc_1#,			#tp_1#,
    		#desc_2#,			#tp_2#,				#desc_3#,
    		#tp_3#,				#desc_4#,			#tp_4#,
    		#desc_5#,			#tp_5#,				#desc_6#,
    		#tp_6#,				#hdr_txt#,			#qry_txt#,
    		#rgst_usrid#,		#rgst_ofc_cd#,		GETDATE(),
    		#modi_usrid#,		#modi_ofc_cd#,		GETUTCDATE()
    	
    </insert>
    
    <update id="modifyCtmzRpt" parameterClass="com.clt.apps.fis.pfm.mgt.management.dto.CtmzReportVO">
    	UPDATE	tb_ctmz_rpt
    	   SET	rpt_title = #rpt_title#,			desc_1 = #desc_1#,
    	   		tp_1 = #tp_1#,						desc_2 = #desc_2#,
    	   		tp_2 = #tp_2#,						desc_3 = #desc_3#,
    	   		tp_3 = #tp_3#,						desc_4 = #desc_4#,
    	   		tp_4 = #tp_4#,						desc_5 = #desc_5#,
    	   		tp_5 = #tp_5#,						desc_6 = #desc_6#,
    	   		tp_6 = #tp_6#,						hdr_txt = #hdr_txt#,
    	   		qry_txt = #qry_txt#,				modi_usrid = #rgst_usrid#,
    	   		modi_ofc_cd = #modi_ofc_cd#,		modi_tms = GETUTCDATE()
    	 WHERE	rpt_seq = #rpt_seq#
    </update>
    
    <select id="searchCtmzRptQeury" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.CtmzReportVO" remapResults="true">
    	$f_qry_txt$
    </select>
    
    <select id="searchCtmzRptQeury_CNT" parameterClass="HashMap" resultClass="Integer">
		SELECT	COUNT(*)
		  FROM	($f_qry_txt$)tmp
    </select>
    
	<select id="searchProfitCurr" parameterClass="HashMap" resultClass="String">
		SELECT 
		X.CURR
		FROM(
		SELECT
		(CASE
		 WHEN A.DEPT = 'SO' THEN 'SO'
		 WHEN A.DEPT = 'SI' THEN 'SI'
		 WHEN A.DEPT = 'AO' THEN 'AO'
		 WHEN A.DEPT = 'AI' THEN 'AI'
		 ELSE 'XX'
		END) AS DEPARTMENT,
		A.CURR,
		SUM(
		(CASE
		 WHEN A.INV_TP IN ('S','D') THEN A.AMT
		 ELSE 0
		END)) AS REVENUE,
		
		SUM(
		(CASE
		 WHEN A.INV_TP IN ('B','C') THEN A.AMT*-1
		 ELSE 0
		END)) AS COST
		FROM
		(
		 SELECT
		 I.INV_SEQ,
		 I.AIR_SEA_CLSS_CD+I.BND_CLSS_CD AS DEPT,
		 I.SELL_BUY_TP_CD AS INV_TP,
		 D.INV_APLY_CURR_CD AS CURR,
		 SUM(
		 (CASE
		  WHEN F.SELL_BUY_TP_CD IN ('S','D') THEN F.INV_SUM_AMT
		   WHEN F.SELL_BUY_TP_CD IN ('B') THEN F.INV_SUM_AMT*-1
		  WHEN F.SELL_BUY_TP_CD IN ('C') THEN F.CR_AMT*-1
		 END)
		 ) AS AMT
		 FROM
		 TB_INV I
		 JOIN TB_INV_DTL D ON I.INV_SEQ = D.INV_SEQ
		 LEFT OUTER JOIN TB_FRT F
			<![CDATA[ ON F.INV_SEQ = I.INV_SEQ AND ISNULL(F.DELT_FLG,'N') <> 'Y' ]]>
		WHERE 1=1
		<![CDATA[ AND ISNULL(I.DELT_FLG,'N') <> 'Y' ]]>		
		<isEqual property="param1" compareValue="P">
		AND F.INV_POST_DT BETWEEN #param2# AND #param3#
		</isEqual>
		<isNotEqual property="param1" compareValue="P">
		AND D.INV_DT BETWEEN #param2# AND #param3#
		</isNotEqual>
		<isNotEqual property="param9" compareValue="ALL">
		AND OFC_CD = #param9#
		</isNotEqual>
 		GROUP BY I.INV_SEQ,I.AIR_SEA_CLSS_CD,I.BND_CLSS_CD, F.AIR_SEA_CLSS_CD, F.BND_CLSS_CD, I.SELL_BUY_TP_CD, D.INV_APLY_CURR_CD
		) A
		GROUP BY A.DEPT, A.DEPT, A.CURR
		) X
		WHERE X.DEPARTMENT IN ($param8$)
		GROUP BY X.CURR
	</select>

	<select id="searchCstmrPfmcRptList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.CstmrPfmcRptVO">
		/* PfmMgtSQL.xml > searchCstmrPfmcRptList */
		SELECT DENSE_RANK() OVER (ORDER BY A.TRDP_NM) AS RANK,
		       A.TRDP_NM,
		       LTRIM(A.AIR_SEA_CLSS_NM + A.BND_CLSS_NM) AS DEPT_NM,
		       A.REP_CMDT_NM,
		       A.POL_NM,
		       A.POD_NM,
		       A.BL_COUNT,
		       CAST(ROUND(A.GRS_WGT, 2) AS FLOAT) AS GRS_WGT,
		       CAST(ROUND(A.GRS_WGT1, 2) AS FLOAT) AS GRS_WGT1,
		       CAST(ROUND(A.MEAS, 3) AS FLOAT) AS MEAS,
		       CAST(ROUND(A.MEAS1, 3) AS FLOAT) AS MEAS1,
		       CAST(ROUND(A.CHG_WGT, 2) AS FLOAT) AS CHG_WGT,
		       CAST(ROUND(A.CHG_WGT1, 2) AS FLOAT) AS CHG_WGT1
		  FROM (
		        SELECT PRNR.TRDP_NM,
		               CASE BL.AIR_SEA_CLSS_CD
		                  WHEN 'A' THEN 'Air'
		                  WHEN 'S' THEN 'Ocean'
		               END AS AIR_SEA_CLSS_NM,
		               CASE BND.BND_CLSS_CD
		                  WHEN 'O' THEN ' Export'
		                  WHEN 'I' THEN ' Import'
		               END AS BND_CLSS_NM,
		               BL.REP_CMDT_NM,
		               BL.POL_NM,
		               BL.POD_NM,
		               COUNT(BL.INTG_BL_SEQ) AS BL_COUNT,
		               SUM(BL.GRS_WGT) AS GRS_WGT,
		               SUM(BL.GRS_WGT1) AS GRS_WGT1,
		               SUM(BL.MEAS) AS MEAS,
		               SUM(BL.MEAS1) AS MEAS1,
		               SUM(BL.CHG_WGT) AS CHG_WGT,
		               SUM(BL.CHG_WGT1) AS CHG_WGT1
		          FROM TB_INTG_BL BL,
		               TB_ADD_INFO_BND BND,
		<isEqual property="customer" compareValue="ACCT">
		     <isNotEmpty property="acct_cd">
		               TB_TRDP TRDP,
		     </isNotEmpty>
		</isEqual>
		               TB_BL_PRNR PRNR
		         WHERE BL.DELT_FLG = 'N'
		           AND ISNULL(BL.SUB_MBL_FLG, 'N') != 'Y'
		           AND BL.BIZ_CLSS_CD = 'H'
		<isEqual property="period" compareValue="PDT">
		           AND BL.POST_DT BETWEEN #date_fm# AND #date_to#
		</isEqual>
		<isEqual property="period" compareValue="ETD">
		           AND BL.ETD_DT_TM BETWEEN #date_fm# AND #date_to#
		</isEqual>
		<isEqual property="period" compareValue="ETA">
		           AND BL.ETA_DT_TM BETWEEN #date_fm# AND #date_to#
		</isEqual>
		<isNotEmpty property="ofc_cd">
		           AND BL.RGST_OFC_CD = #ofc_cd#
		</isNotEmpty>
		           AND BL.INTG_BL_SEQ = BND.INTG_BL_SEQ
		           AND BND.DELT_FLG = 'N'
		<isNotEmpty property="dept_cd">
		           AND (BL.AIR_SEA_CLSS_CD + BND.BND_CLSS_CD IN ($dept_cd$)
		     <isNotEmpty property="not_dept_cd">
		                      OR BL.AIR_SEA_CLSS_CD + BND.BND_CLSS_CD NOT IN ($not_dept_cd$)
		     </isNotEmpty>
		               )
		</isNotEmpty>
		<isEmpty property="dept_cd">
		     <isNotEmpty property="not_dept_cd">
		           AND BL.AIR_SEA_CLSS_CD + BND.BND_CLSS_CD NOT IN ($not_dept_cd$)
		     </isNotEmpty>
		</isEmpty>
		           AND BL.INTG_BL_SEQ = PRNR.INTG_BL_SEQ
		           AND PRNR.TRDP_NM IS NOT NULL
		           AND PRNR.TRDP_NM != ''
		           AND PRNR.DELT_FLG = 'N'
		           AND PRNR.BL_TRDP_TP_CD = #bl_trdp_tp_cd#
		<isEqual property="customer" compareValue="TRDP">
		     <isNotEmpty property="trdp_cd">
		           AND PRNR.TRDP_CD = #trdp_cd#
		     </isNotEmpty>
		</isEqual>
		<isEqual property="customer" compareValue="ACCT">
		     <isNotEmpty property="acct_cd">
		           AND PRNR.TRDP_CD = TRDP.TRDP_CD
		           AND TRDP.ACCT_CD = #acct_cd#
		     </isNotEmpty>
		</isEqual>
		         GROUP BY PRNR.TRDP_NM,
		                  BL.AIR_SEA_CLSS_CD,
		                  BND.BND_CLSS_CD,
		                  BL.REP_CMDT_NM,
		                  BL.POL_NM,
		                  BL.POD_NM
		       ) AS A
		 ORDER BY A.TRDP_NM,
		          A.AIR_SEA_CLSS_NM,
		          A.BND_CLSS_NM,
		<isEqual property="sort_by" compareValue="CMDT">
		          A.REP_CMDT_NM,
		</isEqual>
		<isEqual property="sort_by" compareValue="POL">
		          A.POL_NM,
		</isEqual>
		<isEqual property="sort_by" compareValue="POD">
		          A.POD_NM,
		</isEqual>
		          A.BL_COUNT
	</select>

	<select id="searchVendorPerformanceReport" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.VndrReportVO">
	    /* PfmMgtSQL.xml > searchVendorPerformanceReport */
		SELECT A.GID 
			  ,A.RNK AS RNK
			  ,CASE WHEN GID = 127 THEN 'TOTAL' 
			        ELSE A.TRDP_NM END AS TRDP_NM
			  ,CASE WHEN GID = 127 THEN A.TTL_AMT
			        ELSE A.INV_AMT END AS INV_AMT
			  ,CASE WHEN GID = 127 THEN (A.TTL_AMT/FRT_INV_AMT)*100 
			        ELSE A.INV_PCNT END AS INV_PCNT
			  ,A.FRT_CD
			  ,ISNULL(FRT.FRT_CD_NM,A.FRT_CD) AS FRT_NM
			  ,CAST(A.FRT_INV_AMT AS NCHAR(20))  AS FRT_INV_AMT
			  ,A.FRT_PCNT
		  FROM (SELECT GROUPING_ID (G.RNK,G.TRDP_CD,G.TRDP_NM,G.INV_AMT ,G.INV_PCNT,G.FRT_CD,G.FRT_PCNT) GID 
					  ,CAST(G.RNK AS NCHAR(3)) AS RNK
					  ,G.TRDP_CD
					  ,G.TRDP_NM
					  ,MAX(TTL_AMT) AS TTL_AMT
					  ,G.INV_AMT
					  ,G.INV_PCNT
					  ,G.FRT_CD 
					  ,SUM(G.FRT_INV_AMT) FRT_INV_AMT
					  ,G.FRT_PCNT
				  FROM (SELECT DENSE_RANK() OVER(ORDER BY R.INV_AMT DESC) RNK
							  ,R.TRDP_CD
							  ,R.TRDP_NM AS TRDP_NM
							  ,R.TTL_AMT
							  ,CAST(ROUND(R.INV_AMT,2) AS FLOAT) AS INV_AMT
							  ,CAST(ROUND((R.INV_AMT/R.TTL_AMT)*100,2) AS FLOAT) INV_PCNT
							  ,R.FRT_CD AS FRT_CD
							  ,CAST(ROUND(R.FRT_INV_AMT,2) AS FLOAT) AS FRT_INV_AMT
							  ,CAST(ROUND((R.FRT_INV_AMT/R.INV_AMT)*100,2) AS FLOAT) AS FRT_PCNT
						  FROM (SELECT Y.TRDP_CD 
									  ,Y.TRDP_NM AS TRDP_NM
									  ,MAX(Y.TTL_AMT) AS TTL_AMT
									  ,MAX(Y.INV_AMT)  AS INV_AMT
									  ,Y.FRT_CD
		 							  ,SUM(Y.FRT_INV_AMT) AS FRT_INV_AMT
								 FROM ( SELECT  X.TRDP_CD
											   ,X.TRDP_NM
											   ,SUM(X.FRT_INV_AMT) OVER() AS TTL_AMT
											   ,SUM(X.FRT_INV_AMT) OVER(PARTITION BY X.TRDP_CD) AS INV_AMT
											   ,X.FRT_CD 
											   ,ISNULL(X.FRT_INV_AMT, 0) AS FRT_INV_AMT
										  FROM (SELECT MST.TRDP_CD
													  ,TRDP.ENG_NM AS TRDP_NM
													  ,MST.AIR_SEA_CLSS_CD + MST.BND_CLSS_CD DPMT_CD
													  ,PRNR.BL_TRDP_TP_CD VNDR_TP_CD
													  ,FRT.FRT_CD 
													  ,ISNULL(FRT.INV_AMT,0) AS FRT_INV_AMT
												  FROM TB_INV MST
												  JOIN TB_INV_DTL DTL
													ON MST.INV_SEQ = DTL.INV_SEQ
												  JOIN TB_FRT FRT
													ON MST.INV_SEQ = FRT.INV_SEQ
												   AND MST.TRDP_CD = FRT.TRDP_CD
												  LEFT OUTER JOIN TB_INTG_BL BL
													ON FRT.INTG_BL_SEQ = BL.INTG_BL_SEQ
												  LEFT OUTER JOIN TB_BL_PRNR PRNR
													ON BL.INTG_BL_SEQ = PRNR.INTG_BL_SEQ   
												  LEFT OUTER JOIN TB_TRDP TRDP
													ON TRDP.TRDP_CD =  MST.TRDP_CD   
												 WHERE MST.SELL_BUY_TP_CD ='B'
												   AND MST.DELT_FLG ='N'
											  <isNotNull property="s_ofc_cd" >
												   AND MST.RGST_OFC_CD = #s_ofc_cd#
				  							  </isNotNull>
											  <isEqual property="s_dt_clss_cd" compareValue="P">
												   <isNotNull property="s_prd_strdt" >		   
												   AND DTL.INV_POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
												   </isNotNull>	
											  </isEqual>
											  <isEqual property="s_dt_clss_cd" compareValue="I">
												   <isNotNull property="s_prd_strdt" >	   
												   AND DTL.INV_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
												   </isNotNull>	
											  </isEqual>
											  <isNotNull property="s_curr_cd">
			 						               AND DTL.INV_APLY_CURR_CD = #s_curr_cd#
			 						          </isNotNull>	
									       	  <isNotNull property="dptm_tp_opt">
												   AND MST.AIR_SEA_CLSS_CD + MST.BND_CLSS_CD IN ( $dptm_tp_opt$ )
											  </isNotNull>
											  <isNotNull property="vndr_tp_opt">
												   AND PRNR.BL_TRDP_TP_CD  $vndr_tp_opt$
											  </isNotNull>
												 UNION ALL
												SELECT MST.TRDP_CD
													  ,TRDP.ENG_NM AS TRDP_NM
													  ,'OT' DPMT_CD
													  ,'OT' VNDR_TP_CD
													  ,FRT.FRT_CD 
													  ,ISNULL(FRT.INV_AMT,0) AS FRT_INV_AMT
												  FROM TB_INV MST
												  JOIN TB_INV_DTL DTL
													ON MST.INV_SEQ = DTL.INV_SEQ
												  JOIN TB_FRT FRT
													ON MST.INV_SEQ = FRT.INV_SEQ
												   AND MST.TRDP_CD = FRT.TRDP_CD
												  LEFT OUTER JOIN TB_TRDP TRDP
													ON TRDP.TRDP_CD =  MST.TRDP_CD 
												 WHERE MST.SELL_BUY_TP_CD ='B'
												   AND MST.DELT_FLG ='N'
												   AND ISNULL(FRT.OTH_SEQ,'') != ''
											 <isNotNull property="s_ofc_cd" >
												   AND MST.RGST_OFC_CD = #s_ofc_cd#
				  							 </isNotNull>
											 <isEqual property="s_dt_clss_cd" compareValue="P">
											   <isNotNull property="s_prd_strdt" >		   
												   AND DTL.INV_POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
											   </isNotNull>	
											 </isEqual>
											 <isEqual property="s_dt_clss_cd" compareValue="I">
											   <isNotNull property="s_prd_strdt" >	   
												   AND DTL.INV_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
											   </isNotNull>	
											 </isEqual>
											 <isNotNull property="s_curr_cd">
			 						               AND DTL.INV_APLY_CURR_CD = #s_curr_cd#
			 						          </isNotNull>													   
												   ) X
										<isNotNull property="dptm_tp_ot_opt">
											  WHERE X.DPMT_CD IN ( $dptm_tp_ot_opt$ )
										</isNotNull>	   
											) Y
		 							GROUP BY Y.TRDP_CD
											,Y.TRDP_NM
											,Y.FRT_CD ) R
							) G
						 GROUP BY ROLLUP (G.RNK,G.TRDP_CD,G.TRDP_NM,G.INV_AMT ,G.INV_PCNT,G.FRT_CD,G.FRT_PCNT)
						 HAVING GROUPING_ID (G.RNK,G.TRDP_CD,G.TRDP_NM,G.INV_AMT ,G.INV_PCNT,G.FRT_CD,G.FRT_PCNT) IN (0,127)
					) A
				LEFT OUTER JOIN TB_FRT_CD FRT
					 ON FRT.FRT_CD = A.FRT_CD
    </select>

    <select id="searchAgentPerformanceReport" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.AgentReportVO">
	   /* PfmMgtSQL > searchAgentPerformanceReport */
		SELECT GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) AS GID
		      ,G.RNK
			  ,G.AGNT_TRDP_CD
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN 'TOTAL'
			        ELSE G.AGNT_TRDP_NM
			   END AS AGNT_TRDP_NM
			  ,MAX(G.TTL_AMT) AS TTL_AMT
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN MAX(G.TTL_AMT)
			        ELSE G.AGNT_VAL
			   END AS AGNT_VAL
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN (SUM(G.AGNT_VAL)/MAX(G.TTL_AMT))*100 
			        ELSE G.AGNT_PCNT
			   END AS AGNT_PCNT
		 FROM (SELECT $rank_cnt$
				       DENSE_RANK() OVER(ORDER BY A.AGNT_VAL DESC) AS RNK
				      ,A.AGNT_TRDP_CD AS AGNT_TRDP_CD
				      ,TRDP.ENG_NM AS AGNT_TRDP_NM
				      ,SUM(A.AGNT_VAL) OVER() AS TTL_AMT
				      ,CAST(ROUND(A.AGNT_VAL,2) AS FLOAT) AS AGNT_VAL 
				      ,CAST(ROUND((A.AGNT_VAL/SUM(A.AGNT_VAL) OVER())*100,2) AS FLOAT) AS AGNT_PCNT
				FROM (SELECT X.AGNT_TRDP_CD
							,CASE WHEN #sort_tp_opt# = 'CB' THEN X.CBM
								  WHEN #sort_tp_opt# = 'GW' THEN X.GRS_WGT
								  WHEN #sort_tp_opt# = 'CW' THEN X.CHG_WGT
							 END AS AGNT_VAL
						FROM ( SELECT PRNR.TRDP_CD AS AGNT_TRDP_CD
									  ,SUM(ISNULL(BL.GRS_WGT,0)) AS GRS_WGT
									  ,SUM(ISNULL(BL.MEAS,0)) AS CBM
									  ,SUM(ISNULL(BL.CHG_WGT,0)) AS CHG_WGT
								  FROM TB_INTG_BL BL
								  JOIN TB_ADD_INFO_BND BND
					                ON BL.INTG_BL_SEQ = BND.INTG_BL_SEQ
								  LEFT OUTER JOIN TB_BL_PRNR PRNR
									ON BL.INTG_BL_SEQ = PRNR.INTG_BL_SEQ   
								   AND PRNR.BL_TRDP_TP_CD = CASE WHEN BL.BIZ_CLSS_CD = 'H' AND  BL.HBL_TP_CD = 'TR' THEN 'P02'
																 WHEN BL.BIZ_CLSS_CD = 'H' AND  BL.HBL_TP_CD = 'CL' THEN 'S02'
																 ELSE 'P01'
															 END 
								 WHERE 1=1
								   AND BL.BIZ_CLSS_CD = 'H'
								   AND BL.DELT_FLG = 'N'
								   AND ISNULL(BL.SUB_MBL_FLG,'N') = 'N'
							  <isNotNull property="s_ofc_cd" >	   
								   AND BL.REF_OFC_CD = #s_ofc_cd#
							  </isNotNull>
							  <isNotNull property="s_prd_strdt" >	   
								   AND BL.POST_DT BETWEEN  #s_prd_strdt# AND #s_prd_enddt#
							  </isNotNull>
				       		  <isNotNull property="dptm_tp_opt">
								   AND BL.AIR_SEA_CLSS_CD + BND.BND_CLSS_CD IN ($dptm_tp_opt$)
							  </isNotNull>					  
								  GROUP BY PRNR.TRDP_CD ) X
							) A
						   LEFT OUTER JOIN TB_TRDP TRDP
						     ON A.AGNT_TRDP_CD = TRDP.TRDP_CD
			     WHERE A.AGNT_VAL > 0) G
		GROUP BY ROLLUP (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT)
		HAVING GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) IN (0,31)
    </select>
    
    <select id="searchAgentPerformanceTeuReport" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.AgentReportVO">
	    /* PfmMgtSQL.xml > searchAgentPerformanceTeuReport */
	    SELECT GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) AS GID
		      ,G.RNK
			  ,G.AGNT_TRDP_CD
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN 'TOTAL'
			        ELSE G.AGNT_TRDP_NM
			   END AS AGNT_TRDP_NM
			  ,MAX(G.TTL_AMT) AS TTL_AMT
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN MAX(G.TTL_AMT)
			        ELSE G.AGNT_VAL
			   END AS AGNT_VAL
			  ,CASE WHEN GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) = '31' THEN (SUM(G.AGNT_VAL)/MAX(G.TTL_AMT))*100 
			        ELSE G.AGNT_PCNT
			   END AS AGNT_PCNT
		 FROM (   
				SELECT $rank_cnt$
				       DENSE_RANK() OVER(ORDER BY A.AGNT_VAL DESC) AS RNK
				      ,A.AGNT_TRDP_CD AS AGNT_TRDP_CD
				      ,TRDP.ENG_NM AS AGNT_TRDP_NM
				      ,SUM(A.AGNT_VAL) OVER() AS TTL_AMT
				      ,CAST(ROUND(A.AGNT_VAL,2) AS FLOAT) AS AGNT_VAL 
				      ,ROUND((CAST(A.AGNT_VAL AS FLOAT)/SUM(A.AGNT_VAL) OVER())*100,2) AS AGNT_PCNT
				FROM ( SELECT PRNR.TRDP_CD AS AGNT_TRDP_CD
							  ,SUM(CASE WHEN SUBSTRING(CNTR.CNTR_TPSZ_CD,1,1)='2' THEN 1
							            WHEN SUBSTRING(CNTR.CNTR_TPSZ_CD,1,1)='4' THEN 2
							            ELSE 0
							       END) AGNT_VAL
						  FROM TB_INTG_BL BL
						  JOIN TB_ADD_INFO_BND BND
			                ON BL.INTG_BL_SEQ = BND.INTG_BL_SEQ
			              LEFT OUTER JOIN TB_CNTR_LIST CNTR
							ON BL.INTG_BL_SEQ = CNTR.INTG_BL_SEQ  
						  LEFT OUTER JOIN TB_BL_PRNR PRNR
							ON BL.INTG_BL_SEQ = PRNR.INTG_BL_SEQ   
						   AND PRNR.BL_TRDP_TP_CD = CASE WHEN BL.BIZ_CLSS_CD = 'H' AND  BL.HBL_TP_CD = 'TR' THEN 'P02'
														 WHEN BL.BIZ_CLSS_CD = 'H' AND  BL.HBL_TP_CD = 'CL' THEN 'S02'
														 ELSE 'P01'
													 END 
						 WHERE 1=1
   						   AND ISNULL(BL.SUB_MBL_FLG,'N') = 'N'
						   AND BL.BIZ_CLSS_CD = 'H'
						   AND BL.DELT_FLG = 'N'
						   AND BL.AIR_SEA_CLSS_CD = 'S'
						   AND BL.SHP_MOD_CD = 'FCL'
					  <isNotNull property="s_ofc_cd" >	   
						   AND BL.REF_OFC_CD = #s_ofc_cd#
					  </isNotNull>
					  <isNotNull property="s_prd_strdt" >	   
						   AND BL.POST_DT BETWEEN  #s_prd_strdt# AND #s_prd_enddt#
					  </isNotNull>
			      	  <isNotNull property="dptm_tp_opt">
						   AND BL.AIR_SEA_CLSS_CD + BND.BND_CLSS_CD IN ($dptm_tp_opt$)
					  </isNotNull>					  
						  GROUP BY PRNR.TRDP_CD 
					) A
				   LEFT OUTER JOIN TB_TRDP TRDP
				     ON A.AGNT_TRDP_CD = TRDP.TRDP_CD
			     WHERE A.AGNT_VAL > 0) G
		GROUP BY ROLLUP (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT)
		HAVING GROUPING_ID (G.RNK,G.AGNT_TRDP_CD,G.AGNT_TRDP_NM,G.AGNT_VAL,G.AGNT_PCNT) IN (0,31)
    </select>
    
    <select id="searchAgentPerformanceProfitReport" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.AgentReportVO">
	    /* PfmMgtSQL.xml > searchAgentPerformanceProfitReport */
		SELECT A.GID 
			  ,A.RNK AS RNK
			  ,A.TRDP_CD AS AGNT_TRDP_CD
			  ,CASE WHEN A.GID = 7 THEN 'TOTAL' 
			        ELSE A.TRDP_NM 
			    END AS AGNT_TRDP_NM
			  ,A.TTL_AMT AS TTL_AMT      
			  ,CAST(A.FRT_INV_AMT AS NCHAR(20))  AS AGNT_VAL
			  ,A.FRT_PCNT AS AGNT_PCNT
		  FROM (SELECT GROUPING_ID (G.RNK,G.TRDP_CD,G.TRDP_NM) GID 
					  ,CAST(G.RNK AS NCHAR(3)) AS RNK
					  ,G.TRDP_CD
					  ,G.TRDP_NM
					  ,MAX(TTL_AMT) AS TTL_AMT
					  ,SUM(G.FRT_INV_AMT) FRT_INV_AMT
					  ,SUM(G.FRT_PCNT) FRT_PCNT
				  FROM (SELECT $rank_cnt$
				               DENSE_RANK() OVER(ORDER BY R.FRT_INV_AMT DESC) RNK
							  ,R.TRDP_CD
							  ,R.TRDP_NM AS TRDP_NM
							  ,R.TTL_AMT
							  ,CAST(ROUND(R.FRT_INV_AMT,2) AS FLOAT) AS FRT_INV_AMT
							  ,CAST(ROUND((R.FRT_INV_AMT/R.TTL_AMT)*100,2) AS FLOAT) AS FRT_PCNT
						  FROM (SELECT Y.TRDP_CD 
									  ,Y.TRDP_NM AS TRDP_NM
									  ,MAX(Y.TTL_AMT) AS TTL_AMT
			 						  ,SUM(Y.FRT_INV_AMT) AS FRT_INV_AMT
								 FROM ( SELECT  X.TRDP_CD
											   ,X.TRDP_NM
											   ,SUM(X.FRT_INV_AMT) OVER() AS TTL_AMT
											   ,ISNULL(X.FRT_INV_AMT, 0) AS FRT_INV_AMT
										  FROM (SELECT MST.TRDP_CD
													  ,TRDP.ENG_NM AS TRDP_NM
													  ,MST.AIR_SEA_CLSS_CD + MST.BND_CLSS_CD DPMT_CD
													  ,PRNR.BL_TRDP_TP_CD VNDR_TP_CD
													  ,ISNULL(FRT.INV_AMT,0) - ISNULL(FRT.CR_AMT,0) AS FRT_INV_AMT
												  FROM TB_INV MST
												  JOIN TB_INV_DTL DTL
													ON MST.INV_SEQ = DTL.INV_SEQ
												  JOIN TB_FRT FRT
													ON MST.INV_SEQ = FRT.INV_SEQ
												   AND MST.TRDP_CD = FRT.TRDP_CD
												  LEFT OUTER JOIN TB_INTG_BL BL
													ON FRT.INTG_BL_SEQ = BL.INTG_BL_SEQ
												  LEFT OUTER JOIN TB_BL_PRNR PRNR
													ON BL.INTG_BL_SEQ = PRNR.INTG_BL_SEQ   
												   AND PRNR.BL_TRDP_TP_CD = CASE WHEN BL.BIZ_CLSS_CD = 'H' AND BL.HBL_TP_CD = 'TR' THEN 'P02'
												                                 WHEN BL.BIZ_CLSS_CD = 'H' AND BL.HBL_TP_CD = 'CL' THEN 'S02'
												                                 ELSE 'P01' 
													                         END
												  LEFT OUTER JOIN TB_TRDP TRDP
													ON TRDP.TRDP_CD =  MST.TRDP_CD    
												 WHERE MST.SELL_BUY_TP_CD IN ('D','C')
												   AND MST.DELT_FLG ='N'
												   AND ISNULL(BL.SUB_MBL_FLG,'N') = 'N'
											  <isNotNull property="s_ofc_cd" >
												   AND MST.RGST_OFC_CD = #s_ofc_cd#
				  							  </isNotNull>
											  <isNotNull property="s_prd_strdt" >	   	   
												   AND DTL.INV_POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
											  </isNotNull>	
											  <isNotNull property="s_curr_cd">
			 						               AND DTL.INV_APLY_CURR_CD = #s_curr_cd#
			 						          </isNotNull>	
									       	  <isNotNull property="dptm_tp_opt">
												   AND MST.AIR_SEA_CLSS_CD + MST.BND_CLSS_CD IN ( $dptm_tp_opt$ )
											  </isNotNull>
												 UNION ALL
												SELECT MST.TRDP_CD
													  ,TRDP.ENG_NM AS TRDP_NM
													  ,'OT' DPMT_CD
													  ,'OT' VNDR_TP_CD
													  ,ISNULL(FRT.INV_AMT,0) - ISNULL(FRT.CR_AMT,0) AS FRT_INV_AMT
												  FROM TB_INV MST
												  JOIN TB_INV_DTL DTL
													ON MST.INV_SEQ = DTL.INV_SEQ
												  JOIN TB_FRT FRT
													ON MST.INV_SEQ = FRT.INV_SEQ
												   AND MST.TRDP_CD = FRT.TRDP_CD
												  LEFT OUTER JOIN TB_TRDP TRDP
													ON TRDP.TRDP_CD =  MST.TRDP_CD 
												 WHERE MST.SELL_BUY_TP_CD IN ('D','C')
												   AND MST.DELT_FLG ='N'
												   AND ISNULL(FRT.OTH_SEQ,'') != ''
											 <isNotNull property="s_ofc_cd" >
												   AND MST.RGST_OFC_CD = #s_ofc_cd#
				  							 </isNotNull>

											 <isNotNull property="s_prd_strdt" >		   
												   AND DTL.INV_POST_DT BETWEEN #s_prd_strdt# AND #s_prd_enddt#
											  </isNotNull>	
											 <isNotNull property="s_curr_cd">
			 						               AND DTL.INV_APLY_CURR_CD = #s_curr_cd#
			 						          </isNotNull>													   
												   ) X
										<isNotNull property="dptm_tp_ot_opt">
											  WHERE X.DPMT_CD IN ( $dptm_tp_ot_opt$ )
										</isNotNull>	   
											) Y
		 							GROUP BY Y.TRDP_CD
											,Y.TRDP_NM
									) R
							) G
						 GROUP BY ROLLUP (G.RNK,G.TRDP_CD,G.TRDP_NM)
						 HAVING GROUPING_ID (G.RNK,G.TRDP_CD,G.TRDP_NM) IN (0,7)
					) A
    </select>
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchVolPrfByMonthCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    <dynamic>
		 /** PfmMgtSQL.xml > searchVolPrfByMonthCurrList **/
		 SELECT bl.curr_cd as curr_cd
	          ,bl.inv_post_mm as aply_fm_dt
        	  ,0 as rate
	      FROM (
	      		<isEqual property="s_uncheck_flg" compareValue="T">
	      		/** uncheck **/
	      		SELECT frt.inv_curr_cd as curr_cd
					  ,substring(frt.inv_post_dt,1,6)  as inv_post_mm
            	 	  ,frt.inv_post_dt as inv_post_dt
            	FROM tb_frt frt WITH(NOLOCK) 
            	WHERE 1=2
	      		</isEqual>
	      		<isEqual property="s_fms_flg" compareValue="T">
				/** FMS **/
				SELECT frt.inv_curr_cd as curr_cd
					  ,substring(frt.inv_post_dt,1,6)  as inv_post_mm
            	 	  ,frt.inv_post_dt as inv_post_dt
				FROM    tb_intg_bl bl  WITH(NOLOCK) 
						JOIN tb_add_info_bnd bnd  WITH(NOLOCK) 
							ON bl.intg_bl_seq = bnd.intg_bl_seq 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON bl.intg_bl_seq = Isnull(frt.intg_bl_seq_2, frt.intg_bl_seq)
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq		
						LEFT OUTER JOIN tb_intg_bl_rlt rlt  WITH(NOLOCK) 
							ON bl.intg_bl_seq = rlt.intg_bl_seq 
								AND rlt.delt_flg = 'N' 
						LEFT OUTER JOIN tb_intg_bl mbl  WITH(NOLOCK) 
							ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq 
								AND mbl.biz_clss_cd = 'M' 
								AND mbl.delt_flg = 'N'     
				WHERE  bl.delt_flg = 'N'
				  AND  bnd.delt_flg = 'N'
				  AND  frt.delt_flg = 'N' 
				  AND  inv.delt_flg = 'N' 
				  AND  ISNULL(frt.air_sea_clss_cd,'') != 'G'
				<isNotNull property="s_ofc_cd">
						AND BL.ref_ofc_cd = #s_ofc_cd#
				</isNotNull>	
				<isNotNull property="s_air_sea_clss_cd">
						AND BL.AIR_SEA_CLSS_CD IN ($s_air_sea_clss_cd$)
				</isNotNull>	
				<isNotNull property="s_bnd_clss_cd">
						AND BND.BND_CLSS_CD IN ($s_bnd_clss_cd$)
				</isNotNull>				
				<isEqual property="s_dt_clss_cd" compareValue="PDT">
				AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="IDT">
				AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETD">
				AND  bl.etd_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETA">
				AND  bl.eta_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="MBL">
				AND  mbl.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
				</isEqual>
		       GROUP BY frt.inv_curr_cd,
            			frt.inv_post_dt 
               </isEqual>
               			
               <isEqual property="s_oth_flg" compareValue="T">
               
               <isEqual property="s_fms_flg" compareValue="T">
				UNION
			   </isEqual>	
				/** Other **/
				SELECT frt.inv_curr_cd as curr_cd
					  ,substring(frt.inv_post_dt,1,6)  as inv_post_mm
            	 	  ,frt.inv_post_dt as inv_post_dt				      		 			
				FROM    tb_oth_sales bl  WITH(NOLOCK) 										
					JOIN tb_frt frt WITH(NOLOCK)  
						ON ISNULL(frt.oth_seq, '') = bl.oth_seq
					JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq			
				WHERE  bl.delt_flg = 'N'
				  AND  frt.delt_flg = 'N' 
				  AND  inv.delt_flg = 'N' 
				  AND  ISNULL(frt.air_sea_clss_cd,'') != 'G'
				<isNotNull property="s_ofc_cd">
						AND bl.ofc_cd = #s_ofc_cd#
				</isNotNull>									
				<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="IDT">
				    AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  bl.etd_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  bl.eta_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  bl.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
				</isEqual>	
				 GROUP BY frt.inv_curr_cd,
            			  frt.inv_post_dt
				</isEqual>		
				
				<isEqual property="s_wms_flg" compareValue="T">
               
               <isEqual property="s_fms_oth_flg" compareValue="T">
				UNION
			   </isEqual>	
				/** WMS **/
				SELECT frt.inv_curr_cd as curr_cd
					  ,substring(frt.inv_post_dt,1,6)  as inv_post_mm
            	 	  ,frt.inv_post_dt as inv_post_dt				      		 			
				FROM    tb_wm_doc_mst bl  WITH(NOLOCK) 										
					JOIN tb_frt frt WITH(NOLOCK)  
						ON ISNULL(frt.wms_seq, '') = bl.wm_doc_seq
					JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq			
				WHERE  bl.delt_flg = 'N'
				  AND  frt.delt_flg = 'N' 
				  AND  inv.delt_flg = 'N' 
				  AND  ISNULL(frt.air_sea_clss_cd,'') != 'G'
				<isNotNull property="s_ofc_cd">
						AND bl.ofc_cd = #s_ofc_cd#
				</isNotNull>									
				<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="IDT">
				    AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  1=2
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  1=2
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  bl.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
				</isEqual>	
				 GROUP BY frt.inv_curr_cd,
            			  frt.inv_post_dt
				</isEqual>		    
		       ) bl
		       LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_mm WITH(NOLOCK)               
			        ON  fixc_mm.fm_curr_cd = bl.curr_cd    
			        AND fixc_mm.dt_clss_cd = 'M' 
			        AND substring(fixc_mm.aply_fm_dt,1,6) = bl.inv_post_mm
			        AND fixc_mm.delt_flg = 'N'                                                       
			        AND fixc_mm.to_curr_cd = '$s_curr_cd$'   
			   LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_dd WITH(NOLOCK)               
			        ON  fixc_dd.fm_curr_cd = bl.curr_cd    
			        AND fixc_dd.dt_clss_cd = 'D' 
			        AND fixc_dd.aply_fm_dt = bl.inv_post_dt
			        AND fixc_dd.delt_flg = 'N'                                                       
			        AND fixc_dd.to_curr_cd = '$s_curr_cd$'
		WHERE ISNULL(fixc_dd.xch_rt_ut,fixc_mm.xch_rt_ut) IS NULL
		  AND bl.curr_cd != '$s_curr_cd$'   
		GROUP BY
		    bl.curr_cd,
		    bl.inv_post_mm
		</dynamic>
    </select>
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchVolumeProfitByMonth" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.VolumePerformanceVO">
   		/* PfmMgtSQL.xml > searchVolumeProfitByMonth */
	    <dynamic>		
		WITH wbl 
		AS (
			SELECT gvbl.intg_bl_seq
			      ,SUBSTRING(gvbl.period_dt,1,6)	AS period_dt				  
				  ,MAX(gvbl.air_sea_clss_cd) 							AS air_sea_clss_cd					
				  ,MAX(gvbl.bnd_clss_cd) 								AS bnd_clss_cd							
				  ,MAX(gvbl.biz_clss_cd) 								AS biz_clss_cd		  
				  ,MAX(gvbl.mbl_intg_bl_seq) 							AS mbl_intg_bl_seq	
				  ,MAX(gvbl.hbl_tp_cd) 									AS hbl_tp_cd
				  ,MAX(gvbl.shp_mod_cd) 								AS shp_mod_cd
				  ,MAX(gvbl.sub_mbl_flg) 								AS sub_mbl_flg				  
				  ,MAX(gvbl.ref_ofc_cd) 								AS ref_ofc_cd
				  ,MAX(gvbl.mbl_no) 									AS mbl_no
				  ,MAX(gvbl.bl_no) 										AS bl_no
				  ,MAX(gvbl.ref_no) 									AS ref_no		
				  ,SUM(gvbl.ar_inv_amt)									AS ar_inv_amt 
				  ,SUM(gvbl.ap_inv_amt)									AS ap_inv_amt 
				  ,SUM(gvbl.db_inv_amt - gvbl.cr_inv_amt)	  		    AS dc_inv_amt
				  ,SUM(gvbl.mbl_ar_inv_amt)         					AS mbl_ar_inv_amt        
			      ,SUM(gvbl.mbl_ap_inv_amt)         					AS mbl_ap_inv_amt 
			      ,SUM(gvbl.mbl_db_inv_amt - gvbl.mbl_cr_inv_amt)       AS mbl_dc_inv_amt 				  
				  ,MAX(gvbl.meas) 										AS meas									
				  ,MAX(gvbl.grs_wgt) 									AS grs_wgt									
				  ,MAX(gvbl.chg_wgt) 									AS chg_wgt	
				  ,MAX(gvbl.cbm)                                        AS cbm 	 
				  ,MAX(gvbl.hbl_volume) 								AS hbl_volume
				  ,MAX(gvbl.mbl_volume) 								AS mbl_volume    
			  FROM (
					SELECT vbl.intg_bl_seq
						  ,vbl.air_sea_clss_cd
						  ,vbl.bnd_clss_cd
						  ,vbl.biz_clss_cd	  
						  ,vbl.mbl_intg_bl_seq	
						  ,vbl.hbl_tp_cd
						  ,vbl.mbl_tp_cd
						  ,vbl.shp_mod_cd
						  ,vbl.sub_mbl_flg
						  ,vbl.ref_ofc_cd	
						  ,vbl.mbl_no
						  ,vbl.bl_no
						  ,vbl.ref_no
						  <isEqual property="s_dt_clss_cd" compareValue="PDT">
						  ,vbl.post_dt 									AS period_dt
						  </isEqual>
						   <isEqual property="s_dt_clss_cd" compareValue="IDT">
						  ,vbl.post_dt 									AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="ETD">
						  ,vbl.etd_period_dt 							AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="ETA">
						  ,vbl.eta_period_dt							AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="MBL">
						  ,CONVERT(VARCHAR(8), vbl.mbl_period_dt, 112) AS period_dt
						  </isEqual>	  
		    			  <isEqual property="s_vat_flg" compareValue="T">
		    			  	<isEqual property="s_tax_flg" compareValue="F">
							  ,vbl.pfmc_sum_ar_inv_amt * $ex_rate_col$ 			AS ar_inv_amt 
							  ,vbl.pfmc_sum_ap_inv_amt * $ex_rate_col$ 		   	AS ap_inv_amt 
							  ,vbl.pfmc_sum_db_inv_amt * $ex_rate_col$        	AS db_inv_amt 
							  ,vbl.pfmc_sum_cr_inv_amt * $ex_rate_col$        	AS cr_inv_amt
							  ,vbl.mbl_pfmc_sum_ar_inv_amt * $ex_rate_col$ 		AS mbl_ar_inv_amt 
							  ,vbl.mbl_pfmc_sum_ap_inv_amt * $ex_rate_col$ 	   	AS mbl_ap_inv_amt 
							  ,vbl.mbl_pfmc_sum_db_inv_amt * $ex_rate_col$     	AS mbl_db_inv_amt 
							  ,vbl.mbl_pfmc_sum_cr_inv_amt * $ex_rate_col$     	AS mbl_cr_inv_amt
							</isEqual> 
							<isEqual property="s_tax_flg" compareValue="T">
			    			  ,vbl.sum_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.sum_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.sum_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
							  ,vbl.sum_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
							  ,vbl.mbl_sum_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_sum_ap_inv_amt * $ex_rate_col$ 		   	AS mbl_ap_inv_amt 
							  ,vbl.mbl_sum_db_inv_amt * $ex_rate_col$       	AS mbl_db_inv_amt 
							  ,vbl.mbl_sum_cr_inv_amt * $ex_rate_col$      		AS mbl_cr_inv_amt
						  	</isEqual> 
						  </isEqual>	
						  <isEqual property="s_vat_flg" compareValue="F">
						      <isEqual property="s_tax_flg" compareValue="F">
			    			  ,vbl.pfmc_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.pfmc_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.pfmc_db_inv_amt * $ex_rate_col$          	AS db_inv_amt 
							  ,vbl.pfmc_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
							  ,vbl.mbl_pfmc_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_pfmc_ap_inv_amt * $ex_rate_col$ 		 	AS mbl_ap_inv_amt 
							  ,vbl.mbl_pfmc_db_inv_amt * $ex_rate_col$      	AS mbl_db_inv_amt 
							  ,vbl.mbl_pfmc_cr_inv_amt * $ex_rate_col$       	AS mbl_cr_inv_amt 
							  </isEqual>
							  <isEqual property="s_tax_flg" compareValue="T">
			    			  ,vbl.ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
							  ,vbl.cr_inv_amt * $ex_rate_col$          		AS cr_inv_amt
							  ,vbl.mbl_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_ap_inv_amt * $ex_rate_col$ 		  	AS mbl_ap_inv_amt 
							  ,vbl.mbl_db_inv_amt * $ex_rate_col$          	AS mbl_db_inv_amt 
							  ,vbl.mbl_cr_inv_amt * $ex_rate_col$         	AS mbl_cr_inv_amt
							 </isEqual>
						 </isEqual>  
						 ,vbl.meas											
						 ,vbl.grs_wgt
						 ,vbl.chg_wgt
						 ,vbl.cbm         
						 ,vbl.hbl_volume
						 ,vbl.mbl_volume				
					FROM dbo.VW_PFMC vbl WITH(NOLOCK)
							LEFT OUTER JOIN 
								tb_finc_perf_xcrt dd_ex_rt WITH(NOLOCK)           
					        	ON  dd_ex_rt.fm_curr_cd = vbl.inv_curr_cd    
						        AND dd_ex_rt.delt_flg = 'N'                                                       
						        AND dd_ex_rt.to_curr_cd = #s_curr_cd#   
						        AND dd_ex_rt.dt_clss_cd = 'D' 
						        AND dd_ex_rt.aply_fm_dt = vbl.inv_post_dt    
						    LEFT OUTER JOIN 
						    	tb_finc_perf_xcrt mm_ex_rt WITH(NOLOCK)             
					        	ON  mm_ex_rt.fm_curr_cd = vbl.inv_curr_cd   
						        AND mm_ex_rt.delt_flg = 'N'                                                       
						        AND mm_ex_rt.to_curr_cd = #s_curr_cd#   
						        AND mm_ex_rt.dt_clss_cd = 'M' 
						        AND substring(mm_ex_rt.aply_fm_dt,1,6) = substring(vbl.inv_post_dt,1,6)
			                LEFT OUTER JOIN 
			                	($one_curr_rate_sql$) gd_ex_rt 
			                 	ON gd_ex_rt.curr_cd = vbl.inv_curr_cd  
			                 	AND gd_ex_rt.aply_fm_dt = substring(vbl.inv_post_dt,1,6)     	
					WHERE  1=1
					<isNotNull property="s_air_sea_clss_cd">
						AND vbl.AIR_SEA_CLSS_CD IN ($s_air_sea_clss_cd$)
					</isNotNull>		
					<isNotNull property="s_bnd_clss_cd">
						AND vbl.BND_CLSS_CD IN ($s_bnd_clss_cd$)
					</isNotNull>			
					<isNotNull property="s_ofc_cd">
					AND  vbl.ref_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  vbl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  vbl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  vbl.etd_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  vbl.eta_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  vbl.mbl_period_dt BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
					</isEqual>				
					) gvbl 
		    GROUP  BY gvbl.intg_bl_seq, gvbl.period_dt
		)
		,wcntr
		AS ( 
			SELECT cwbl.intg_bl_seq
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' THEN ISNULL(cwbl.teu, 0) ELSE 0 END)	as fcl_teu
		          ,SUM(CASE WHEN cwbl.cntr_intg_bl_seq = '' THEN 0 ELSE 1 END)					as cntr_cnt
			FROM (	SELECT  cbl.intg_bl_seq
			               ,ISNULL(cntr.intg_bl_seq, '') AS cntr_intg_bl_seq
			               ,cbl.shp_mod_cd 
			               ,cntr_cd.teu
			               ,rank() over(partition by cbl.mbl_intg_bl_seq, cntr.cntr_no order by cbl.intg_bl_seq) AS cntr_rank
					FROM  wbl cbl WITH(NOLOCK) 
				       JOIN tb_cntr_list cntr WITH(NOLOCK)  ON cntr.intg_bl_seq = cbl.intg_bl_seq AND cntr.delt_flg = 'N'
					   LEFT OUTER JOIN tb_cntr_tpsz cntr_cd WITH(NOLOCK)  ON cntr_cd.cntr_tpsz_cd = cntr.cntr_tpsz_cd AND cntr_cd.delt_flg = 'N'
				 ) cwbl	   
		WHERE  1=1
		AND    cwbl.cntr_rank = 1
		group by cwbl.intg_bl_seq
		)
		, sum_profit 
		AS (	
		SELECT  bl.ref_ofc_cd
			   ,bl.dept_nm
			   ,bl.shp_mod_cd
			   ,bl.dept_seq
               ,bl.shp_mod_seq
			   ,SUM(bl.vol)											AS	vol 
			   ,SUM(bl.teu)											AS	teu
			   ,SUM(bl.cntr_cnt)									AS	cntr_cnt
			   ,SUM(bl.chg_wgt)										AS	chg_wgt
			   ,SUM(bl.grs_wgt)										AS	grs_wgt	
			   ,SUM(profit_amt)										AS  profit	
			   ,SUM(CASE WHEN prf_vol = 0 THEN 0 ELSE profit_amt / bl.prf_vol END)	AS prf_avg	   
				<isNotNull>
					<iterate property="arr_sql_col_opt">
		       			$arr_sql_col_opt[]$
					</iterate>
				</isNotNull>				
		  FROM (
		        SELECT swbl.mbl_intg_bl_seq
					  ,swbl.ref_ofc_cd 
					  ,swbl.dept_nm
					  ,swbl.dept_seq
					  ,swbl.shp_mod_seq  
					  ,swbl.shp_mod_cd				
					  ,swbl.period_dt										
					  ,SUM(swbl.grs_wgt)	AS	grs_wgt 										
					  ,SUM(swbl.chg_wgt)	AS 	chg_wgt									
					  ,SUM(swbl.vol)		AS  vol		
					  ,SUM(swbl.teu)		AS  teu
					  ,SUM(cntr_cnt)		AS  cntr_cnt						 
					  ,SUM(prf_vol)			AS  prf_vol	
					  ,(SUM(swbl.profit_ar_amt) + MAX(swbl.mbl_profit_ar_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume))) 
						- (SUM(swbl.profit_ap_amt) + MAX(swbl.mbl_profit_ap_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)))
						+ (SUM(swbl.profit_dc_amt) + MAX(swbl.mbl_profit_dc_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume))) 
						as profit_amt
		  		  FROM (
						SELECT  pwbl.intg_bl_seq
						       ,pwbl.mbl_intg_bl_seq
							   ,pwbl.ref_ofc_cd 
							   ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O'
									  THEN 'Ocean Export'
									  WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I'
									  THEN 'Ocean Import'
									  WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O'
									  THEN 'Air Export'
									  WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I'
									  THEN 'Air Import'
									  WHEN pwbl.air_sea_clss_cd = 'W' 
									  THEN 'Warehouse'
									  ELSE 'Other'
								END) as dept_nm
							  ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O'
									 THEN '1'
									 WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I'
									 THEN '2'
									 WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O'
									 THEN '3'
									 WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I'
									 THEN '4'
									 ELSE '5'
							   END) as dept_seq
							  ,(CASE WHEN pwbl.shp_mod_cd = 'FCL' 
									 THEN '1'
									 WHEN pwbl.shp_mod_cd = 'LCL' 
									 THEN '2'
									 WHEN pwbl.shp_mod_cd = 'FAK' 
									 THEN '3'
									 WHEN pwbl.shp_mod_cd = 'BLK' 
									 THEN '4'
							   END)	shp_mod_seq  
							  ,pwbl.shp_mod_cd				
							  ,pwbl.period_dt										
							  ,pwbl.grs_wgt										
							  ,pwbl.chg_wgt										
							  ,pwbl.cbm																	as vol		
							  ,ISNULL(cntr.fcl_teu, 0)													as teu
							  ,ISNULL(cntr.cntr_cnt, 0)													as cntr_cnt						 
							  ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' 
									 THEN ISNULL(cntr.cntr_cnt, 0)	                                               
									 WHEN pwbl.air_sea_clss_cd = 'A'
									 THEN ISNULL(pwbl.chg_wgt, 0)                                                
									 ELSE 0                                                           
								 END) as prf_vol 	
		    				  ,pwbl.ar_inv_amt 					as profit_ar_amt
		    				  ,ISNULL(pwbl.mbl_ar_inv_amt, 0)	as mbl_profit_ar_amt
							  ,pwbl.ap_inv_amt 				 	as profit_ap_amt
							  ,ISNULL(pwbl.mbl_ap_inv_amt, 0)	as mbl_profit_ap_amt
							  ,pwbl.dc_inv_amt					as profit_dc_amt
							  ,ISNULL(pwbl.mbl_dc_inv_amt, 0) 	as mbl_profit_dc_amt								
							  ,pwbl.hbl_volume as hbl_volume
							  ,pwbl.mbl_volume as mbl_volume   					 
						FROM  wbl pwbl WITH(NOLOCK) 
								LEFT OUTER JOIN wcntr cntr WITH(NOLOCK) ON pwbl.intg_bl_seq = cntr.intg_bl_seq
				) swbl		
				GROUP BY 	 
				swbl.ref_ofc_cd
			   ,swbl.dept_nm
			   ,swbl.dept_seq
			   ,swbl.shp_mod_cd
			   ,swbl.shp_mod_seq
			   ,swbl.mbl_intg_bl_seq 
			   ,swbl.period_dt	
		) bl
		GROUP BY  
	        bl.ref_ofc_cd
		   ,bl.dept_nm
		   ,bl.dept_seq
		   ,bl.shp_mod_cd
		   ,bl.shp_mod_seq
	    ) 
	   
		select inval.*
			   ,tgt_amt_1 + tgt_amt_2 + tgt_amt_3 + tgt_amt_4 + tgt_amt_5 + tgt_amt_6 + 
				tgt_amt_7 + tgt_amt_8 + tgt_amt_9 + tgt_amt_10 + tgt_amt_11 + tgt_amt_12 as tot_tgt_amt
			   ,(ofc_incnt_pct_1 + ofc_incnt_pct_2 + ofc_incnt_pct_3 + ofc_incnt_pct_4 + ofc_incnt_pct_5 + ofc_incnt_pct_6 +
				ofc_incnt_pct_7 + ofc_incnt_pct_8 + ofc_incnt_pct_9 + ofc_incnt_pct_10 + ofc_incnt_pct_11 + ofc_incnt_pct_12) / incnt_cnt as tot_ofc_incnt_pct
			   ,(opr_incnt_pct_1 + opr_incnt_pct_2 + opr_incnt_pct_3 + opr_incnt_pct_4 + opr_incnt_pct_5 + opr_incnt_pct_6 +
				opr_incnt_pct_7 + opr_incnt_pct_8 + opr_incnt_pct_9 + opr_incnt_pct_10 + opr_incnt_pct_11 + opr_incnt_pct_12) / incnt_cnt as tot_opr_incnt_pct
			   ,(acctg_incnt_pct_1 + acctg_incnt_pct_2 + acctg_incnt_pct_3 + acctg_incnt_pct_4 + acctg_incnt_pct_5 + acctg_incnt_pct_6 +
				acctg_incnt_pct_7 + acctg_incnt_pct_8 + acctg_incnt_pct_9 + acctg_incnt_pct_10 + acctg_incnt_pct_11 + acctg_incnt_pct_12) / incnt_cnt as tot_acctg_incnt_pct
		from   (
				select prf.*
					   ,ISNULL(incnt_cnt,1) as incnt_cnt									   
					   
					   <isNotNull>
				           <iterate property="arr_sql_col_opt2">
		       		   	       $arr_sql_col_opt2[]$
				    	   </iterate>
			    	   </isNotNull>
					   
				from (
						SELECT *,ROW_NUMBER() OVER (partition by ref_ofc_cd order by ref_ofc_cd, dept_seq, shp_mod_seq) as ROWNUM
						  FROM sum_profit
					  ) prf
				left outer join (select OFC_CD 
										,COUNT(*) as incnt_cnt
										
										<isNotNull>
				           					<iterate property="arr_sql_col_opt3">
		       		   	       					$arr_sql_col_opt3[]$
				    	   					</iterate>
			    	   					</isNotNull>
																								
								   from TB_OFC_ADD_INFO
								  where yrmon + '01' BETWEEN #s_prd_strdt# AND #s_prd_enddt#  
								  <isNotNull property="s_ofc_cd">
									AND ofc_cd  = #s_ofc_cd#
								  </isNotNull>        
									AND delt_flg = 'N'         
									AND use_flg = 'Y'     
								  group by OFC_CD     
								) incnt on prf.ref_ofc_cd = incnt.OFC_CD and ROWNUM = 1
			   ) inval
	    </dynamic>	
    </select>
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchVolumeProfitCurrList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitReportVO">
	    <dynamic>
	    /** PfmMgtSQL.xml > searchVolumeProfitCurrList **/
	    SELECT bl.curr_cd as curr_cd
	          ,substring(bl.inv_post_dt,1,6) as aply_fm_dt
        	  ,0 as rate
	      FROM (
	      		<isEqual property="s_sys_flg" compareValue="FMS">
					/** FMS **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM    tb_intg_bl bl  WITH(NOLOCK) 
						JOIN tb_add_info_bnd bnd  WITH(NOLOCK) 
							ON bl.intg_bl_seq = bnd.intg_bl_seq 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON bl.intg_bl_seq = Isnull(frt.intg_bl_seq_2, frt.intg_bl_seq) 	
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq							
						LEFT OUTER JOIN tb_intg_bl_rlt rlt  WITH(NOLOCK) 
							ON bl.intg_bl_seq = rlt.intg_bl_seq  AND rlt.delt_flg = 'N' 
						LEFT OUTER JOIN tb_intg_bl mbl  WITH(NOLOCK) 
							ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'     
					WHERE  bl.delt_flg  = 'N'
					AND    bnd.delt_flg = 'N'
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND    ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotEmpty property="s_air_sea_opt">
					AND  bl.air_sea_clss_cd = #s_air_sea_opt#
					</isNotEmpty> 
					<isNotEmpty property="s_bnd_clss_cd">
					AND  bnd.bnd_clss_cd  IN ($s_bnd_clss_cd$)
					</isNotEmpty>
					<isNotNull property="s_ofc_cd">
					AND  bl.ref_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  bl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  bl.etd_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  bl.eta_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  mbl.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
					</isEqual>
		       		GROUP BY frt.inv_curr_cd,
            				 frt.inv_post_dt   
               </isEqual>
               <isEqual property="s_sys_flg" compareValue="OTH">
					/** OTH **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM tb_oth_sales oth  WITH(NOLOCK) 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON oth.oth_seq = frt.oth_seq
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq	
					WHERE  oth.delt_flg = 'N' 
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND  ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotNull property="s_ofc_cd">
					AND  oth.ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  oth.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  oth.etd_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  oth.eta_dt_tm BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  oth.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1   
					</isEqual>
		            GROUP BY frt.inv_curr_cd,
            			     frt.inv_post_dt   
               </isEqual>
               <isEqual property="s_sys_flg" compareValue="WMS">
					/** WMS **/
					SELECT frt.inv_curr_cd as curr_cd
	            	 	  ,frt.inv_post_dt as inv_post_dt
					FROM tb_wm_doc_mst wms  WITH(NOLOCK) 
						JOIN tb_frt frt WITH(NOLOCK)  
							ON wms.wm_doc_seq = frt.wms_seq
						JOIN tb_inv inv WITH(NOLOCK)  
							ON frt.inv_seq = inv.inv_seq	
					WHERE  wms.delt_flg = 'N' 
					AND    frt.delt_flg = 'N'
					AND    inv.delt_flg = 'N'
					AND  ISNULL(frt.air_sea_clss_cd,'') != 'G'
					<isNotNull property="s_ofc_cd">
					AND  wms.ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  wms.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  frt.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  1=2
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  1=2
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  wms.rgst_tms BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1   
					</isEqual>
		            GROUP BY frt.inv_curr_cd,
            			     frt.inv_post_dt   
               </isEqual>
		       ) bl
		       LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_mm  WITH(NOLOCK)            
			        ON  fixc_mm.fm_curr_cd = bl.curr_cd    
			        AND fixc_mm.dt_clss_cd = 'M' 
			        AND substring(fixc_mm.aply_fm_dt,1,6) = substring(bl.inv_post_dt,1,6) 
			        AND fixc_mm.delt_flg = 'N'                                                       
			        AND fixc_mm.to_curr_cd = '$s_curr_cd$'   
			   LEFT OUTER JOIN
			    tb_finc_perf_xcrt fixc_dd  WITH(NOLOCK)            
			        ON  fixc_dd.fm_curr_cd = bl.curr_cd    
			        AND fixc_dd.dt_clss_cd = 'D' 
			        AND fixc_dd.aply_fm_dt = bl.inv_post_dt
			        AND fixc_dd.delt_flg = 'N'                                                       
			        AND fixc_dd.to_curr_cd = '$s_curr_cd$'
		WHERE ISNULL(fixc_dd.xch_rt_ut,fixc_mm.xch_rt_ut) IS NULL
		  AND bl.curr_cd != '$s_curr_cd$'   
		GROUP BY
		    bl.curr_cd,
		    substring(bl.inv_post_dt,1,6)
		</dynamic>
    </select>
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchVolumeAndProfit" remapResults="true" parameterClass="HashMap" resultClass="HashMap">
   		/* PfmMgtSQL.xml > searchVolumeAndProfit */
		<dynamic>
		
		WITH wbl 
		AS (
			SELECT gvbl.intg_bl_seq
				  ,SUBSTRING(gvbl.period_dt,1,8)						AS period_dt
				  ,MAX(gvbl.air_sea_clss_cd) 							AS air_sea_clss_cd					
				  ,MAX(gvbl.bnd_clss_cd) 								AS bnd_clss_cd							
				  ,MAX(gvbl.biz_clss_cd) 								AS biz_clss_cd		  
				  ,MAX(gvbl.mbl_intg_bl_seq) 							AS mbl_intg_bl_seq	
				  ,MAX(gvbl.hbl_tp_cd) 									AS hbl_tp_cd
				  ,MAX(gvbl.sub_mbl_flg) 								AS sub_mbl_flg
				  ,MAX(gvbl.ref_ofc_cd) 								AS ref_ofc_cd
				  ,MAX(gvbl.mbl_no) 									AS mbl_no
				  ,MAX(gvbl.bl_no) 										AS bl_no
				  ,MAX(gvbl.ref_no) 									AS ref_no		
				  ,MAX(gvbl.agent_nm)									AS agent_nm
				  ,MAX(gvbl.shpr_nm)									AS shpr_nm
				  ,MAX(gvbl.cnee_nm)									AS cnee_nm
				  ,MAX(gvbl.cust_nm)									AS cust_nm
				  ,MAX(gvbl.acc_grp_id)									AS acc_grp_id	
				  ,MAX(gvbl.carr_nm)									AS carr_nm
				  ,MAX(gvbl.vsl_flt)									AS vsl_flt
				  ,MAX(gvbl.pol_nm)										AS pol_nm
				  ,MAX(gvbl.pod_nm)										AS pod_nm
				  ,MAX(gvbl.del_nm)										AS del_nm
				  ,MAX(gvbl.etd_dt_tm)									AS etd_dt_tm
				  ,MAX(gvbl.eta_dt_tm)									AS eta_dt_tm
				  ,MAX(gvbl.fnl_dest_nm)								AS fnl_dest_nm
				  ,MAX(gvbl.lane_cd)									AS lane_cd
				  ,MAX(gvbl.inco_cd)									AS inco_cd
				  ,MAX(gvbl.rep_cmdt_nm)								AS rep_cmdt_nm
				  ,MAX(gvbl.cargo_tp_nm)								AS cargo_tp_nm
				  ,MAX(gvbl.sls_usr_nm)									AS sls_usr_nm
				  ,MAX(gvbl.opr_usr_nm)									AS opr_usr_nm
		    	  ,SUM(gvbl.ar_inv_amt)									AS ar_inv_amt 
				  ,SUM(gvbl.ap_inv_amt)									AS ap_inv_amt 
				  ,SUM(gvbl.db_inv_amt)	  		    					AS db_inv_amt  
				  ,SUM(gvbl.cr_inv_amt)									AS cr_inv_amt 
				  ,SUM(gvbl.db_inv_amt - gvbl.cr_inv_amt)	  		    AS dc_inv_amt
				  ,SUM(gvbl.mbl_ar_inv_amt)         					AS mbl_ar_inv_amt        
			      ,SUM(gvbl.mbl_ap_inv_amt)         					AS mbl_ap_inv_amt        
			      ,SUM(gvbl.mbl_db_inv_amt)              				AS mbl_db_inv_amt         
			      ,SUM(gvbl.mbl_cr_inv_amt)         					AS mbl_cr_inv_amt        
			      ,SUM(gvbl.mbl_db_inv_amt - gvbl.mbl_cr_inv_amt)       AS mbl_dc_inv_amt 
				  ,MAX(gvbl.meas) 										AS meas									
				  ,MAX(gvbl.grs_wgt) 									AS grs_wgt									
				  ,MAX(gvbl.chg_wgt) 									AS chg_wgt		 
				  ,MAX(gvbl.hbl_volume) 								AS hbl_volume
				  ,MAX(gvbl.mbl_volume) 								AS mbl_volume
				  ,gvbl.shp_mod_cd	 
				  ,gvbl.nomi_flg											
				  ,MAX(gvbl.cbm)                                        AS cbm 
				  ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_free
		          ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_nomi
		          ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_col
				  ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_etc
				  ,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_free
		          ,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_nomi
		          ,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_col
				  ,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_etc         
				  ,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_free
		          ,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_nomi
		          ,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_col
				  ,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_etc
				  ,(CASE WHEN gvbl.nomi_flg = 'N' THEN 1 			ELSE 0 END)			as free_hbl
				  ,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as free_gwt
				  ,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as free_cwt
				  ,(CASE WHEN gvbl.nomi_flg = 'Y' THEN 1 			ELSE 0 END)			as nomi_hbl
				  ,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as nomi_gwt
				  ,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as nomi_cwt
				  ,(CASE WHEN gvbl.nomi_flg = 'C' THEN 1 			ELSE 0 END)			as col_hbl
				  ,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as col_gwt
				  ,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as col_cwt
				  ,(CASE WHEN gvbl.nomi_flg = ''  THEN 1 			ELSE 0 END)			as etc_hbl
				  ,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as etc_gwt
				  ,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as etc_cwt
			  FROM (
					SELECT vbl.intg_bl_seq
						  ,vbl.air_sea_clss_cd
						  ,vbl.bnd_clss_cd
						  ,vbl.biz_clss_cd	  
						  ,vbl.mbl_intg_bl_seq	
						  ,vbl.hbl_tp_cd
						  ,vbl.mbl_tp_cd
						  ,vbl.shp_mod_cd
						  ,vbl.sub_mbl_flg 
						  ,vbl.nomi_flg
						  <isEqual property="s_dt_clss_cd" compareValue="PDT">
						  ,vbl.post_dt 									AS period_dt
						  </isEqual>
						   <isEqual property="s_dt_clss_cd" compareValue="IDT">
						  ,vbl.post_dt 									AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="ETD">
						  ,vbl.etd_period_dt 							AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="ETA">
						  ,vbl.eta_period_dt							AS period_dt
						  </isEqual>
						  <isEqual property="s_dt_clss_cd" compareValue="MBL">
						  ,CONVERT(VARCHAR(8), vbl.mbl_period_dt, 112) AS period_dt
						  </isEqual>
						  ,vbl.ref_ofc_cd	
						  ,vbl.mbl_no  
						  ,vbl.bl_no
						  ,vbl.ref_no
						  ,vbl.agent_nm
						  ,vbl.shpr_nm
						  ,vbl.cnee_nm
						  ,vbl.cust_nm
						  ,vbl.acc_grp_id	
						  ,vbl.carr_nm
						  ,vbl.vsl_flt
						  ,vbl.pol_nm
						  ,vbl.pod_nm
						  ,vbl.del_nm
						  ,vbl.etd_dt_tm
						  ,vbl.eta_dt_tm
						  ,vbl.fnl_dest_nm
						  ,vbl.lane_cd
						  ,vbl.inco_cd
						  ,vbl.rep_cmdt_nm
						  ,vbl.cargo_tp_nm
						  ,vbl.sls_usr_nm
						  ,vbl.opr_usr_nm
		    			  <isEqual property="s_prf_vat" compareValue="T">
		    			  	<isEqual property="s_prf_tax" compareValue="F">
							  ,vbl.pfmc_sum_ar_inv_amt * $ex_rate_col$ 			AS ar_inv_amt 
							  ,vbl.pfmc_sum_ap_inv_amt * $ex_rate_col$ 		   	AS ap_inv_amt 
							  ,vbl.pfmc_sum_db_inv_amt * $ex_rate_col$        	AS db_inv_amt 
							  ,vbl.pfmc_sum_cr_inv_amt * $ex_rate_col$        	AS cr_inv_amt
							  ,vbl.mbl_pfmc_sum_ar_inv_amt * $ex_rate_col$ 		AS mbl_ar_inv_amt 
							  ,vbl.mbl_pfmc_sum_ap_inv_amt * $ex_rate_col$ 	   	AS mbl_ap_inv_amt 
							  ,vbl.mbl_pfmc_sum_db_inv_amt * $ex_rate_col$     	AS mbl_db_inv_amt 
							  ,vbl.mbl_pfmc_sum_cr_inv_amt * $ex_rate_col$     	AS mbl_cr_inv_amt
							</isEqual> 
							<isEqual property="s_prf_tax" compareValue="T">
							  ,vbl.sum_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.sum_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.sum_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
							  ,vbl.sum_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
							  ,vbl.mbl_sum_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_sum_ap_inv_amt * $ex_rate_col$ 		   	AS mbl_ap_inv_amt 
							  ,vbl.mbl_sum_db_inv_amt * $ex_rate_col$       	AS mbl_db_inv_amt 
							  ,vbl.mbl_sum_cr_inv_amt * $ex_rate_col$      		AS mbl_cr_inv_amt
						  	</isEqual> 
						  </isEqual>	
						  <isEqual property="s_prf_vat" compareValue="F">
						      <isEqual property="s_prf_tax" compareValue="F">
						      ,vbl.pfmc_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.pfmc_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.pfmc_db_inv_amt * $ex_rate_col$          	AS db_inv_amt 
							  ,vbl.pfmc_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
							  ,vbl.mbl_pfmc_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_pfmc_ap_inv_amt * $ex_rate_col$ 		 	AS mbl_ap_inv_amt 
							  ,vbl.mbl_pfmc_db_inv_amt * $ex_rate_col$      	AS mbl_db_inv_amt 
							  ,vbl.mbl_pfmc_cr_inv_amt * $ex_rate_col$       	AS mbl_cr_inv_amt
							  </isEqual>
							  <isEqual property="s_prf_tax" compareValue="T">
							  ,vbl.ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
							  ,vbl.ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
							  ,vbl.db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
							  ,vbl.cr_inv_amt * $ex_rate_col$          		AS cr_inv_amt
							  ,vbl.mbl_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
							  ,vbl.mbl_ap_inv_amt * $ex_rate_col$ 		  	AS mbl_ap_inv_amt 
							  ,vbl.mbl_db_inv_amt * $ex_rate_col$          	AS mbl_db_inv_amt 
							  ,vbl.mbl_cr_inv_amt * $ex_rate_col$         	AS mbl_cr_inv_amt
							 </isEqual>
						 </isEqual>  
						 ,vbl.meas
						 ,vbl.grs_wgt
						 ,vbl.chg_wgt
						 ,vbl.cbm         
						 ,vbl.hbl_volume
						 ,vbl.mbl_volume		
					FROM dbo.VW_PFMC vbl WITH(NOLOCK)
							LEFT OUTER JOIN 
								tb_finc_perf_xcrt dd_ex_rt WITH(NOLOCK)           
					        	ON  dd_ex_rt.fm_curr_cd = vbl.inv_curr_cd    
						        AND dd_ex_rt.delt_flg = 'N'                                                       
						        AND dd_ex_rt.to_curr_cd = #s_curr_cd#   
						        AND dd_ex_rt.dt_clss_cd = 'D' 
						        AND dd_ex_rt.aply_fm_dt = vbl.inv_post_dt    
						    LEFT OUTER JOIN 
						    	tb_finc_perf_xcrt mm_ex_rt WITH(NOLOCK)             
					        	ON  mm_ex_rt.fm_curr_cd = vbl.inv_curr_cd   
						        AND mm_ex_rt.delt_flg = 'N'                                                       
						        AND mm_ex_rt.to_curr_cd = #s_curr_cd#   
						        AND mm_ex_rt.dt_clss_cd = 'M' 
						        AND substring(mm_ex_rt.aply_fm_dt,1,6) = substring(vbl.inv_post_dt,1,6)
			                LEFT OUTER JOIN 
			                	($one_curr_rate_sql$) gd_ex_rt 
			                 	ON gd_ex_rt.curr_cd = vbl.inv_curr_cd  
			                 	AND gd_ex_rt.aply_fm_dt = substring(vbl.inv_post_dt,1,6)   
					WHERE  1=1
					<isNotEmpty property="s_air_sea_opt">
					AND  vbl.air_sea_clss_cd = #s_air_sea_opt#
					</isNotEmpty> 
					<isNotEmpty property="s_bnd_clss_cd">
					AND  vbl.bnd_clss_cd  = #s_bnd_clss_cd#
					</isNotEmpty>
					<isNotNull property="s_ofc_cd">
					AND  vbl.ref_ofc_cd  = #s_ofc_cd#
					</isNotNull> 
					<isEqual property="s_dt_clss_cd" compareValue="PDT">
					AND  vbl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="IDT">
					AND  vbl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETD">
					AND  vbl.etd_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="ETA">
					AND  vbl.eta_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
					</isEqual>
					<isEqual property="s_dt_clss_cd" compareValue="MBL">
					AND  vbl.mbl_period_dt BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
					</isEqual>
					<isNotEmpty property="report_sql">
					$report_sql$
					</isNotEmpty>
					) gvbl 
		    GROUP  BY gvbl.intg_bl_seq 
		    ,gvbl.period_dt
			,gvbl.shp_mod_cd
			,gvbl.nomi_flg
		)		
		,wcntr
		AS ( 
			SELECT cwbl.intg_bl_seq
			      ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'N' 
				         THEN ISNULL(cwbl.teu, 0)
						 ELSE 0
					   END)	as fcl_free
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'Y' 
				            THEN ISNULL(cwbl.teu, 0)
						    ELSE 0
					   END)	as fcl_nomi
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'C' 
				            THEN ISNULL(cwbl.teu, 0)
						    ELSE 0
					END)	as fcl_col
				  ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = '' 
				         THEN ISNULL(cwbl.teu, 0)
						 ELSE 0
					END)	as fcl_etc
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' AND cwbl.cntr_intg_bl_seq != '' 
				         THEN 1 
						 ELSE 0
					END)	as fcl_cntr
			      ,SUM(CASE WHEN cwbl.shp_mod_cd = 'LCL' AND cwbl.cntr_intg_bl_seq != ''  
				         THEN 1
						 ELSE 0
					END)	as lcl_cntr          
				  ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FAK' AND cwbl.cntr_intg_bl_seq != '' 
				            THEN 1
						    ELSE 0
					   END)	as fak_cntr
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'BLK' AND cwbl.cntr_intg_bl_seq != '' 
				            THEN 1
				   		    ELSE 0
					   END)	as blk_cntr
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '20' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_20
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '40' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_40
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'HC' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_hq
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '45' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_45
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'RF' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_rf
		          ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'ETC' 
				         THEN 1
						 ELSE 0
					   END)	as cntr_etc
			FROM (	SELECT  cbl.intg_bl_seq
			               ,cbl.shp_mod_cd
			               ,cbl.nomi_flg
			               ,cntr_cd.cntr_grp_cd
			               ,ISNULL(cntr.intg_bl_seq, '') AS cntr_intg_bl_seq
			               ,cntr_cd.teu
			               ,rank() over(partition by cbl.mbl_intg_bl_seq, cntr.cntr_no order by cbl.intg_bl_seq) AS cntr_rank
					FROM  wbl cbl WITH(NOLOCK) 
				       JOIN tb_cntr_list cntr WITH(NOLOCK)  ON cntr.intg_bl_seq = cbl.intg_bl_seq AND cntr.delt_flg = 'N'
					   LEFT OUTER JOIN tb_cntr_tpsz cntr_cd WITH(NOLOCK)  ON cntr_cd.cntr_tpsz_cd = cntr.cntr_tpsz_cd AND cntr_cd.delt_flg = 'N'
				 ) cwbl	   
		WHERE  1=1
		AND    cwbl.cntr_rank = 1
		group by cwbl.intg_bl_seq
		)
		
		SELECT  
	        <iterate property="arrrtn_col_hdr" conjunction=",">
	       	    $arrrtn_col_hdr[]$
	        </iterate>
	        <isNotNull>
		        <iterate property="arr_sql_col_opt">
		       	    $arr_sql_col_opt[]$
		        </iterate>
	        </isNotNull>
				,SUM(CASE WHEN bl.air_sea_clss_cd = 'S'
				          THEN (CASE WHEN (bl.fcl_cntr + bl.lcl_cntr + bl.fak_cntr + bl.blk_cntr) = 0
							         THEN 0
									 ELSE (bl.profit_ar_amt - bl.profit_ap_amt + bl.profit_dc_amt) 
												/ (bl.fcl_cntr + bl.lcl_cntr + bl.fak_cntr + bl.blk_cntr)
							     END)
						  ELSE (CASE WHEN bl.ttl_cwt = 0               
						             THEN 0         
                                     ELSE (bl.profit_ar_amt - bl.profit_ap_amt + bl.profit_dc_amt)
												/ bl.ttl_cwt       
                                 END)
					 END)    										as profit_avg_amt
		  FROM (
		  		SELECT  <iterate property="arrrtn_col_hdr" conjunction=",">
				       	    $arrrtn_col_hdr[]$
				        </iterate>
				      ,swbl.air_sea_clss_cd  
		  		      ,swbl.mbl_intg_bl_seq
		  		      <isNotEqual property="s_grd_opt" compareValue="S">
		  		      ,swbl.period_dt
		  		      </isNotEqual>
		  		      ,SUM(swbl.meas)						as meas
					  ,SUM(swbl.grs_wgt)					as grs_wgt
					  ,SUM(swbl.chg_wgt)					as chg_wgt
					  ,SUM(swbl.cbm)                      	as cbm
					  ,SUM(swbl.hbl_volume)               	as bl_volume	
					  ,SUM(swbl.fcl_free)					as fcl_free
					  ,SUM(swbl.fcl_nomi)					as fcl_nomi
					  ,SUM(swbl.fcl_col) 					as fcl_col
					  ,SUM(swbl.fcl_etc) 					as fcl_etc
					  ,SUM(swbl.fcl_sum) 					as fcl_sum
					  ,SUM(swbl.fcl_cntr)					as fcl_cntr
					  ,SUM(swbl.lcl_free)					as lcl_free
					  ,SUM(swbl.lcl_nomi)					as lcl_nomi
					  ,SUM(swbl.lcl_col) 					as lcl_col
					  ,SUM(swbl.lcl_etc) 					as lcl_etc
					  ,SUM(swbl.lcl_sum) 					as lcl_sum
					  ,SUM(swbl.lcl_cntr)					as lcl_cntr
					  ,SUM(swbl.fak_free)					as fak_free
					  ,SUM(swbl.fak_nomi)					as fak_nomi
					  ,SUM(swbl.fak_col) 					as fak_col
					  ,SUM(swbl.fak_etc) 					as fak_etc
					  ,SUM(swbl.fak_sum) 					as fak_sum
					  ,SUM(swbl.fak_cntr)					as fak_cntr
					  ,SUM(swbl.blk_free)					as blk_free
					  ,SUM(swbl.blk_nomi)					as blk_nomi
					  ,SUM(swbl.blk_col) 					as blk_col
					  ,SUM(swbl.blk_etc) 					as blk_etc
					  ,SUM(swbl.blk_sum) 					as blk_sum
					  ,SUM(swbl.blk_cntr)					as blk_cntr
					  ,SUM(swbl.cntr_20) 					as cntr_20
					  ,SUM(swbl.cntr_40) 					as cntr_40
					  ,SUM(swbl.cntr_hq) 					as cntr_hq
					  ,SUM(swbl.cntr_45) 					as cntr_45
					  ,SUM(swbl.cntr_rf) 					as cntr_rf
					  ,SUM(swbl.cntr_etc)					as cntr_etc
					  ,SUM(swbl.cntr_sum)					as cntr_sum
					  ,SUM(swbl.cntr_cnt)					as cntr_cnt
					  ,SUM(swbl.free_hbl)					as free_hbl
					  ,SUM(swbl.free_gwt)					as free_gwt
					  ,SUM(swbl.free_cwt)					as free_cwt
					  ,SUM(swbl.nomi_hbl)					as nomi_hbl
					  ,SUM(swbl.nomi_gwt)					as nomi_gwt
					  ,SUM(swbl.nomi_cwt)					as nomi_cwt
					  ,SUM(swbl.col_hbl)					as col_hbl
					  ,SUM(swbl.col_gwt)					as col_gwt
					  ,SUM(swbl.col_cwt)					as col_cwt
					  ,SUM(swbl.etc_hbl)					as etc_hbl
					  ,SUM(swbl.etc_gwt)					as etc_gwt
					  ,SUM(swbl.etc_cwt)					as etc_cwt
					  ,SUM(swbl.ttl_hbl) 					as ttl_hbl
					  ,SUM(swbl.ttl_gwt) 					as ttl_gwt
					  ,SUM(swbl.ttl_cwt) 					as ttl_cwt
					  ,SUM(swbl.profit_ar_amt) + MAX(swbl.mbl_profit_ar_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ar_amt
					  ,SUM(swbl.profit_ap_amt) + MAX(swbl.mbl_profit_ap_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ap_amt
					  ,SUM(swbl.profit_dc_amt) + MAX(swbl.mbl_profit_dc_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_dc_amt
		  		  FROM (		  
						SELECT     pwbl.intg_bl_seq
						          ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O'
									     THEN 'Ocean Export'
										 WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I'
									     THEN 'Ocean Import'
										 WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O'
									     THEN 'Air Export'
										 WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I'
									     THEN 'Air Import'
									     WHEN pwbl.air_sea_clss_cd = 'W' 
									     THEN 'Warehouse'
									     ELSE 'Other'
				                   END)	dept_nm
								  ,pwbl.air_sea_clss_cd					
								  ,pwbl.bnd_clss_cd							
								  ,pwbl.biz_clss_cd			  
								  ,pwbl.mbl_intg_bl_seq	 
								  ,pwbl.hbl_tp_cd		
								  ,pwbl.shp_mod_cd				
								  ,pwbl.sub_mbl_flg 
								  ,pwbl.nomi_flg
								  ,pwbl.period_dt
								  ,pwbl.ref_ofc_cd
								  ,pwbl.mbl_no	
								  ,pwbl.bl_no	
								  ,pwbl.ref_no		  			
								  ,pwbl.agent_nm
								  ,pwbl.shpr_nm
								  ,pwbl.cnee_nm
								  ,pwbl.cust_nm
								  ,pwbl.acc_grp_id	
								  ,pwbl.carr_nm
								  ,pwbl.vsl_flt
								  ,pwbl.pol_nm
								  ,pwbl.pod_nm
								  ,pwbl.del_nm
								  ,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.etd_dt_tm,'')) = 12
								         THEN SUBSTRING(pwbl.etd_dt_tm, 5, 2) + SUBSTRING(pwbl.etd_dt_tm, 7, 2) + SUBSTRING(pwbl.etd_dt_tm, 1, 4) + SUBSTRING(pwbl.etd_dt_tm, 9, 4)
								         ELSE pwbl.etd_dt_tm
								    END) 															AS etd_dt_tm     
								  ,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.eta_dt_tm, '')) = 12
								         THEN SUBSTRING(pwbl.eta_dt_tm, 5, 2) + SUBSTRING(pwbl.eta_dt_tm, 7, 2) + SUBSTRING(pwbl.eta_dt_tm, 1, 4) + SUBSTRING(pwbl.eta_dt_tm, 9, 4)
								         ELSE pwbl.eta_dt_tm
								    END) 															AS eta_dt_tm   
								  ,pwbl.fnl_dest_nm
								  ,pwbl.lane_cd
								  ,pwbl.inco_cd
								  ,pwbl.rep_cmdt_nm
								  ,pwbl.cargo_tp_nm
								  ,pwbl.sls_usr_nm
								  ,pwbl.opr_usr_nm    	    
								  ,pwbl.meas											
								  ,pwbl.grs_wgt										
								  ,pwbl.chg_wgt										
								  ,pwbl.cbm                                       	      
								  ,pwbl.hbl_volume                                                  as bl_volume	
								  <isEqual property="s_ship_mode_fcl" compareValue="T">
								  ,(cntr.fcl_free)													as fcl_free
								  ,(cntr.fcl_nomi)													as fcl_nomi
								  ,(cntr.fcl_col)													as fcl_col
								  ,(cntr.fcl_etc)													as fcl_etc
								  ,(cntr.fcl_free + cntr.fcl_nomi + cntr.fcl_col +  cntr.fcl_etc)	as fcl_sum
								  ,(cntr.fcl_cntr)													as fcl_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_fcl" compareValue="F">
								  ,0																as fcl_free
								  ,0																as fcl_nomi
								  ,0																as fcl_col
								  ,0																as fcl_etc
								  ,0																as fcl_sum
								  ,0																as fcl_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_lcl" compareValue="T">	
								  ,(pwbl.lcl_free)													as lcl_free
								  ,(pwbl.lcl_nomi)													as lcl_nomi
								  ,(pwbl.lcl_col)													as lcl_col
								  ,(pwbl.lcl_etc)													as lcl_etc
								  ,(pwbl.lcl_free + pwbl.lcl_nomi + pwbl.lcl_col + pwbl.lcl_etc)	as lcl_sum
								  ,(cntr.lcl_cntr)													as lcl_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_lcl" compareValue="F">
								  ,0																as lcl_free
								  ,0																as lcl_nomi
								  ,0																as lcl_col
								  ,0																as lcl_etc
								  ,0																as lcl_sum
								  ,0																as lcl_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_fak" compareValue="T">	
								  ,(pwbl.fak_free)													as fak_free
								  ,(pwbl.fak_nomi)													as fak_nomi
								  ,(pwbl.fak_col)													as fak_col
								  ,(pwbl.fak_etc)													as fak_etc
								  ,(pwbl.fak_free + pwbl.fak_nomi + pwbl.fak_col + pwbl.fak_etc)	as fak_sum
								  ,(cntr.fak_cntr)													as fak_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_fak" compareValue="F">
								  ,0																as fak_free
								  ,0																as fak_nomi
								  ,0																as fak_col
								  ,0																as fak_etc
								  ,0																as fak_sum
								  ,0																as fak_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_blk" compareValue="T">
								  ,(pwbl.blk_free)													as blk_free
								  ,(pwbl.blk_nomi)													as blk_nomi
								  ,(pwbl.blk_col)													as blk_col
								  ,(pwbl.blk_etc)													as blk_etc
								  ,(pwbl.blk_free + pwbl.blk_nomi + pwbl.blk_col + pwbl.blk_etc)	as blk_sum
								  ,(cntr.blk_cntr)													as blk_cntr	
								  </isEqual>
								  <isEqual property="s_ship_mode_blk" compareValue="F">
								  ,0																as blk_free
								  ,0																as blk_nomi
								  ,0																as blk_col
								  ,0																as blk_etc
								  ,0																as blk_sum
								  ,0																as blk_cntr
								  </isEqual>
								  <isEqual property="s_ship_mode_fcl" compareValue="T">
								  ,(cntr.cntr_20)													as cntr_20		  
								  ,(cntr.cntr_40)													as cntr_40	
								  ,(cntr.cntr_hq)													as cntr_hq	
								  ,(cntr.cntr_45)													as cntr_45	
								  ,(cntr.cntr_rf)													as cntr_rf	
								  ,(cntr.cntr_etc)													as cntr_etc	
								  ,(cntr.fcl_free + cntr.fcl_nomi + cntr.fcl_col +  cntr.fcl_etc)	as cntr_sum
								  ,(cntr.fcl_cntr)													as cntr_cnt
								  </isEqual>
								  <isEqual property="s_ship_mode_fcl" compareValue="F">
								  ,0																as cntr_20
								  ,0																as cntr_40
								  ,0																as cntr_hq
								  ,0																as cntr_45
								  ,0																as cntr_rf
								  ,0																as cntr_etc
								  ,0																as cntr_sum
								  ,0																as cntr_cnt
								  </isEqual>
								  ,(pwbl.free_hbl)													as free_hbl
								  ,(pwbl.free_gwt)													as free_gwt
								  ,(pwbl.free_cwt)													as free_cwt
								  ,(pwbl.nomi_hbl)													as nomi_hbl
								  ,(pwbl.nomi_gwt)													as nomi_gwt
								  ,(pwbl.nomi_cwt)													as nomi_cwt
								  ,(pwbl.col_hbl)													as col_hbl
								  ,(pwbl.col_gwt)													as col_gwt
								  ,(pwbl.col_cwt)													as col_cwt
								  ,(pwbl.etc_hbl)													as etc_hbl
								  ,(pwbl.etc_gwt)													as etc_gwt
								  ,(pwbl.etc_cwt)													as etc_cwt
								  ,(pwbl.free_hbl + pwbl.nomi_hbl + pwbl.col_hbl + pwbl.etc_hbl)	as ttl_hbl
								  ,(pwbl.free_gwt + pwbl.nomi_gwt + pwbl.col_gwt + pwbl.etc_gwt)	as ttl_gwt
								  ,(pwbl.free_cwt + pwbl.nomi_cwt + pwbl.col_cwt + pwbl.etc_cwt)	as ttl_cwt
				    			  <isEqual property="s_prf_ar" compareValue="T">
				    			  ,pwbl.ar_inv_amt 					as profit_ar_amt
				    			  ,ISNULL(pwbl.mbl_ar_inv_amt, 0)	as mbl_profit_ar_amt
								  </isEqual>
								  <isEqual property="s_prf_ar" compareValue="F">
								  ,0	 							as profit_ar_amt
								  ,0	 							as mbl_profit_ar_amt
								  </isEqual>	
								  <isEqual property="s_prf_ap" compareValue="T">
								  ,pwbl.ap_inv_amt 				 	as profit_ap_amt
								  ,ISNULL(pwbl.mbl_ap_inv_amt, 0)	as mbl_profit_ap_amt
								  </isEqual>
								  <isEqual property="s_prf_ap" compareValue="F">
								  ,0	 							as profit_ap_amt
								  ,0	 							as mbl_profit_ap_amt
								  </isEqual>
								  <isEqual property="s_prf_dc" compareValue="T">
								  ,pwbl.dc_inv_amt					as profit_dc_amt
								  ,ISNULL(pwbl.mbl_dc_inv_amt, 0) 	as mbl_profit_dc_amt
								  </isEqual>
								  <isEqual property="s_prf_dc" compareValue="F">
								  ,0	 							as profit_dc_amt
								  ,0	 							as mbl_profit_dc_amt
								  </isEqual>  
								  ,pwbl.hbl_volume as hbl_volume
								  ,pwbl.mbl_volume as mbl_volume
								  ,opr.team_cd		
								  ,team.cd_nm as team_nm				  
						FROM   wbl pwbl WITH(NOLOCK) 
							   LEFT OUTER JOIN wcntr cntr WITH(NOLOCK) ON pwbl.intg_bl_seq = cntr.intg_bl_seq
							   LEFT OUTER JOIN tb_usr opr WITH(NOLOCK) ON pwbl.opr_usr_nm = opr.usrid
							   LEFT OUTER JOIN tb_com_cd_dtl team WITH(NOLOCK) ON team.com_cd = 'C133' and opr.team_cd = team.cd_val
				) swbl		
				GROUP BY 	 
				<iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    	$arrrtn_col_hdr_grp[]$
	        	</iterate>
	        	,swbl.air_sea_clss_cd
				,swbl.mbl_intg_bl_seq 	
				<isNotEqual property="s_grd_opt" compareValue="S">
		  			,swbl.period_dt
		  		</isNotEqual>			
		) bl
		GROUP BY  
	        <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    $arrrtn_col_hdr_grp[]$
	        </iterate>
		ORDER BY  
	        <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    $arrrtn_col_hdr_grp[]$
	        </iterate>
	    </dynamic>	    
    </select>
    
    <!-- Contribution Margin YJW 2015.03.09 -->
    <select id="searchCtrbMgnProfit" remapResults="true" parameterClass="HashMap" resultClass="HashMap">
   		/* PfmMgtSQL.xml > searchCtrbMgnProfit */
		<dynamic>
		
		WITH wbl    AS (    
		
			SELECT
		         gvbl.intg_bl_seq      
		        ,SUBSTRING(gvbl.period_dt,1,8)  AS period_dt       
		        ,MAX(gvbl.air_sea_clss_cd)      AS air_sea_clss_cd            
		        ,MAX(gvbl.bnd_clss_cd)         	AS bnd_clss_cd             
		        ,MAX(gvbl.biz_clss_cd)         	AS biz_clss_cd           
		        ,MAX(gvbl.mbl_intg_bl_seq)      AS mbl_intg_bl_seq        
		        ,MAX(gvbl.hbl_tp_cd)          	AS hbl_tp_cd       
		        ,MAX(gvbl.sub_mbl_flg)         	AS sub_mbl_flg       
		        ,MAX(gvbl.ref_ofc_cd)         	AS ref_ofc_cd       
		        ,MAX(gvbl.mbl_no)          		AS mbl_no       
		        ,MAX(gvbl.bl_no)           		AS bl_no       
		        ,MAX(gvbl.ref_no)          		AS ref_no         
		        ,MAX(gvbl.agent_nm)         	AS agent_nm       
		        ,MAX(gvbl.shpr_nm)         		AS shpr_nm       
		        ,MAX(gvbl.cnee_nm)         		AS cnee_nm       
		        ,MAX(gvbl.cust_nm)         		AS cust_nm       
		        ,MAX(gvbl.acc_grp_id)         	AS acc_grp_id        
		        ,MAX(gvbl.carr_nm)         		AS carr_nm       
		        ,MAX(gvbl.vsl_flt)         		AS vsl_flt       
		        ,MAX(gvbl.pol_nm)          		AS pol_nm       
		        ,MAX(gvbl.pod_nm)          		AS pod_nm       
		        ,MAX(gvbl.del_nm)          		AS del_nm       
		        ,MAX(gvbl.etd_dt_tm)         	AS etd_dt_tm       
		        ,MAX(gvbl.eta_dt_tm)         	AS eta_dt_tm       
		        ,MAX(gvbl.fnl_dest_nm)        	AS fnl_dest_nm       
		        ,MAX(gvbl.lane_cd)         		AS lane_cd       
		        ,MAX(gvbl.inco_cd)         		AS inco_cd       
		        ,MAX(gvbl.rep_cmdt_nm)        	AS rep_cmdt_nm       
		        ,MAX(gvbl.cargo_tp_nm)        	AS cargo_tp_nm       
		        ,MAX(gvbl.sls_usr_nm)         	AS sls_usr_nm       
		        ,MAX(gvbl.opr_usr_nm)         	AS opr_usr_nm  
		        <isEqual property="s_prf_ar" compareValue="T">
		    	,SUM(gvbl.ar_inv_amt)           AS ar_inv_amt
		    	,SUM(gvbl.mbl_ar_inv_amt)       AS mbl_ar_inv_amt
				</isEqual>
				<isEqual property="s_prf_ar" compareValue="F">
				,0	 							AS ar_inv_amt
				,0	 							AS mbl_ar_inv_amt
				</isEqual>	
				<isEqual property="s_prf_ap" compareValue="T">
				,SUM(gvbl.ap_inv_amt)           AS ap_inv_amt
				,SUM(gvbl.mbl_ap_inv_amt)       AS mbl_ap_inv_amt
				</isEqual>
				<isEqual property="s_prf_ap" compareValue="F">
				,0	 							AS ap_inv_amt
				,0	 							AS mbl_ap_inv_amt
				</isEqual>
				<isEqual property="s_prf_dc" compareValue="T">
				,SUM(gvbl.db_inv_amt - gvbl.cr_inv_amt) AS dc_inv_amt
				,SUM(gvbl.mbl_db_inv_amt - gvbl.mbl_cr_inv_amt) AS mbl_dc_inv_amt 
				</isEqual>
				<isEqual property="s_prf_dc" compareValue="F">
				,0	 							AS dc_inv_amt
				,0	 							AS mbl_dc_inv_amt
				</isEqual>       
		        ,MAX(gvbl.meas)           		AS meas                
		        ,MAX(gvbl.grs_wgt)          	AS grs_wgt                
		        ,MAX(gvbl.chg_wgt)          	AS chg_wgt          
		        ,MAX(gvbl.hbl_volume)         	AS hbl_volume       
		        ,MAX(gvbl.mbl_volume)         	AS mbl_volume       
		        ,gvbl.shp_mod_cd         
		        ,gvbl.nomi_flg                  
		        ,MAX(gvbl.cbm)                  AS cbm        
		        ,MAX(gvbl.ctrb_ofc_cd)          AS ctrb_ofc_cd       
		        ,MAX(gvbl.ctrb_dept_cd)         AS ctrb_dept_cd       
		        ,MAX(gvbl.ctrb_ratio_yn)        AS ctrb_ratio_yn       
		        ,MAX(gvbl.ctrb_mgn)             AS ctrb_mgn       
		        ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_etc
			  	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_etc         
			  	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_etc
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN 1 			ELSE 0 END)			as free_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as free_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as free_cwt
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN 1 			ELSE 0 END)			as nomi_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as nomi_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as nomi_cwt
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN 1 			ELSE 0 END)			as col_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as col_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as col_cwt
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN 1 			ELSE 0 END)			as etc_hbl
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as etc_gwt
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as etc_cwt      
	    	FROM
	        (      
	        	SELECT
		             vbl.intg_bl_seq         
		            ,vbl.air_sea_clss_cd         
		            ,vbl.bnd_clss_cd         
		            ,vbl.biz_clss_cd            
		            ,vbl.mbl_intg_bl_seq          
		            ,vbl.hbl_tp_cd         
		            ,vbl.mbl_tp_cd         
		            ,vbl.shp_mod_cd         
		            ,vbl.sub_mbl_flg          
		            ,vbl.nomi_flg                  
	            	<isEqual property="s_dt_clss_cd" compareValue="PDT">
				  	,vbl.post_dt 									AS period_dt
				  	</isEqual>
				   	<isEqual property="s_dt_clss_cd" compareValue="IDT">
				  	,vbl.post_dt 									AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="ETD">
				  	,vbl.etd_period_dt 							AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="ETA">
				  	,vbl.eta_period_dt							AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="MBL">
				  	,CONVERT(VARCHAR(8), vbl.mbl_period_dt, 112) AS period_dt
				  	</isEqual>
	            	,vbl.ref_ofc_cd          
		            ,vbl.mbl_no           
		            ,vbl.bl_no         
		            ,vbl.ref_no         
		            ,vbl.agent_nm         
		            ,vbl.shpr_nm         
		            ,vbl.cnee_nm         
		            ,vbl.cust_nm         
		            ,vbl.acc_grp_id          
		            ,vbl.carr_nm         
		            ,vbl.vsl_flt         
		            ,vbl.pol_nm         
		            ,vbl.pod_nm         
		            ,vbl.del_nm         
		            ,vbl.etd_dt_tm         
		            ,vbl.eta_dt_tm         
		            ,vbl.fnl_dest_nm         
		            ,vbl.lane_cd         
		            ,vbl.inco_cd         
		            ,vbl.rep_cmdt_nm         
		            ,vbl.cargo_tp_nm         
		            ,vbl.sls_usr_nm         
		            ,vbl.opr_usr_nm 
	            	<isEqual property="s_prf_vat" compareValue="T">
	    			  	<isEqual property="s_prf_tax" compareValue="F">
						  ,vbl.pfmc_sum_ar_inv_amt * $ex_rate_col$ 			AS ar_inv_amt 
						  ,vbl.pfmc_sum_ap_inv_amt * $ex_rate_col$ 		   	AS ap_inv_amt 
						  ,vbl.pfmc_sum_db_inv_amt * $ex_rate_col$        	AS db_inv_amt 
						  ,vbl.pfmc_sum_cr_inv_amt * $ex_rate_col$        	AS cr_inv_amt
						  ,vbl.mbl_pfmc_sum_ar_inv_amt * $ex_rate_col$ 		AS mbl_ar_inv_amt 
						  ,vbl.mbl_pfmc_sum_ap_inv_amt * $ex_rate_col$ 	   	AS mbl_ap_inv_amt 
						  ,vbl.mbl_pfmc_sum_db_inv_amt * $ex_rate_col$     	AS mbl_db_inv_amt 
						  ,vbl.mbl_pfmc_sum_cr_inv_amt * $ex_rate_col$     	AS mbl_cr_inv_amt
						</isEqual> 
						<isEqual property="s_prf_tax" compareValue="T">
						  ,vbl.sum_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
						  ,vbl.sum_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
						  ,vbl.sum_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
						  ,vbl.sum_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
						  ,vbl.mbl_sum_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
						  ,vbl.mbl_sum_ap_inv_amt * $ex_rate_col$ 		   	AS mbl_ap_inv_amt 
						  ,vbl.mbl_sum_db_inv_amt * $ex_rate_col$       	AS mbl_db_inv_amt 
						  ,vbl.mbl_sum_cr_inv_amt * $ex_rate_col$      		AS mbl_cr_inv_amt
					  	</isEqual> 
					</isEqual>	
				  	<isEqual property="s_prf_vat" compareValue="F">
				      	<isEqual property="s_prf_tax" compareValue="F">
				      	,vbl.pfmc_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
					  	,vbl.pfmc_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
					  	,vbl.pfmc_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
					  	,vbl.pfmc_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
					  	,vbl.mbl_pfmc_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
					  	,vbl.mbl_pfmc_ap_inv_amt * $ex_rate_col$ 		 	AS mbl_ap_inv_amt 
					  	,vbl.mbl_pfmc_db_inv_amt * $ex_rate_col$      		AS mbl_db_inv_amt 
					  	,vbl.mbl_pfmc_cr_inv_amt * $ex_rate_col$       		AS mbl_cr_inv_amt
					  	</isEqual>
					  	<isEqual property="s_prf_tax" compareValue="T">
					  	,vbl.ar_inv_amt * $ex_rate_col$ 					AS ar_inv_amt 
					  	,vbl.ap_inv_amt * $ex_rate_col$ 		   	 		AS ap_inv_amt 
					  	,vbl.db_inv_amt * $ex_rate_col$          			AS db_inv_amt 
					  	,vbl.cr_inv_amt * $ex_rate_col$          			AS cr_inv_amt
					  	,vbl.mbl_ar_inv_amt * $ex_rate_col$ 				AS mbl_ar_inv_amt 
					  	,vbl.mbl_ap_inv_amt * $ex_rate_col$ 		  		AS mbl_ap_inv_amt 
					  	,vbl.mbl_db_inv_amt * $ex_rate_col$          		AS mbl_db_inv_amt 
					  	,vbl.mbl_cr_inv_amt * $ex_rate_col$         		AS mbl_cr_inv_amt
					 	</isEqual>
					</isEqual>  
	            	,vbl.meas        
	            	,vbl.grs_wgt        
	            	,vbl.chg_wgt        
	            	,vbl.cbm                 
	            	,vbl.hbl_volume        
	            	,vbl.mbl_volume         
	            	,vbl.ctrb_ofc_cd         
	            	,vbl.ctrb_dept_cd        
	            	,vbl.ctrb_ratio_yn        
	            	,vbl.ctrb_mgn        
	        	FROM dbo.VW_PFMC vbl WITH(NOLOCK)        
	        	LEFT OUTER JOIN tb_finc_perf_xcrt dd_ex_rt WITH(NOLOCK)           
					    ON  dd_ex_rt.fm_curr_cd = vbl.inv_curr_cd    
						AND dd_ex_rt.delt_flg = 'N'                                                       
				        AND dd_ex_rt.to_curr_cd = #s_curr_cd#   
				        AND dd_ex_rt.dt_clss_cd = 'D' 
				        AND dd_ex_rt.aply_fm_dt = vbl.inv_post_dt    
				LEFT OUTER JOIN tb_finc_perf_xcrt mm_ex_rt WITH(NOLOCK)             
			        	ON  mm_ex_rt.fm_curr_cd = vbl.inv_curr_cd   
				        AND mm_ex_rt.delt_flg = 'N'                                                       
				        AND mm_ex_rt.to_curr_cd = #s_curr_cd#   
				        AND mm_ex_rt.dt_clss_cd = 'M' 
				        AND substring(mm_ex_rt.aply_fm_dt,1,6) = substring(vbl.inv_post_dt,1,6)
			    LEFT OUTER JOIN ($one_curr_rate_sql$) gd_ex_rt 
			            ON gd_ex_rt.curr_cd = vbl.inv_curr_cd  
			            AND gd_ex_rt.aply_fm_dt = substring(vbl.inv_post_dt,1,6)        
	        	WHERE 1 = 1      
	            AND   isnull(vbl.ctrb_ofc_cd,'') != ''
	            <isNotEmpty property="s_air_sea_opt">
				AND   vbl.air_sea_clss_cd = #s_air_sea_opt#
				</isNotEmpty> 
				<isNotEmpty property="s_bnd_clss_cd">
				AND   vbl.bnd_clss_cd  = #s_bnd_clss_cd#
				</isNotEmpty>
				<isNotNull property="s_ofc_cd">
				AND   vbl.ref_ofc_cd  = #s_ofc_cd#
				</isNotNull> 
				<isEqual property="s_dt_clss_cd" compareValue="PDT">
				AND   vbl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="IDT">
				AND   vbl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETD">
				AND   vbl.etd_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETA">
				AND   vbl.eta_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="MBL">
				AND   vbl.mbl_period_dt BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
				</isEqual>
				) gvbl        
	    		GROUP  BY gvbl.intg_bl_seq, gvbl.period_dt, gvbl.shp_mod_cd, gvbl.nomi_flg )     
	    		
	    , wcntr AS (     
	        
	    	SELECT
	        	 cwbl.intg_bl_seq          
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'N' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_free             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'Y' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_nomi             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'C' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_col       
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = '' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_etc             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as fcl_cntr          
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'LCL' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as lcl_cntr                 
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FAK' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as fak_cntr             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'BLK' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as blk_cntr             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '20' THEN 1 ELSE 0 END) as cntr_20             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '40' THEN 1 ELSE 0 END) as cntr_40             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'HQ' THEN 1 ELSE 0 END) as cntr_hq             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '45' THEN 1 ELSE 0 END) as cntr_45             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'RF' THEN 1 ELSE 0 END) as cntr_rf             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'ETC' THEN 1 ELSE 0 END) as cntr_etc    
	        FROM
	            ( 
	            	SELECT  
	            		 cbl.intg_bl_seq
			            ,cbl.shp_mod_cd
			            ,cbl.nomi_flg
			            ,cntr_cd.cntr_grp_cd
			            ,ISNULL(cntr.intg_bl_seq, '') AS cntr_intg_bl_seq
			            ,cntr_cd.teu
			            ,rank() over(partition by cbl.mbl_intg_bl_seq, cntr.cntr_no order by cbl.intg_bl_seq) AS cntr_rank
					FROM wbl cbl WITH(NOLOCK) 
				    JOIN tb_cntr_list cntr WITH(NOLOCK)  ON cntr.intg_bl_seq = cbl.intg_bl_seq AND cntr.delt_flg = 'N'
					LEFT OUTER JOIN tb_cntr_tpsz cntr_cd WITH(NOLOCK)  ON cntr_cd.cntr_tpsz_cd = cntr.cntr_tpsz_cd AND cntr_cd.delt_flg = 'N'     
				) cwbl       
	        WHERE 1 = 1   
	        AND   cwbl.cntr_rank = 1   
	        group by cwbl.intg_bl_seq )   
	        
		, ctrb_wbl AS (    
		
			SELECT
		         gvbl.intg_bl_seq      
		        ,SUBSTRING(gvbl.period_dt,1,8)  AS period_dt       
		        ,MAX(gvbl.air_sea_clss_cd)      AS air_sea_clss_cd            
		        ,MAX(gvbl.bnd_clss_cd)         	AS bnd_clss_cd             
		        ,MAX(gvbl.biz_clss_cd)         	AS biz_clss_cd           
		        ,MAX(gvbl.mbl_intg_bl_seq)      AS mbl_intg_bl_seq        
		        ,MAX(gvbl.hbl_tp_cd)          	AS hbl_tp_cd       
		        ,MAX(gvbl.sub_mbl_flg)         	AS sub_mbl_flg       
		        ,MAX(gvbl.ref_ofc_cd)         	AS ref_ofc_cd       
		        ,MAX(gvbl.mbl_no)          		AS mbl_no       
		        ,MAX(gvbl.bl_no)           		AS bl_no       
		        ,MAX(gvbl.ref_no)          		AS ref_no         
		        ,MAX(gvbl.agent_nm)         	AS agent_nm       
		        ,MAX(gvbl.shpr_nm)         		AS shpr_nm       
		        ,MAX(gvbl.cnee_nm)         		AS cnee_nm       
		        ,MAX(gvbl.cust_nm)         		AS cust_nm       
		        ,MAX(gvbl.acc_grp_id)         	AS acc_grp_id        
		        ,MAX(gvbl.carr_nm)         		AS carr_nm       
		        ,MAX(gvbl.vsl_flt)         		AS vsl_flt       
		        ,MAX(gvbl.pol_nm)          		AS pol_nm       
		        ,MAX(gvbl.pod_nm)          		AS pod_nm       
		        ,MAX(gvbl.del_nm)          		AS del_nm       
		        ,MAX(gvbl.etd_dt_tm)         	AS etd_dt_tm       
		        ,MAX(gvbl.eta_dt_tm)         	AS eta_dt_tm       
		        ,MAX(gvbl.fnl_dest_nm)        	AS fnl_dest_nm       
		        ,MAX(gvbl.lane_cd)         		AS lane_cd       
		        ,MAX(gvbl.inco_cd)         		AS inco_cd       
		        ,MAX(gvbl.rep_cmdt_nm)        	AS rep_cmdt_nm       
		        ,MAX(gvbl.cargo_tp_nm)        	AS cargo_tp_nm       
		        ,MAX(gvbl.sls_usr_nm)         	AS sls_usr_nm       
		        ,MAX(gvbl.opr_usr_nm)         	AS opr_usr_nm     
		        <isEqual property="s_prf_ar" compareValue="T">
		    	,SUM(gvbl.ar_inv_amt)           AS ar_inv_amt
		    	,SUM(gvbl.mbl_ar_inv_amt)       AS mbl_ar_inv_amt
				</isEqual>
				<isEqual property="s_prf_ar" compareValue="F">
				,0	 							AS ar_inv_amt
				,0	 							AS mbl_ar_inv_amt
				</isEqual>	
				<isEqual property="s_prf_ap" compareValue="T">
				,SUM(gvbl.ap_inv_amt)           AS ap_inv_amt
				,SUM(gvbl.mbl_ap_inv_amt)       AS mbl_ap_inv_amt
				</isEqual>
				<isEqual property="s_prf_ap" compareValue="F">
				,0	 							AS ap_inv_amt
				,0	 							AS mbl_ap_inv_amt
				</isEqual>
				<isEqual property="s_prf_dc" compareValue="T">
				,SUM(gvbl.db_inv_amt - gvbl.cr_inv_amt) AS dc_inv_amt
				,SUM(gvbl.mbl_db_inv_amt - gvbl.mbl_cr_inv_amt) AS mbl_dc_inv_amt 
				</isEqual>
				<isEqual property="s_prf_dc" compareValue="F">
				,0	 							AS dc_inv_amt
				,0	 							AS mbl_dc_inv_amt
				</isEqual>   
		        ,MAX(gvbl.meas)           		AS meas                
		        ,MAX(gvbl.grs_wgt)          	AS grs_wgt                
		        ,MAX(gvbl.chg_wgt)          	AS chg_wgt          
		        ,MAX(gvbl.hbl_volume)         	AS hbl_volume       
		        ,MAX(gvbl.mbl_volume)         	AS mbl_volume       
		        ,gvbl.shp_mod_cd         
		        ,gvbl.nomi_flg                  
		        ,MAX(gvbl.cbm)                  AS cbm        
		        ,MAX(gvbl.ctrb_ofc_cd)          AS ctrb_ofc_cd       
		        ,MAX(gvbl.ctrb_dept_cd)         AS ctrb_dept_cd       
		        ,MAX(gvbl.ctrb_ratio_yn)        AS ctrb_ratio_yn       
		        ,MAX(gvbl.ctrb_mgn)             AS ctrb_mgn       
		        ,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'LCL' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as lcl_etc
			  	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'FAK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as fak_etc         
			  	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'N' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_free
	          	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'Y' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_nomi
	          	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = 'C' THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_col
			  	,(CASE WHEN gvbl.shp_mod_cd = 'BLK' and gvbl.nomi_flg = ''  THEN MAX(gvbl.cbm) ELSE 0 END)	as blk_etc
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN 1 			ELSE 0 END)			as free_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as free_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'N' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as free_cwt
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN 1 			ELSE 0 END)			as nomi_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as nomi_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'Y' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as nomi_cwt
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN 1 			ELSE 0 END)			as col_hbl
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as col_gwt
			  	,(CASE WHEN gvbl.nomi_flg = 'C' THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as col_cwt
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN 1 			ELSE 0 END)			as etc_hbl
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.grs_wgt) ELSE 0 END)	as etc_gwt
			  	,(CASE WHEN gvbl.nomi_flg = ''  THEN MAX(gvbl.chg_wgt) ELSE 0 END)	as etc_cwt      
	    	FROM
	        (      
	        	SELECT
		             vbl.intg_bl_seq         
		            ,vbl.air_sea_clss_cd         
		            ,vbl.bnd_clss_cd         
		            ,vbl.biz_clss_cd            
		            ,vbl.mbl_intg_bl_seq          
		            ,vbl.hbl_tp_cd         
		            ,vbl.mbl_tp_cd         
		            ,vbl.shp_mod_cd         
		            ,vbl.sub_mbl_flg          
		            ,vbl.nomi_flg                  
	            	<isEqual property="s_dt_clss_cd" compareValue="PDT">
				  	,vbl.post_dt 									AS period_dt
				  	</isEqual>
				   	<isEqual property="s_dt_clss_cd" compareValue="IDT">
				  	,vbl.post_dt 									AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="ETD">
				  	,vbl.etd_period_dt 							AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="ETA">
				  	,vbl.eta_period_dt							AS period_dt
				  	</isEqual>
				  	<isEqual property="s_dt_clss_cd" compareValue="MBL">
				  	,CONVERT(VARCHAR(8), vbl.mbl_period_dt, 112) AS period_dt
				  	</isEqual>
	            	,vbl.ref_ofc_cd          
		            ,vbl.mbl_no           
		            ,vbl.bl_no         
		            ,vbl.ref_no         
		            ,vbl.agent_nm         
		            ,vbl.shpr_nm         
		            ,vbl.cnee_nm         
		            ,vbl.cust_nm         
		            ,vbl.acc_grp_id          
		            ,vbl.carr_nm         
		            ,vbl.vsl_flt         
		            ,vbl.pol_nm         
		            ,vbl.pod_nm         
		            ,vbl.del_nm         
		            ,vbl.etd_dt_tm         
		            ,vbl.eta_dt_tm         
		            ,vbl.fnl_dest_nm         
		            ,vbl.lane_cd         
		            ,vbl.inco_cd         
		            ,vbl.rep_cmdt_nm         
		            ,vbl.cargo_tp_nm         
		            ,vbl.sls_usr_nm         
		            ,vbl.opr_usr_nm 
	            	<isEqual property="s_prf_vat" compareValue="T">
	    			  	<isEqual property="s_prf_tax" compareValue="F">
						  ,vbl.pfmc_sum_ar_inv_amt * $ex_rate_col$ 			AS ar_inv_amt 
						  ,vbl.pfmc_sum_ap_inv_amt * $ex_rate_col$ 		   	AS ap_inv_amt 
						  ,vbl.pfmc_sum_db_inv_amt * $ex_rate_col$        	AS db_inv_amt 
						  ,vbl.pfmc_sum_cr_inv_amt * $ex_rate_col$        	AS cr_inv_amt
						  ,vbl.mbl_pfmc_sum_ar_inv_amt * $ex_rate_col$ 		AS mbl_ar_inv_amt 
						  ,vbl.mbl_pfmc_sum_ap_inv_amt * $ex_rate_col$ 	   	AS mbl_ap_inv_amt 
						  ,vbl.mbl_pfmc_sum_db_inv_amt * $ex_rate_col$     	AS mbl_db_inv_amt 
						  ,vbl.mbl_pfmc_sum_cr_inv_amt * $ex_rate_col$     	AS mbl_cr_inv_amt
						</isEqual> 
						<isEqual property="s_prf_tax" compareValue="T">
						  ,vbl.sum_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
						  ,vbl.sum_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
						  ,vbl.sum_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
						  ,vbl.sum_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
						  ,vbl.mbl_sum_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
						  ,vbl.mbl_sum_ap_inv_amt * $ex_rate_col$ 		   	AS mbl_ap_inv_amt 
						  ,vbl.mbl_sum_db_inv_amt * $ex_rate_col$       	AS mbl_db_inv_amt 
						  ,vbl.mbl_sum_cr_inv_amt * $ex_rate_col$      		AS mbl_cr_inv_amt
					  	</isEqual> 
					</isEqual>	
				  	<isEqual property="s_prf_vat" compareValue="F">
				      	<isEqual property="s_prf_tax" compareValue="F">
				      	,vbl.pfmc_ar_inv_amt * $ex_rate_col$ 				AS ar_inv_amt 
					  	,vbl.pfmc_ap_inv_amt * $ex_rate_col$ 		   	 	AS ap_inv_amt 
					  	,vbl.pfmc_db_inv_amt * $ex_rate_col$          		AS db_inv_amt 
					  	,vbl.pfmc_cr_inv_amt * $ex_rate_col$         		AS cr_inv_amt
					  	,vbl.mbl_pfmc_ar_inv_amt * $ex_rate_col$ 			AS mbl_ar_inv_amt 
					  	,vbl.mbl_pfmc_ap_inv_amt * $ex_rate_col$ 		 	AS mbl_ap_inv_amt 
					  	,vbl.mbl_pfmc_db_inv_amt * $ex_rate_col$      		AS mbl_db_inv_amt 
					  	,vbl.mbl_pfmc_cr_inv_amt * $ex_rate_col$       		AS mbl_cr_inv_amt
					  	</isEqual>
					  	<isEqual property="s_prf_tax" compareValue="T">
					  	,vbl.ar_inv_amt * $ex_rate_col$ 					AS ar_inv_amt 
					  	,vbl.ap_inv_amt * $ex_rate_col$ 		   	 		AS ap_inv_amt 
					  	,vbl.db_inv_amt * $ex_rate_col$          			AS db_inv_amt 
					  	,vbl.cr_inv_amt * $ex_rate_col$          			AS cr_inv_amt
					  	,vbl.mbl_ar_inv_amt * $ex_rate_col$ 				AS mbl_ar_inv_amt 
					  	,vbl.mbl_ap_inv_amt * $ex_rate_col$ 		  		AS mbl_ap_inv_amt 
					  	,vbl.mbl_db_inv_amt * $ex_rate_col$          		AS mbl_db_inv_amt 
					  	,vbl.mbl_cr_inv_amt * $ex_rate_col$         		AS mbl_cr_inv_amt
					 	</isEqual>
					</isEqual>  
	            	,vbl.meas        
	            	,vbl.grs_wgt        
	            	,vbl.chg_wgt        
	            	,vbl.cbm                 
	            	,vbl.hbl_volume        
	            	,vbl.mbl_volume         
	            	,vbl.ctrb_ofc_cd         
	            	,vbl.ctrb_dept_cd        
	            	,vbl.ctrb_ratio_yn        
	            	,vbl.ctrb_mgn        
	        	FROM dbo.VW_PFMC vbl WITH(NOLOCK)        
	        	LEFT OUTER JOIN tb_finc_perf_xcrt dd_ex_rt WITH(NOLOCK)           
					    ON  dd_ex_rt.fm_curr_cd = vbl.inv_curr_cd    
						AND dd_ex_rt.delt_flg = 'N'                                                       
				        AND dd_ex_rt.to_curr_cd = #s_curr_cd#   
				        AND dd_ex_rt.dt_clss_cd = 'D' 
				        AND dd_ex_rt.aply_fm_dt = vbl.inv_post_dt    
				LEFT OUTER JOIN tb_finc_perf_xcrt mm_ex_rt WITH(NOLOCK)             
			        	ON  mm_ex_rt.fm_curr_cd = vbl.inv_curr_cd   
				        AND mm_ex_rt.delt_flg = 'N'                                                       
				        AND mm_ex_rt.to_curr_cd = #s_curr_cd#   
				        AND mm_ex_rt.dt_clss_cd = 'M' 
				        AND substring(mm_ex_rt.aply_fm_dt,1,6) = substring(vbl.inv_post_dt,1,6)
			    LEFT OUTER JOIN ($one_curr_rate_sql$) gd_ex_rt 
			            ON gd_ex_rt.curr_cd = vbl.inv_curr_cd  
			            AND gd_ex_rt.aply_fm_dt = substring(vbl.inv_post_dt,1,6)        
	        	WHERE 1 = 1  
	        	AND   isnull(vbl.ctrb_ofc_cd,'') != ''  	        	
	            <isNotEmpty property="s_air_sea_opt">
	            AND (vbl.ctrb_dept_cd = (CASE WHEN 'S' = #s_air_sea_opt# AND #s_bnd_clss_cd# IN ('','I') THEN 'OI' END) OR
	                 vbl.ctrb_dept_cd = (CASE WHEN 'S' = #s_air_sea_opt# AND #s_bnd_clss_cd# IN ('','O') THEN 'OE' END) OR
	                 vbl.ctrb_dept_cd = (CASE WHEN 'A' = #s_air_sea_opt# AND #s_bnd_clss_cd# IN ('','I') THEN 'AI' END) OR
	                 vbl.ctrb_dept_cd = (CASE WHEN 'A' = #s_air_sea_opt# AND #s_bnd_clss_cd# IN ('','O') THEN 'AE' END) OR
	                 vbl.ctrb_dept_cd = (CASE WHEN 'O' = #s_air_sea_opt# THEN 'OT' END) OR
	                 vbl.ctrb_dept_cd = (CASE WHEN 'W' = #s_air_sea_opt# THEN 'WM' END))
				</isNotEmpty> 
				<isNotNull property="s_ofc_cd">
				AND   vbl.ctrb_ofc_cd  =  #s_ofc_cd#
				</isNotNull> 
				<isEqual property="s_dt_clss_cd" compareValue="PDT">
				AND   vbl.post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="IDT">
				AND   vbl.inv_post_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt#
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETD">
				AND   vbl.etd_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="ETA">
				AND   vbl.eta_period_dt BETWEEN #s_prd_strdt# AND #s_prd_enddt# + '9999'
				</isEqual>
				<isEqual property="s_dt_clss_cd" compareValue="MBL">
				AND   vbl.mbl_period_dt BETWEEN CONVERT(datetime, #s_prd_strdt#) AND CONVERT(datetime, #s_prd_enddt#) + 1
				</isEqual>
				) gvbl     
				WHERE 1 = 1
				AND (gvbl.ref_ofc_cd != #s_ofc_cd# 
				OR (gvbl.ref_ofc_cd = #s_ofc_cd# AND ((gvbl.ctrb_dept_cd = 'OI' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'SI')
														OR (gvbl.ctrb_dept_cd = 'OE' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'SO')
														OR (gvbl.ctrb_dept_cd = 'AI' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'AI')
														OR (gvbl.ctrb_dept_cd = 'AE' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'AO')														
														OR (gvbl.ctrb_dept_cd = 'OT' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'O')
														OR (gvbl.ctrb_dept_cd = 'WM' AND gvbl.air_sea_clss_cd + gvbl.bnd_clss_cd != 'W'))))     
	    		GROUP  BY gvbl.intg_bl_seq, gvbl.period_dt, gvbl.shp_mod_cd, gvbl.nomi_flg)     
	    		
	    , ctrb_wcntr AS (     
	        
	    	SELECT
	        	 cwbl.intg_bl_seq          
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'N' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_free             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'Y' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_nomi             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = 'C' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_col       
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.nomi_flg = '' THEN ISNULL(cwbl.teu,0) ELSE 0 END) as fcl_etc             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as fcl_cntr          
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'LCL' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as lcl_cntr                 
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FAK' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as fak_cntr             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'BLK' AND cwbl.cntr_intg_bl_seq != '' THEN 1 ELSE 0 END) as blk_cntr             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '20' THEN 1 ELSE 0 END) as cntr_20             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '40' THEN 1 ELSE 0 END) as cntr_40             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'HQ' THEN 1 ELSE 0 END) as cntr_hq             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = '45' THEN 1 ELSE 0 END) as cntr_45             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'RF' THEN 1 ELSE 0 END) as cntr_rf             
	            ,SUM(CASE WHEN cwbl.shp_mod_cd = 'FCL' and cwbl.cntr_grp_cd = 'ETC' THEN 1 ELSE 0 END) as cntr_etc    
	        FROM
	            ( 
	            	SELECT  
	            		 cbl.intg_bl_seq
			            ,cbl.shp_mod_cd
			            ,cbl.nomi_flg
			            ,cntr_cd.cntr_grp_cd
			            ,ISNULL(cntr.intg_bl_seq, '') AS cntr_intg_bl_seq
			            ,cntr_cd.teu
			            ,rank() over(partition by cbl.mbl_intg_bl_seq, cntr.cntr_no order by cbl.intg_bl_seq) AS cntr_rank
					FROM ctrb_wbl cbl WITH(NOLOCK) 
				    JOIN tb_cntr_list cntr WITH(NOLOCK)  ON cntr.intg_bl_seq = cbl.intg_bl_seq AND cntr.delt_flg = 'N'
					LEFT OUTER JOIN tb_cntr_tpsz cntr_cd WITH(NOLOCK)  ON cntr_cd.cntr_tpsz_cd = cntr.cntr_tpsz_cd AND cntr_cd.delt_flg = 'N'     
				) cwbl       
	        WHERE 1 = 1   
	        AND   cwbl.cntr_rank = 1   
	        group by cwbl.intg_bl_seq )  
	        
	    <!-- UNION ALL Start -->
	    
		SELECT 
			<iterate property="arrrtn_col_hdr" conjunction=",">
	       		$arrrtn_col_hdr[]$
	       	</iterate>
        	<isNotNull>
	        	<iterate property="arr_sql_col_opt2">
	       	    $arr_sql_col_opt2[]$
	        	</iterate>
        	</isNotNull>
        	,bl.ctrb_profit_amt as ctrb_profit_amt                         
			,bl.ttl_ctrb_profit_amt as ttl_ctrb_profit_amt          
			,bl.profit_avg_amt as profit_avg_amt         	
	  	FROM (
	  		
	  		<!-- Case 1, 2 -->
	  		
	  		SELECT
	  			dept_nm,
	  			<iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       			$arrrtn_col_hdr_grp[]$
	      	 	</iterate>                                           
	            <isNotNull>
	        		<iterate property="arr_sql_col_opt">
	       	    	$arr_sql_col_opt[]$
	        		</iterate>
        		</isNotNull>
        	   ,SUM(bl.ctrb_profit_amt) as ctrb_profit_amt          
			   ,SUM(bl.profit_ar_amt - bl.profit_ap_amt + bl.profit_dc_amt + bl.ctrb_profit_amt) as ttl_ctrb_profit_amt                                    
			   ,SUM(CASE WHEN bl.air_sea_clss_cd = 'S' THEN (CASE WHEN (bl.fcl_cntr + bl.lcl_cntr + bl.fak_cntr + bl.blk_cntr) = 0 THEN 0
									 							  ELSE (bl.profit_ar_amt - bl.profit_ap_amt + bl.profit_dc_amt) / (bl.fcl_cntr + bl.lcl_cntr + bl.fak_cntr + bl.blk_cntr) END)
						 ELSE (CASE WHEN bl.ttl_cwt = 0 THEN 0         
                                    ELSE (bl.profit_ar_amt - bl.profit_ap_amt + bl.profit_dc_amt) / bl.ttl_cwt END)
				END) as profit_avg_amt
	           ,CASE WHEN bl.ref_ofc_cd = bl.ctrb_ofc_cd THEN 1 ELSE 2 END as sort_seq
	   		FROM (       
	   			SELECT
	            	 swbl.dept_nm,
	            	<iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    		$arrrtn_col_hdr_grp[]$
	        		</iterate>                             
	                ,swbl.air_sea_clss_cd 
		  		    ,swbl.mbl_intg_bl_seq
		  		    <isNotEqual property="s_grd_opt" compareValue="S">
		  		    ,swbl.period_dt
		  		    </isNotEqual>
	  		        ,SUM(swbl.meas)						as meas
				    ,SUM(swbl.grs_wgt)					as grs_wgt
				    ,SUM(swbl.chg_wgt)					as chg_wgt
				    ,SUM(swbl.cbm)                      as cbm
				    ,SUM(swbl.hbl_volume)               as bl_volume	
				    ,SUM(swbl.fcl_free)					as fcl_free
				    ,SUM(swbl.fcl_nomi)					as fcl_nomi
				    ,SUM(swbl.fcl_col) 					as fcl_col
				    ,SUM(swbl.fcl_etc) 					as fcl_etc
				    ,SUM(swbl.fcl_sum) 					as fcl_sum
				    ,SUM(swbl.fcl_cntr)					as fcl_cntr
				    ,SUM(swbl.lcl_free)					as lcl_free
				    ,SUM(swbl.lcl_nomi)					as lcl_nomi
				    ,SUM(swbl.lcl_col) 					as lcl_col
				    ,SUM(swbl.lcl_etc) 					as lcl_etc
				    ,SUM(swbl.lcl_sum) 					as lcl_sum
				    ,SUM(swbl.lcl_cntr)					as lcl_cntr
				    ,SUM(swbl.fak_free)					as fak_free
				    ,SUM(swbl.fak_nomi)					as fak_nomi
				    ,SUM(swbl.fak_col) 					as fak_col
				    ,SUM(swbl.fak_etc) 					as fak_etc
				    ,SUM(swbl.fak_sum) 					as fak_sum
				    ,SUM(swbl.fak_cntr)					as fak_cntr
				    ,SUM(swbl.blk_free)					as blk_free
				    ,SUM(swbl.blk_nomi)					as blk_nomi
				    ,SUM(swbl.blk_col) 					as blk_col
				    ,SUM(swbl.blk_etc) 					as blk_etc
				    ,SUM(swbl.blk_sum) 					as blk_sum
				    ,SUM(swbl.blk_cntr)					as blk_cntr
				    ,SUM(swbl.cntr_20) 					as cntr_20
				    ,SUM(swbl.cntr_40) 					as cntr_40
				    ,SUM(swbl.cntr_hq) 					as cntr_hq
				    ,SUM(swbl.cntr_45) 					as cntr_45
				    ,SUM(swbl.cntr_rf) 					as cntr_rf
				    ,SUM(swbl.cntr_etc)					as cntr_etc
				    ,SUM(swbl.cntr_sum)					as cntr_sum
				    ,SUM(swbl.cntr_cnt)					as cntr_cnt
				    ,SUM(swbl.free_hbl)					as free_hbl
				    ,SUM(swbl.free_gwt)					as free_gwt
				    ,SUM(swbl.free_cwt)					as free_cwt
				    ,SUM(swbl.nomi_hbl)					as nomi_hbl
				    ,SUM(swbl.nomi_gwt)					as nomi_gwt
				    ,SUM(swbl.nomi_cwt)					as nomi_cwt
				    ,SUM(swbl.col_hbl)					as col_hbl
				    ,SUM(swbl.col_gwt)					as col_gwt
				    ,SUM(swbl.col_cwt)					as col_cwt
				    ,SUM(swbl.etc_hbl)					as etc_hbl
				    ,SUM(swbl.etc_gwt)					as etc_gwt
				    ,SUM(swbl.etc_cwt)					as etc_cwt
				    ,SUM(swbl.ttl_hbl) 					as ttl_hbl
				    ,SUM(swbl.ttl_gwt) 					as ttl_gwt
				    ,SUM(swbl.ttl_cwt) 					as ttl_cwt
				    
				    ,SUM(swbl.profit_ar_amt) + MAX(swbl.mbl_profit_ar_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ar_amt 
					,SUM(swbl.profit_ap_amt) + MAX(swbl.mbl_profit_ap_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ap_amt 
					,SUM(swbl.profit_dc_amt) + MAX(swbl.mbl_profit_dc_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_dc_amt 
                   
					,CASE WHEN swbl.ref_ofc_cd = swbl.ctrb_ofc_cd AND swbl.disp_dept_nm = (CASE WHEN swbl.ctrb_dept_cd = 'OE' THEN 'Ocean Export'              
																	                            WHEN swbl.ctrb_dept_cd = 'OI' THEN 'Ocean Import'              
																	                            WHEN swbl.ctrb_dept_cd = 'AE' THEN 'Air Export'              
																	                            WHEN swbl.ctrb_dept_cd = 'AI' THEN 'Air Import'              
																	                            WHEN swbl.ctrb_dept_cd = 'OT' THEN 'Other'              
																	                            WHEN swbl.ctrb_dept_cd = 'WM' THEN 'Warehouse'            
																	                        END) THEN 0 
                          ELSE (CASE WHEN ISNULL(swbl.ctrb_ratio_yn,'N') = 'N' THEN SUM(swbl.ctrb_mgn) * -1
								   	 ELSE ((SUM(swbl.profit_ar_amt * swbl.ctrb_mgn * 0.01) +  
								   	 	  MAX(swbl.mbl_profit_ar_amt * swbl.ctrb_mgn * 0.01) * 
										  (SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
										  CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END) - 
					
										  SUM(swbl.profit_ap_amt * swbl.ctrb_mgn * 0.01) + 
										  MAX(swbl.mbl_profit_ap_amt * swbl.ctrb_mgn * 0.01) * 
										  (SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
										  CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END) + 
										
										  SUM(swbl.profit_dc_amt * swbl.ctrb_mgn * 0.01) + 
										  MAX(swbl.mbl_profit_dc_amt * swbl.ctrb_mgn * 0.01) * 
										  (SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
										  CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END)) * -1)  END) END as ctrb_profit_amt
	        	FROM (           
	        		SELECT
	                	 pwbl.intg_bl_seq                 
	                    ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O' THEN 'Ocean Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I' THEN 'Ocean Import'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O' THEN 'Air Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I' THEN 'Air Import'               
	                           WHEN pwbl.air_sea_clss_cd = 'W' THEN 'Warehouse' ELSE 'Other'                        
	                      END) as dept_nm
	                    ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O' THEN 'Ocean Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I' THEN 'Ocean Import'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O' THEN 'Air Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I' THEN 'Air Import'               
	                           WHEN pwbl.air_sea_clss_cd = 'W' THEN 'Warehouse' ELSE 'Other'                        
	                      END) disp_dept_nm
	                    ,pwbl.air_sea_clss_cd					
					  	,pwbl.bnd_clss_cd							
					  	,pwbl.biz_clss_cd			  
					  	,pwbl.mbl_intg_bl_seq	 
					  	,pwbl.hbl_tp_cd		
					  	,pwbl.shp_mod_cd				
					  	,pwbl.sub_mbl_flg 
					  	,pwbl.nomi_flg
					  	,pwbl.period_dt
					  	,pwbl.ref_ofc_cd
					  	,pwbl.mbl_no	
					  	,pwbl.bl_no	
					  	,pwbl.ref_no		  			
					  	,pwbl.agent_nm
					  	,pwbl.shpr_nm
					  	,pwbl.cnee_nm
					  	,pwbl.cust_nm
					  	,pwbl.acc_grp_id	
					  	,pwbl.carr_nm
					  	,pwbl.vsl_flt
					  	,pwbl.pol_nm
					  	,pwbl.pod_nm
					  	,pwbl.del_nm
					  	,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.etd_dt_tm,'')) = 12
					           THEN SUBSTRING(pwbl.etd_dt_tm, 5, 2) + SUBSTRING(pwbl.etd_dt_tm, 7, 2) + SUBSTRING(pwbl.etd_dt_tm, 1, 4) + SUBSTRING(pwbl.etd_dt_tm, 9, 4)
					           ELSE pwbl.etd_dt_tm
					     END) AS etd_dt_tm     
					    ,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.eta_dt_tm, '')) = 12
					           THEN SUBSTRING(pwbl.eta_dt_tm, 5, 2) + SUBSTRING(pwbl.eta_dt_tm, 7, 2) + SUBSTRING(pwbl.eta_dt_tm, 1, 4) + SUBSTRING(pwbl.eta_dt_tm, 9, 4)
					           ELSE pwbl.eta_dt_tm
					     END) AS eta_dt_tm   
					    ,pwbl.fnl_dest_nm
					  	,pwbl.lane_cd
					  	,pwbl.inco_cd
					  	,pwbl.rep_cmdt_nm
					  	,pwbl.cargo_tp_nm
					  	,pwbl.sls_usr_nm
					  	,pwbl.opr_usr_nm    	    
					  	,pwbl.meas											
					  	,pwbl.grs_wgt										
					  	,pwbl.chg_wgt										
					  	,pwbl.cbm                                       	      
					  	,pwbl.hbl_volume                                                as bl_volume	
					  	<isEqual property="s_ship_mode_fcl" compareValue="T">
					  	,(cntr.fcl_free)												as fcl_free
					  	,(cntr.fcl_nomi)												as fcl_nomi
					  	,(cntr.fcl_col)													as fcl_col
					  	,(cntr.fcl_etc)													as fcl_etc
					  	,(cntr.fcl_free + cntr.fcl_nomi + cntr.fcl_col +  cntr.fcl_etc)	as fcl_sum
					  	,(cntr.fcl_cntr)												as fcl_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_fcl" compareValue="F">
					  	,0																as fcl_free
					  	,0																as fcl_nomi
					  	,0																as fcl_col
					  	,0																as fcl_etc
					  	,0																as fcl_sum
					  	,0																as fcl_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_lcl" compareValue="T">	
					  	,(pwbl.lcl_free)												as lcl_free
					  	,(pwbl.lcl_nomi)												as lcl_nomi
					  	,(pwbl.lcl_col)													as lcl_col
					  	,(pwbl.lcl_etc)													as lcl_etc
					  	,(pwbl.lcl_free + pwbl.lcl_nomi + pwbl.lcl_col + pwbl.lcl_etc)	as lcl_sum
					  	,(cntr.lcl_cntr)												as lcl_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_lcl" compareValue="F">
					  	,0																as lcl_free
					  	,0																as lcl_nomi
					  	,0																as lcl_col
					  	,0																as lcl_etc
					  	,0																as lcl_sum
					  	,0																as lcl_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_fak" compareValue="T">	
					  	,(pwbl.fak_free)												as fak_free
					  	,(pwbl.fak_nomi)												as fak_nomi
					  	,(pwbl.fak_col)													as fak_col
					  	,(pwbl.fak_etc)													as fak_etc
					  	,(pwbl.fak_free + pwbl.fak_nomi + pwbl.fak_col + pwbl.fak_etc)	as fak_sum
					  	,(cntr.fak_cntr)												as fak_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_fak" compareValue="F">
					  	,0																as fak_free
					  	,0																as fak_nomi
					  	,0																as fak_col
					  	,0																as fak_etc
					  	,0																as fak_sum
					  	,0																as fak_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_blk" compareValue="T">
					  	,(pwbl.blk_free)												as blk_free
					  	,(pwbl.blk_nomi)												as blk_nomi
					  	,(pwbl.blk_col)													as blk_col
					  	,(pwbl.blk_etc)													as blk_etc
					  	,(pwbl.blk_free + pwbl.blk_nomi + pwbl.blk_col + pwbl.blk_etc)	as blk_sum
					  	,(cntr.blk_cntr)												as blk_cntr	
					  	</isEqual>
					  	<isEqual property="s_ship_mode_blk" compareValue="F">
					  	,0																as blk_free
					  	,0																as blk_nomi
					  	,0																as blk_col
					  	,0																as blk_etc
					  	,0																as blk_sum
					  	,0																as blk_cntr
					  	</isEqual>
					  	<isEqual property="s_ship_mode_fcl" compareValue="T">
					  	,(cntr.cntr_20)													as cntr_20		  
					  	,(cntr.cntr_40)													as cntr_40	
					  	,(cntr.cntr_hq)													as cntr_hq	
					  	,(cntr.cntr_45)													as cntr_45	
					  	,(cntr.cntr_rf)													as cntr_rf	
					  	,(cntr.cntr_etc)												as cntr_etc	
					  	,(cntr.fcl_free + cntr.fcl_nomi + cntr.fcl_col +  cntr.fcl_etc)	as cntr_sum
					  	,(cntr.fcl_cntr)												as cntr_cnt
					  	</isEqual>
					  	<isEqual property="s_ship_mode_fcl" compareValue="F">
					  	,0																as cntr_20
					  	,0																as cntr_40
					  	,0																as cntr_hq
					  	,0																as cntr_45
					  	,0																as cntr_rf
					  	,0																as cntr_etc
					  	,0																as cntr_sum
					  	,0																as cntr_cnt
					  	</isEqual>
					  	,(pwbl.free_hbl)												as free_hbl
					  	,(pwbl.free_gwt)												as free_gwt
					  	,(pwbl.free_cwt)												as free_cwt
					  	,(pwbl.nomi_hbl)												as nomi_hbl
					  	,(pwbl.nomi_gwt)												as nomi_gwt
					  	,(pwbl.nomi_cwt)												as nomi_cwt
					  	,(pwbl.col_hbl)													as col_hbl
					  	,(pwbl.col_gwt)													as col_gwt
					  	,(pwbl.col_cwt)													as col_cwt
					  	,(pwbl.etc_hbl)													as etc_hbl
					  	,(pwbl.etc_gwt)													as etc_gwt
					  	,(pwbl.etc_cwt)													as etc_cwt
					  	,(pwbl.free_hbl + pwbl.nomi_hbl + pwbl.col_hbl + pwbl.etc_hbl)	as ttl_hbl
					  	,(pwbl.free_gwt + pwbl.nomi_gwt + pwbl.col_gwt + pwbl.etc_gwt)	as ttl_gwt
					  	,(pwbl.free_cwt + pwbl.nomi_cwt + pwbl.col_cwt + pwbl.etc_cwt)	as ttl_cwt
					  	
					  	,pwbl.ar_inv_amt      											as profit_ar_amt
						,ISNULL(pwbl.mbl_ar_inv_amt,0) 									as mbl_profit_ar_amt
						,pwbl.ap_inv_amt       											as profit_ap_amt
						,ISNULL(pwbl.mbl_ap_inv_amt,0) 									as mbl_profit_ap_amt
						,pwbl.dc_inv_amt     											as profit_dc_amt
						,ISNULL(pwbl.mbl_dc_inv_amt,0)  								as mbl_profit_dc_amt 
						,pwbl.hbl_volume 												as hbl_volume
						,pwbl.mbl_volume 												as mbl_volume
						
	                    ,pwbl.ctrb_ofc_cd             
	                    ,pwbl.ctrb_dept_cd            
	                    ,pwbl.ctrb_ratio_yn            
	                    ,pwbl.ctrb_mgn               
	          		FROM wbl pwbl WITH(NOLOCK)            
	                LEFT OUTER JOIN wcntr cntr WITH(NOLOCK) ON pwbl.intg_bl_seq = cntr.intg_bl_seq ) swbl       
	                GROUP BY dept_nm, 
	                <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    		$arrrtn_col_hdr_grp[]$
	        		</iterate>
	                ,ctrb_dept_cd, ctrb_ratio_yn, swbl.air_sea_clss_cd, swbl.mbl_intg_bl_seq
	                <isNotEqual property="s_grd_opt" compareValue="S">
		  		    ,swbl.period_dt
		  		    </isNotEqual>      
	       			) bl   
	            GROUP BY dept_nm, 
	            <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    	$arrrtn_col_hdr_grp[]$
	        	</iterate>
	                    
			UNION ALL
			
			<!-- Case 3 -->
	
			SELECT
	  			dept_nm, 
	            <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       			$arrrtn_col_hdr_grp[]$
	      	 	</iterate>                                             
	            <isNotNull>
	        		<iterate property="arr_sql_col_opt1">
	       	    	$arr_sql_col_opt1[]$
	        		</iterate>
        		</isNotNull>
        	   ,SUM(bl.ctrb_profit_amt) as ctrb_profit_amt             
			   ,SUM(bl.ctrb_profit_amt) as ttl_ctrb_profit_amt                                    
			   ,0 as profit_avg_amt
	           ,CASE WHEN bl.ref_ofc_cd = bl.ctrb_ofc_cd THEN 3 ELSE 4 END as sort_seq
	   		FROM (       
	   			SELECT
	            	 swbl.dept_nm,     
	            	<iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    		$arrrtn_col_hdr_grp[]$
	        		</iterate>                             
	                ,swbl.air_sea_clss_cd  
		  		    ,swbl.mbl_intg_bl_seq
		  		    <isNotEqual property="s_grd_opt" compareValue="S">
		  		    ,swbl.period_dt
		  		    </isNotEqual>
	  		        ,SUM(swbl.meas)						as meas
				    ,SUM(swbl.grs_wgt)					as grs_wgt
				    ,SUM(swbl.chg_wgt)					as chg_wgt
				    ,SUM(swbl.cbm)                      as cbm
				    ,SUM(swbl.hbl_volume)               as bl_volume	
				    ,SUM(swbl.fcl_free)					as fcl_free
				    ,SUM(swbl.fcl_nomi)					as fcl_nomi
				    ,SUM(swbl.fcl_col) 					as fcl_col
				    ,SUM(swbl.fcl_etc) 					as fcl_etc
				    ,SUM(swbl.fcl_sum) 					as fcl_sum
				    ,SUM(swbl.fcl_cntr)					as fcl_cntr
				    ,SUM(swbl.lcl_free)					as lcl_free
				    ,SUM(swbl.lcl_nomi)					as lcl_nomi
				    ,SUM(swbl.lcl_col) 					as lcl_col
				    ,SUM(swbl.lcl_etc) 					as lcl_etc
				    ,SUM(swbl.lcl_sum) 					as lcl_sum
				    ,SUM(swbl.lcl_cntr)					as lcl_cntr
				    ,SUM(swbl.fak_free)					as fak_free
				    ,SUM(swbl.fak_nomi)					as fak_nomi
				    ,SUM(swbl.fak_col) 					as fak_col
				    ,SUM(swbl.fak_etc) 					as fak_etc
				    ,SUM(swbl.fak_sum) 					as fak_sum
				    ,SUM(swbl.fak_cntr)					as fak_cntr
				    ,SUM(swbl.blk_free)					as blk_free
				    ,SUM(swbl.blk_nomi)					as blk_nomi
				    ,SUM(swbl.blk_col) 					as blk_col
				    ,SUM(swbl.blk_etc) 					as blk_etc
				    ,SUM(swbl.blk_sum) 					as blk_sum
				    ,SUM(swbl.blk_cntr)					as blk_cntr
				    ,SUM(swbl.cntr_20) 					as cntr_20
				    ,SUM(swbl.cntr_40) 					as cntr_40
				    ,SUM(swbl.cntr_hq) 					as cntr_hq
				    ,SUM(swbl.cntr_45) 					as cntr_45
				    ,SUM(swbl.cntr_rf) 					as cntr_rf
				    ,SUM(swbl.cntr_etc)					as cntr_etc
				    ,SUM(swbl.cntr_sum)					as cntr_sum
				    ,SUM(swbl.cntr_cnt)					as cntr_cnt
				    ,SUM(swbl.free_hbl)					as free_hbl
				    ,SUM(swbl.free_gwt)					as free_gwt
				    ,SUM(swbl.free_cwt)					as free_cwt
				    ,SUM(swbl.nomi_hbl)					as nomi_hbl
				    ,SUM(swbl.nomi_gwt)					as nomi_gwt
				    ,SUM(swbl.nomi_cwt)					as nomi_cwt
				    ,SUM(swbl.col_hbl)					as col_hbl
				    ,SUM(swbl.col_gwt)					as col_gwt
				    ,SUM(swbl.col_cwt)					as col_cwt
				    ,SUM(swbl.etc_hbl)					as etc_hbl
				    ,SUM(swbl.etc_gwt)					as etc_gwt
				    ,SUM(swbl.etc_cwt)					as etc_cwt
				    ,SUM(swbl.ttl_hbl) 					as ttl_hbl
				    ,SUM(swbl.ttl_gwt) 					as ttl_gwt
				    ,SUM(swbl.ttl_cwt) 					as ttl_cwt
				    
				    ,SUM(swbl.profit_ar_amt) + MAX(swbl.mbl_profit_ar_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ar_amt 
					,SUM(swbl.profit_ap_amt) + MAX(swbl.mbl_profit_ap_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_ap_amt 
					,SUM(swbl.profit_dc_amt) + MAX(swbl.mbl_profit_dc_amt) * (SUM(swbl.hbl_volume) / MAX(swbl.mbl_volume)) as profit_dc_amt 
                   
                    ,(CASE WHEN ISNULL(swbl.ctrb_ratio_yn,'N') = 'N' THEN SUM(swbl.ctrb_mgn)
						   ELSE SUM(swbl.profit_ar_amt * swbl.ctrb_mgn * 0.01) +  
						   		MAX(swbl.mbl_profit_ar_amt * swbl.ctrb_mgn * 0.01) * 
							    (SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
								CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END) - 
			
								SUM(swbl.profit_ap_amt * swbl.ctrb_mgn * 0.01) + 
								MAX(swbl.mbl_profit_ap_amt * swbl.ctrb_mgn * 0.01) * 
								(SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
								CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END) + 
								
								SUM(swbl.profit_dc_amt * swbl.ctrb_mgn * 0.01) + 
								MAX(swbl.mbl_profit_dc_amt * swbl.ctrb_mgn * 0.01) * 
								(SUM(swbl.hbl_volume * swbl.ctrb_mgn * 0.01) / 
								CASE WHEN MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) = 0 THEN 1 ELSE MAX(swbl.mbl_volume * swbl.ctrb_mgn * 0.01) END) END) as ctrb_profit_amt
	         	FROM (           
	         		SELECT
	         			pwbl.intg_bl_seq                 
	                    ,(CASE WHEN pwbl.ctrb_dept_cd = 'OI' THEN 'Ocean Import' 
							   WHEN pwbl.ctrb_dept_cd = 'OE' THEN 'Ocean Export' 
							   WHEN pwbl.ctrb_dept_cd = 'AI' THEN 'Air Import' 
							   WHEN pwbl.ctrb_dept_cd = 'AE' THEN 'Air Export' 
							   WHEN pwbl.ctrb_dept_cd = 'OT' THEN 'Other' 
							   WHEN pwbl.ctrb_dept_cd = 'WH' THEN 'Warehouse' ELSE '' 
						  END) as dept_nm
	                    ,(CASE WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'O' THEN 'Ocean Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'S' AND pwbl.bnd_clss_cd = 'I' THEN 'Ocean Import'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'O' THEN 'Air Export'            
	                           WHEN pwbl.air_sea_clss_cd = 'A' AND pwbl.bnd_clss_cd = 'I' THEN 'Air Import'               
	                           WHEN pwbl.air_sea_clss_cd = 'W' THEN 'Warehouse' ELSE 'Other'                        
	                      END) disp_dept_nm
	                    ,pwbl.air_sea_clss_cd					
					  	,pwbl.bnd_clss_cd							
					  	,pwbl.biz_clss_cd			  
					  	,pwbl.mbl_intg_bl_seq	 
					  	,pwbl.hbl_tp_cd		
					  	,pwbl.shp_mod_cd				
					  	,pwbl.sub_mbl_flg 
					  	,pwbl.nomi_flg
					  	,pwbl.period_dt
					  	,pwbl.ref_ofc_cd
					  	,pwbl.mbl_no	
					  	,pwbl.bl_no	
					  	,pwbl.ref_no		  			
					  	,pwbl.agent_nm
					  	,pwbl.shpr_nm
					  	,pwbl.cnee_nm
					  	,pwbl.cust_nm
					  	,pwbl.acc_grp_id	
					  	,pwbl.carr_nm
					  	,pwbl.vsl_flt
					  	,pwbl.pol_nm
					  	,pwbl.pod_nm
					  	,pwbl.del_nm
					  	,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.etd_dt_tm,'')) = 12
					           THEN SUBSTRING(pwbl.etd_dt_tm, 5, 2) + SUBSTRING(pwbl.etd_dt_tm, 7, 2) + SUBSTRING(pwbl.etd_dt_tm, 1, 4) + SUBSTRING(pwbl.etd_dt_tm, 9, 4)
					           ELSE pwbl.etd_dt_tm
					     END) AS etd_dt_tm     
					    ,(CASE WHEN pwbl.air_sea_clss_cd = 'A' AND len(ISNULL(pwbl.eta_dt_tm, '')) = 12
					           THEN SUBSTRING(pwbl.eta_dt_tm, 5, 2) + SUBSTRING(pwbl.eta_dt_tm, 7, 2) + SUBSTRING(pwbl.eta_dt_tm, 1, 4) + SUBSTRING(pwbl.eta_dt_tm, 9, 4)
					           ELSE pwbl.eta_dt_tm
					     END) AS eta_dt_tm   
					    ,pwbl.fnl_dest_nm
					  	,pwbl.lane_cd
					  	,pwbl.inco_cd
					  	,pwbl.rep_cmdt_nm
					  	,pwbl.cargo_tp_nm
					  	,pwbl.sls_usr_nm
					  	,pwbl.opr_usr_nm    	    
					  	,pwbl.meas											
					  	,pwbl.grs_wgt										
					  	,pwbl.chg_wgt										
					  	,pwbl.cbm                                       	      
					  	,pwbl.hbl_volume                                                as bl_volume
					  	
					  	,0																as fcl_free
					  	,0																as fcl_nomi
					  	,0																as fcl_col
					  	,0																as fcl_etc
					  	,0																as fcl_sum
					  	,0																as fcl_cntr
					  	
					  	,0																as lcl_free
					  	,0																as lcl_nomi
					  	,0																as lcl_col
					  	,0																as lcl_etc
					  	,0																as lcl_sum
					  	,0																as lcl_cntr
					  	
					  	,0																as fak_free
					  	,0																as fak_nomi
					  	,0																as fak_col
					  	,0																as fak_etc
					  	,0																as fak_sum
					  	,0																as fak_cntr
					  	
					  	,0																as blk_free
					  	,0																as blk_nomi
					  	,0																as blk_col
					  	,0																as blk_etc
					  	,0																as blk_sum
					  	,0																as blk_cntr
					  	
					  	,0																as cntr_20
					  	,0																as cntr_40
					  	,0																as cntr_hq
					  	,0																as cntr_45
					  	,0																as cntr_rf
					  	,0																as cntr_etc
					  	,0																as cntr_sum
					  	,0																as cntr_cnt
					  	
					  	,(pwbl.free_hbl)												as free_hbl
					  	,(pwbl.free_gwt)												as free_gwt
					  	,(pwbl.free_cwt)												as free_cwt
					  	,(pwbl.nomi_hbl)												as nomi_hbl
					  	,(pwbl.nomi_gwt)												as nomi_gwt
					  	,(pwbl.nomi_cwt)												as nomi_cwt
					  	,(pwbl.col_hbl)													as col_hbl
					  	,(pwbl.col_gwt)													as col_gwt
					  	,(pwbl.col_cwt)													as col_cwt
					  	,(pwbl.etc_hbl)													as etc_hbl
					  	,(pwbl.etc_gwt)													as etc_gwt
					  	,(pwbl.etc_cwt)													as etc_cwt
					  	,(pwbl.free_hbl + pwbl.nomi_hbl + pwbl.col_hbl + pwbl.etc_hbl)	as ttl_hbl
					  	,(pwbl.free_gwt + pwbl.nomi_gwt + pwbl.col_gwt + pwbl.etc_gwt)	as ttl_gwt
					  	,(pwbl.free_cwt + pwbl.nomi_cwt + pwbl.col_cwt + pwbl.etc_cwt)	as ttl_cwt
					  	
					  	,pwbl.ar_inv_amt      											as profit_ar_amt
						,ISNULL(pwbl.mbl_ar_inv_amt,0) 									as mbl_profit_ar_amt
						,pwbl.ap_inv_amt       											as profit_ap_amt
						,ISNULL(pwbl.mbl_ap_inv_amt,0) 									as mbl_profit_ap_amt
						,pwbl.dc_inv_amt     											as profit_dc_amt
						,ISNULL(pwbl.mbl_dc_inv_amt,0)  								as mbl_profit_dc_amt 
						,pwbl.hbl_volume 												as hbl_volume
						,pwbl.mbl_volume 												as mbl_volume
									  
	                    ,pwbl.ctrb_ofc_cd             
	                    ,pwbl.ctrb_dept_cd            
	                    ,pwbl.ctrb_ratio_yn            
	                    ,pwbl.ctrb_mgn               
	          		FROM ctrb_wbl pwbl WITH(NOLOCK)            
	                LEFT OUTER JOIN ctrb_wcntr cntr WITH(NOLOCK) ON pwbl.intg_bl_seq = cntr.intg_bl_seq ) swbl       
	                GROUP BY dept_nm, 
	                <iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    		$arrrtn_col_hdr_grp[]$
	        		</iterate>
	                ,ctrb_ratio_yn, swbl.air_sea_clss_cd, swbl.mbl_intg_bl_seq 
	                <isNotEqual property="s_grd_opt" compareValue="S">
		  		    ,swbl.period_dt
		  		    </isNotEqual>  
	                ) bl   
	      		GROUP BY dept_nm, 
	      		<iterate property="arrrtn_col_hdr_grp" conjunction=",">
	       	    	$arrrtn_col_hdr_grp[]$
	        	</iterate>
	      		) bl 
	    </dynamic>	    
    </select>
    
    <!-- Batch Performance LKH 2015.01.28 -->
    <procedure id="setBatchPrf" parameterClass="HashMap">
		 { CALL SP_BATCH_PRF(#f_usrId#) } 
	</procedure>
	
	<!-- GL View Table Data Create LKH 2015.02.25 -->
    <procedure id="setGlDataCreate" parameterClass="HashMap">
		 { CALL SP_GL_DATA_CREATE(#f_usrId#,#f_type_clss_cd#) } 
	</procedure>
	<!-- GL View Table Data Create LKH 2015.02.25 -->
	<select id="selectGlDataCreateDate" parameterClass="java.util.HashMap" resultClass="String">
    /* ============== PfmMgtSQL.xml : selectGlDataCreateDate ============== */
    SELECT (CASE WHEN CAST(MAX(ISNULL(SEQ,'0')) AS varchar) = '0' 
    			THEN 'NotCreate' 
    			ELSE
					SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),1,4)
					+'-'+SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),5,2)
					+'-'+SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),7,2)
					+' '+SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),9,2)
					+':'+SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),11,2)
					+':'+SUBSTRING(CAST(MAX(ISNULL(SEQ,'0')) AS varchar),13,2)
		 		END
		 ) AS SEQ
		 FROM TB_SEQ WHERE SEQ_TYPE = #f_type_clss_cd#
    </select>
	
	<select id="selectEmployeeRptTargetList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.EmployeeReportVO">
	/* PfmMgtSQL.xml > selectEmployeeRptTargetList */
	     SELECT IBL.ISSUED_BY, 
					MAX(CASE WHEN IBL.DEPT_CD = 'SOM' THEN IBL.BL_CNT ELSE '0' END) AS OEM,
					MAX(CASE WHEN IBL.DEPT_CD = 'SOH' THEN IBL.BL_CNT ELSE '0' END) AS OEH,
					MAX(CASE WHEN IBL.DEPT_CD = 'SIM' THEN IBL.BL_CNT ELSE '0' END) AS OIM,
					MAX(CASE WHEN IBL.DEPT_CD = 'SIH' THEN IBL.BL_CNT ELSE '0' END) AS OIH,
					MAX(CASE WHEN IBL.DEPT_CD = 'AOM' THEN IBL.BL_CNT ELSE '0' END) AS AEM,
					MAX(CASE WHEN IBL.DEPT_CD = 'AOH' THEN IBL.BL_CNT ELSE '0' END) AS AEH,
					MAX(CASE WHEN IBL.DEPT_CD = 'AIM' THEN IBL.BL_CNT ELSE '0' END) AS AIM,
					MAX(CASE WHEN IBL.DEPT_CD = 'AIH' THEN IBL.BL_CNT ELSE '0' END) AS AIH,

					MAX(CASE WHEN IBL.SELL_BUY_TP_CD = 'S' THEN IBL.BL_CNT ELSE '0' END) AS JAR,	/* JNR A/R */
					MAX(CASE WHEN IBL.SELL_BUY_TP_CD = 'B' THEN IBL.BL_CNT ELSE '0' END) AS JAP,	/* JNR A/P */
					MAX(CASE WHEN IBL.SELL_BUY_TP_CD = 'D' OR IBL.DEPT_CD = 'C' THEN IBL.BL_CNT ELSE '0' END) AS JDC,	/* JNR DE/CR */
		
					MAX(CASE WHEN IBL.JNR_TP = 'D' THEN IBL.BL_CNT ELSE '0' END) AS DPS,	/* DEPOSIT */
					MAX(CASE WHEN IBL.JNR_TP = 'C' THEN IBL.BL_CNT ELSE '0' END) AS PMT		/* PAYMENT */
		
		FROM (
				SELECT  BL.ISSUED_BY, COUNT(BL.INTG_BL_SEQ) AS BL_CNT, '' AS SELL_BUY_TP_CD,'' AS JNR_TP,
						(BL.AIR_SEA_CLSS_CD+ BL.BND_CLSS_CD+ BL.BIZ_CLSS_CD) AS DEPT_CD , BL.REF_OFC_CD 
				FROM (
						SELECT IBL.INTG_BL_SEQ, IBL.AIR_SEA_CLSS_CD, BND.BND_CLSS_CD, 
									IBL.BIZ_CLSS_CD, IBL.REF_OFC_CD, IBL.BL_NO,
									BND.ISSUED_BY, IBL.POST_DT
						FROM	   TB_INTG_BL IBL
									INNER JOIN TB_ADD_INFO_BND BND
									ON IBL.INTG_BL_SEQ = BND.INTG_BL_SEQ
						WHERE 1=1
						AND		IBL.POST_DT BETWEEN #fr_dt# AND #to_dt#
						<isNotNull property="s_ofc_cd">
							AND	IBL.REF_OFC_CD = #s_ofc_cd#
						</isNotNull>
					) AS BL
				WHERE 1=1
				GROUP BY 
				 	BL.ISSUED_BY, BL.AIR_SEA_CLSS_CD, BL.BND_CLSS_CD, BL.BIZ_CLSS_CD, BL.REF_OFC_CD
		
				 UNION ALL
		
				SELECT INV.RGST_USRID, COUNT(INV.INV_SEQ) AS INV_CNT, 
						'' AS DEPT_CD, '' AS JNR_TP,
						INV.SELL_BUY_TP_CD, INV.OFC_CD
				FROM (
						SELECT  DTL.RGST_USRID, INVC.INV_SEQ, 
						INVC.AIR_SEA_CLSS_CD, INVC.BND_CLSS_CD, 
						SELL_BUY_TP_CD, INVC.OFC_CD, DTL.INV_POST_DT, DTL.INV_NO
						FROM  TB_INV INVC
						INNER JOIN TB_INV_DTL DTL
						ON	 INVC.INV_SEQ = DTL.INV_SEQ 
						WHERE 1=1
						AND DTL.INV_POST_DT BETWEEN #fr_dt# AND #to_dt#  
						<isNotNull property="s_ofc_cd">
							AND INVC.OFC_CD = #s_ofc_cd#
						</isNotNull>
					) AS INV
				WHERE 1=1
				GROUP BY 
				 	INV.RGST_USRID, INV.SELL_BUY_TP_CD, INV.OFC_CD
		
				 UNION ALL
		
				 SELECT JNR.RGST_USRID, COUNT(JNR.JNR_NO) AS JNR_CNT, JNR.JNR_TP, JNR.P_OFC_CD
						,'' AS DEPT_CD, '' AS SELL_BUY_TP_CD 
				FROM (
						SELECT RGST_USRID, JNR_NO, JNR_TP, POST_DT, P_OFC_CD
						FROM TB_JNR_MST 
						WHERE 1=1 
						AND POST_DT BETWEEN #fr_dt# AND #to_dt# 
						<isNotNull property="s_ofc_cd">
							AND P_OFC_CD = #s_ofc_cd#							
						</isNotNull>
					) AS JNR 
				WHERE 1=1
				GROUP BY 
					JNR.RGST_USRID, JNR.JNR_TP, JNR.P_OFC_CD
		) IBL
		GROUP BY IBL.ISSUED_BY
    </select>
	
</sqlMap>