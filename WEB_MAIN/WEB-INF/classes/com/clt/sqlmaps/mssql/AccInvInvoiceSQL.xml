<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="acc.inv.invoice">
	
	<typeAlias alias="BlInfoVO" 	type="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO"/>	<!-- BL공통정보   -->
	<typeAlias alias="FrtVO" 		type="com.clt.apps.fis.acc.inv.invoice.dto.FrtVO"/>		<!-- FreightInfo   -->
	<typeAlias alias="InvListVO" 	type="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO"/>	<!-- InvoiceList   -->
	<typeAlias alias="PaidVO" 		type="com.clt.apps.fis.acc.inv.invoice.dto.PaidVO"/>	<!-- PaidHistoryInfo   -->
	

	<!--LOCAL INVOICE HBL정보 조회  -->
    <select id="selectBL_INFO" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > selectBL_INFO  */
        SELECT  top 1
                bl.intg_bl_seq,  
        		bl.ref_no,      
        		bl.ref_ofc_cd,
        		(SELECT cnt_cd FROM TB_OFC WHERE OFC_CD = bl.ref_ofc_cd) AS cnt_cd,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
        		     ELSE mbl.bl_no 		
        		END AS mbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
        		     ELSE bl.bl_no
        		end AS hbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.lnr_bkg_no  ELSE mbl.lnr_bkg_no END     AS lnr_bkg_no,
        		bl.bl_no,
        		bl.sub_bl_no,		   
        		CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.trnk_vsl_nm
        		     ELSE bl.flt_no
        		END vsl_flt,
        		bl.pod_cd,
        		bl.pod_nm,
        		CONVERT(varchar(8), bl.etd_dt_tm, 120)   AS etd_dt_tm,
        		CONVERT(varchar(8), bl.eta_dt_tm, 120)   AS eta_dt_tm,
        		CONVERT(varchar(8), bl.f_eta_dt_tm, 120) AS f_eta_dt_tm,
        		bl.por_cd,
        		bl.por_nm,
        		shp.trdp_cd AS shpr_trdp_cd,      shp.trdp_nm AS shpr_trdp_nm,      shp.trdp_addr AS shpr_trdp_addr,
                cne.trdp_cd AS cnee_trdp_cd,      cne.trdp_nm AS cnee_trdp_nm,      cne.trdp_addr AS cnee_trdp_addr,
                ntf.trdp_cd AS ntfy_trdp_cd,      ntf.trdp_nm AS ntfy_trdp_nm,      ntf.trdp_addr AS ntfy_trdp_addr,
                act.trdp_cd AS act_shpr_trdp_cd,  act.trdp_nm AS act_shpr_trdp_nm,  act.trdp_addr AS act_trdp_addr,
                lnr.trdp_cd AS lnr_trdp_cd,       lnr.trdp_nm AS lnr_trdp_nm,
                ptn.trdp_cd AS prnr_trdp_cd,      
                ptn.trdp_nm AS prnr_trdp_nm,      
                ptn.trdp_addr AS prnr_trdp_addr,
                agent.trdp_cd AS agent_trdp_cd,   agent.trdp_nm AS agent_trdp_nm,   agent.trdp_addr AS agent_trdp_addr,
                third.trdp_cd AS third_trdp_cd,   third.trdp_nm AS third_trdp_nm,   third.trdp_addr AS third_trdp_addr,
                ptn2.trdp_cd AS prnr_trdp_cd2,    
                ptn2.trdp_nm AS prnr_trdp_nm2,    
                ptn2.trdp_addr AS prnr_trdp_addr2,
                carr.trdp_cd AS carr_trdp_cd,
                carr.trdp_nm AS carr_trdp_nm,
        		bl.rep_cmdt_nm,
        		bl.pck_qty,
        		bl.pck_ut_cd,     
        		pcd.pck_nm 			AS pck_ut_nm, 
        		bl.grs_wgt,
        		bl.grs_wgt1,
        		bl.chg_wgt,
                bl.chg_wgt1,
        		bl.meas,
        		bl.meas1,
				CASE WHEN bl.biz_clss_cd = 'H' AND bnd.bnd_clss_cd= 'O' THEN bl.cust_curr_cd
				     ELSE bl.curr_cd
				END AS curr_cd,
				bl.rmk,
				bl.mbl_ref_no,
				bl.post_dt,
				bl.agent_rt,
				bl.agent_amt,
				bl.agent_curr_cd,
				bl.cust_rt,
				bl.cust_amt,
				bl.cust_curr_cd,
				CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.exp_ref_no
				     ELSE bl.inv_no
				END exp_ref_no,
				bl.cust_ref_no,
				CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)       
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS bill_to_cd,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)       
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS bill_to_cd2,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_cd     
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS ship_to_cd,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_cd  
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS ship_to_cd2,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)     
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS bill_to_nm,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)        
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS bill_to_nm2,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_nm 
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS ship_to_nm,
		        CASE 
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_nm      
		            WHEN bl.biz_clss_cd = 'M' THEN ''     
		        END AS ship_to_nm2,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN bl.post_dt
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_CD FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_cd,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_DT FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_dt,
				bl.air_sea_clss_cd,
				bl.biz_clss_cd,
				bnd.bnd_clss_cd,
				CASE WHEN bnd.bnd_clss_cd = 'I' AND bl.biz_clss_cd = 'H' THEN CASE WHEN #dc_agt_ref_no# = 'R' THEN mbl.imp_ref_no 
																				   WHEN #dc_agt_ref_no# = 'M' THEN mbl.bl_no 
																				   ELSE bl.imp_ref_no END 
					 ELSE bl.imp_ref_no END as imp_ref_no,
				bl.profit_share,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ref_ofc_cd ) AS bl_cnt_cd,
				CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
			    END AS agent_ps_code,
				bl.inco_cd,
				bl.agent_chg_wgt,
				bl.agent_grs_wgt,
				bl.vol_wgt,
				bl.vol_meas,
				bl.pol_cd, 
				bl.pol_nm, 
				bl.del_cd, 
				bl.del_nm, 
				'' AS fnl_dest_nod_cd, 
				bl.fnl_dest_loc_nm,
				(select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ref_ofc_cd and set_type = 'CLOGO_1') AS logo1,
				bl.agent_chg_wgt1, bl.agent_grs_wgt1, bl.customer_unit_chk,bl.agent_unit_chk, bl.shp_mod_cd,
				CASE WHEN bl.biz_clss_cd = 'H' THEN mbl.intg_bl_seq ELSE bl.intg_bl_seq END AS m_intg_bl_seq
         FROM   tb_intg_bl bl
         JOIN   tb_add_info_bnd bnd
           ON   bl.intg_bl_seq = bnd.intg_bl_seq 
           <dynamic>
        	<isNotEmpty property="f_bnd_clss_cd">
           		AND bnd.bnd_clss_cd = #f_bnd_clss_cd#   
           	</isNotEmpty>
           </dynamic>
           AND bnd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr act
           ON   bl.intg_bl_seq = act.intg_bl_seq  AND act.bl_trdp_tp_cd = 'S02' AND act.delt_flg = 'N'
LEFT OUTER JOIN tb_pck_ut_cd pcd        
           ON   bl.pck_ut_cd   = pcd.pck_ut_cd    AND pcd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr shp
           ON   bl.intg_bl_seq = shp.intg_bl_seq  AND shp.bl_trdp_tp_cd = 'S01' AND shp.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr cne
           ON   bl.intg_bl_seq = cne.intg_bl_seq  AND cne.bl_trdp_tp_cd = 'C01' AND cne.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ntf
           ON   bl.intg_bl_seq = ntf.intg_bl_seq  AND ntf.bl_trdp_tp_cd = 'N01' AND ntf.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr lnr
           ON   bl.intg_bl_seq = lnr.intg_bl_seq  AND lnr.bl_trdp_tp_cd = 'L01' AND lnr.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn
           ON   bl.intg_bl_seq = ptn.intg_bl_seq  AND ptn.bl_trdp_tp_cd = 'P01' AND ptn.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr agent
           ON   bl.intg_bl_seq = agent.intg_bl_seq  AND agent.bl_trdp_tp_cd = 'A01' AND agent.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr third
           ON   bl.intg_bl_seq = third.intg_bl_seq  AND third.bl_trdp_tp_cd = 'T01' AND third.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn2
           ON   bl.intg_bl_seq = ptn2.intg_bl_seq  AND ptn2.bl_trdp_tp_cd = 'P03' AND ptn2.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr carr  
           ON   bl.intg_bl_seq = carr.intg_bl_seq  AND carr.bl_trdp_tp_cd = 'B01' AND carr.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl_rlt rlt
            ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl mbl
            ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
        WHERE bl.delt_flg    = 'N' 
        <dynamic>
        	<isNotEmpty property="f_biz_clss_cd">
        		AND bl.biz_clss_cd 	 = #f_biz_clss_cd# 
        	</isNotEmpty>
        	<isNotEmpty property="f_air_sea_clss_cd">
        		AND bl.air_sea_clss_cd = #f_air_sea_clss_cd#
        	</isNotEmpty>
            <isNotEmpty property="f_intg_bl_seq">
                AND bl.intg_bl_seq = #f_intg_bl_seq#
            </isNotEmpty>           
            <isNotEmpty property="s_bl_no">
                AND bl.bl_no  = #s_bl_no#
            </isNotEmpty>
            <isNotEmpty property="s_ref_no">
                AND bl.ref_no  = #s_ref_no#
            </isNotEmpty>
        </dynamic>
    </select>
    
    
    
    
    
    <!--LOCAL INVOICE OTHER 정보 조회  -->
    <select id="selectOTHER_INFO" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > selectOTHER_INFO  */
        SELECT  top 1
                bl.OTH_SEQ,  
        		bl.ref_no       AS oth_no,
        		bl.ref_no,      
        		bl.ofc_cd		AS ref_ofc_cd,
        		bl.MBL_NO 		AS mbl_no,
        		bl.HBL_NO 		AS hbl_no,
        		bl.vsl_flt,
        		bl.pod_cd,
        		bl.pod_nm,
        		CONVERT(varchar(8), bl.etd_dt_tm, 120)   AS etd_dt_tm,
        		CONVERT(varchar(8), bl.eta_dt_tm, 120)   AS eta_dt_tm,
        		CONVERT(varchar(8), bl.feta_dt_tm, 120)  AS f_eta_dt_tm,
        		bl.POL_CD,
        		bl.POL_NM,
        		bl.CMDT_CD,
        		bl.CMDT_NM	    AS rep_cmdt_nm,
        		bl.pck_qty,
        		bl.pck_ut_cd,     
        		bl.curr_cd,
        		(SELECT PCK_NM 
        		   FROM tb_pck_ut_cd pcd
        		  WHERE bl.pck_ut_cd   = pcd.pck_ut_cd 
        		    AND pcd.delt_flg = 'N'
        		) AS pck_ut_nm, 
        		bl.GRS_WGT_K    AS grs_wgt,
        		bl.GRS_WGT_L    AS grs_wgt1,
        		bl.MEAS_M       AS meas,
        		bl.MEAS_F       AS meas1,
				bl.post_dt,
				bl.CUST_CD      AS bill_to_cd,
				bl.CUST_NM      AS bill_to_nm,
				bl.CUST_CD      AS ship_to_cd,
				bl.CUST_NM      AS ship_to_nm,
				bl.CUST_NM      AS cust_nm,				
				bl.SHPR_NM      AS shpr_trdp_nm,
				bl.CNEE_NM	    AS cnee_trdp_nm,
				bl.cust_ref_no,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN bl.post_dt
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END             AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				(SELECT CR_TERM_CD 
				   FROM TB_TRDP 
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_cd,
				(SELECT CR_TERM_DT 
				   FROM TB_TRDP 
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_dt,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ofc_cd ) AS bl_cnt_cd,
				(SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS agent_ps_code
			    , (select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ofc_cd and set_type = 'CLOGO_1') AS logo1
         FROM   TB_OTH_SALES bl
        WHERE bl.delt_flg = 'N' 
          AND bl.oth_seq  = #f_oth_seq#
            
    </select>

	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchWmsInfo" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > searchWmsInfo  */
        SELECT  top 1
                bl.WM_DOC_SEQ AS wms_seq,  
        		bl.DOC_REF_NO       AS wms_no,
        		bl.DOC_REF_NO  AS ref_no,      
        		bl.ofc_cd		AS ref_ofc_cd,
        		bl.MBL_NO 		AS mbl_no,
        		bl.HBL_NO 		AS hbl_no,
        		'' AS vsl_flt, 
        		'' AS pod_cd,
        		'' AS pod_nm,
        		''   AS etd_dt_tm,
        		''  AS eta_dt_tm,
        		''  AS f_eta_dt_tm,
        		''  AS POL_CD,
        		''  AS POL_NM,
        		bl.CMDT_CD,
        		bl.CMDT_NM	    AS rep_cmdt_nm,
        		'' AS pck_qty,
        		'' AS pck_ut_cd,     
        		bl.curr_cd,
        		'' AS pck_ut_nm, 
        		''    AS grs_wgt,
        		''    AS grs_wgt1,
        		''       AS meas,
        		''       AS meas1,
				bl.post_dt,
				bl.CUST_CD      AS bill_to_cd,
				bl.CUST_NM      AS bill_to_nm,
				bl.CUST_CD      AS ship_to_cd,
				bl.CUST_NM      AS ship_to_nm,
				bl.CUST_NM      AS cust_nm,				
				''      AS shpr_trdp_nm,
				''	    AS cnee_trdp_nm,
				bl.cust_ref_no,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN bl.post_dt
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END             AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				(SELECT CR_TERM_CD 
				   FROM TB_TRDP 
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_cd,
				(SELECT CR_TERM_DT 
				   FROM TB_TRDP 
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_dt,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ofc_cd ) AS bl_cnt_cd,
				(SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS agent_ps_code
			    , (select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ofc_cd and set_type = 'CLOGO_1') AS logo1
			    ,cntr_info AS wms_cntr_info
         FROM   TB_WM_DOC_MST bl
        WHERE bl.delt_flg = 'N' 
          AND bl.WM_DOC_SEQ  = #f_wms_seq#
            
    </select>
	<!-- 27532_[BINEX]HAWB 상 운임 Display 조건수정 (B/L Check Box에 체크된것만 추출-->
	<!-- LOCAL INVOICE Freight 목록 조회. BL 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: s_wms_no, frt_seq 검색조건 rollback -->
    <select id="selectFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fd.tax_rate AS vat_rt,
		         fd.whld_tax_rate AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 '' as inv_rmk,
				 idt.modi_tms,
				 fr.wms_seq
           FROM  tb_frt    fr 
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N' 
LEFT OUTER JOIN  TB_INTG_BL BL 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ 
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID 
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'             
          WHERE  fr.delt_flg 		= 'N'
          <isNotEmpty property="f_oth_seq">
          	AND fr.oth_seq     = #f_oth_seq#
          </isNotEmpty>
          <isNotEmpty property="f_intg_bl_seq">
          	AND fr.intg_bl_seq     = #f_intg_bl_seq#
          </isNotEmpty>
          <isNotEmpty property="f_wms_seq">
          	AND fr.wms_seq     = #f_wms_seq#
          </isNotEmpty>
          <isNotNull property="chk_fr_trdp_cd">
			AND fr.trdp_cd = #chk_fr_trdp_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
			AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
			AND fr.frt_seq IN ( $chk_fr_frt_seq$ ) 
		  </isNotNull>
<!-- 		  <isEqual property="f_bnd_clss_cd" compareValue="O">
		  	AND fr.frt_term_cd = 'PP'
		  </isEqual>
		  <isEqual property="f_bnd_clss_cd" compareValue="I">
		  	AND fr.frt_term_cd = 'CC'
		  </isEqual> -->
            AND  fr.sell_buy_tp_cd  = 'S'  
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    
    
    <!-- CR/DB INVOICE Freight 목록 조회. BL 정보   -->
    <select id="selectCRDBFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectCRDBFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             
                 CASE WHEN fr.sell_buy_tp_cd = 'D' THEN fr.ru
                      WHEN fr.sell_buy_tp_cd = 'C' THEN fr.agent_ru
                 END AS ru,				
                 fr.agent_ru,
		  		 fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 CASE WHEN isnull(fr.agent_amt,0) = 0 THEN isnull(fr.inv_amt,  0)
		  		      ELSE isnull(fr.agent_amt,0)
		  		 END AS agent_amt,	
		  		 CASE WHEN fr.frt_term_cd = 'CC' THEN isnull(fr.cr_amt,0)  		 	 
		  		      ELSE 0
		  		 END AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code, 
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
		         idt.JNR_YN,
  				 idt.JNR_DT,
   				 idt.CLS_YN,
   				 idt.CLS_DT,
 				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
 				 idt.modi_tms
           FROM  tb_frt    fr 
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N' 
LEFT OUTER JOIN  TB_INTG_BL bl 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ 
LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON  bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ          
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID 
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'             
          WHERE  fr.delt_flg 		= 'N'
          <isNotEmpty property="f_oth_seq">
          	AND  fr.oth_seq     = #f_oth_seq#
          </isNotEmpty>
          <isEmpty property="f_oth_seq">
          	AND  fr.intg_bl_seq = #f_intg_bl_seq#
          </isEmpty>
          <isNotNull property="chk_fr_trdp_cd">
			AND fr.trdp_cd = #chk_fr_trdp_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
			AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
			AND fr.frt_seq IN ( $chk_fr_frt_seq$ )
		  </isNotNull>
            AND  fr.sell_buy_tp_cd  IN ('C','D')
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    
    <!-- AP PAYABLE 목록 조회. BL 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: s_wms_no, frt_seq 검색조건 rollback -->
    <select id="selectAPFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,  		fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fd.tax_rate AS vat_rt,
		         fd.whld_tax_rate AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 '' as inv_rmk,
		         idt.JNR_YN,
  				 idt.JNR_DT,
   				 idt.CLS_YN,
   				 idt.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 fr.inv_post_dt AS frt_inv_post_dt,
   				 idt.modi_tms,
   				 fr.wms_seq
           FROM  tb_frt    fr 
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'             
            WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_oth_seq">
          		AND  fr.oth_seq     = #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_intg_bl_seq">
          	    AND  fr.intg_bl_seq = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
	          	AND fr.wms_seq     = #f_wms_seq#
	        </isNotEmpty>	        
            <isNotNull property="chk_fr_trdp_cd">
			AND fr.trdp_cd = #chk_fr_trdp_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
			AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
			AND fr.frt_seq IN ( $chk_fr_frt_seq$ )
		  </isNotNull>
		  <isEqual property="f_bnd_clss_cd" compareValue="O">
		  	AND fr.frt_term_cd = 'PP'
		  </isEqual>
		  <isEqual property="f_bnd_clss_cd" compareValue="I">
		  	AND fr.frt_term_cd = 'CC'
		  </isEqual>
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    <!-- local invoice Freight 목록 조회. INVOICE 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: frt_seq 검색조건 rollback -->
    <select id="selectINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd, 
		         fr.vat_rt AS vat_rt,
		         fr.whld_vat_rt AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.inv_no,
				 fr.inv_dt,		
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,	
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.inv_ship_trdp_cd,
				 fr.inv_ship_trdp_cd_nm,
				 fr.cust_ref_no,
				 fr.oth_seq,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.tax_bil_flg,
				 fr.attn_to,
				 fr.tax_no,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 idt.modi_tms,
   				 fr.wms_seq
           FROM  (SELECT a.*, b.inv_no,  b.inv_dt,		 b.inv_post_dt AS i_post_dt,	
           				 b.inv_due_dt,	 c.inv_rmk,		 b.inv_aply_curr_cd,
           				 c.trdp_cd 		AS inv_trdp_cd,      tp.eng_nm AS inv_trdp_cd_nm,
           				 c.ship_trdp_cd AS inv_ship_trdp_cd, c.ship_trdp_nm AS inv_ship_trdp_cd_nm,
           				 b.cust_ref_no,  b.last_pay_dt,	 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 c.tax_bil_flg,
           				 c.attn_to,
           				 c.tax_no,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq AND c.delt_flg = 'N'
                 LEFT OUTER JOIN  tb_trdp   tp   
		     				  ON c.trdp_cd = tp.trdp_cd AND tp.delt_flg = 'N'
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1 
                   WHERE  a.delt_flg 		= 'N'
                   <isNotEmpty property="f_intg_bl_seq">
                     AND  a.intg_bl_seq     = #f_intg_bl_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_oth_seq">
                   	 AND  a.oth_seq			= #f_oth_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_wms_seq">
		    	 	AND a.wms_seq = #f_wms_seq#
		    	   </isNotEmpty>
					 AND  a.sell_buy_tp_cd  = 'S'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'  
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
    	 		AND fr.wms_seq = #f_wms_seq#
    	    </isNotEmpty>
    	    
            AND  fr.sell_buy_tp_cd  = 'S'
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    <!-- CR/DB invoice Freight 목록 조회. INVOICE 정보   -->
    <select id="selectCRDBINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectCRDBINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,	 
		  		 CASE WHEN fr.frt_term_cd = 'CC' THEN isnull(fr.cr_amt,0)  		 	 
		  		      ELSE 0
		  		 END AS credit_amt,       
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd, 
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 fr.inv_no,
				 fr.inv_dt,		
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,	
				 CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 fr.inv_rmk,
				 fr.profit_share,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.cust_ref_no,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.intg_bl_seq_2,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.tax_bil_flg,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 idt.modi_tms
           FROM  (SELECT a.*, b.inv_no,  b.inv_dt,		 b.inv_post_dt AS i_post_dt,	
           				 b.inv_due_dt,	 c.inv_rmk,		 b.inv_aply_curr_cd,
           				 b.profit_share,
           				 c.trdp_cd 		AS inv_trdp_cd,  tp.eng_nm AS inv_trdp_cd_nm,
           				 b.cust_ref_no,  b.last_pay_dt,	 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 c.tax_bil_flg,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 LEFT OUTER JOIN  tb_trdp   tp   
		     				  ON c.trdp_cd = tp.trdp_cd AND tp.delt_flg = 'N'
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1 
                   WHERE  a.delt_flg 		= 'N'
                   	 <isNotEmpty property="f_intg_bl_seq">
                     	AND  a.intg_bl_seq     = #f_intg_bl_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_oth_seq">
                   	 	AND  a.oth_seq			= #f_oth_seq#
                     </isNotEmpty>
					 AND  a.sell_buy_tp_cd  IN ('C','D')
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL bl 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON  bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            AND  fr.sell_buy_tp_cd  IN ('C','D')
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    
    <!-- ap invoice Freight 목록 조회. INVOICE 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: frt_seq 검색조건 rollback -->
    <select id="selectAPINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt AS vat_rt,
		         fr.whld_vat_rt AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,		
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,	
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.buy_inv_rcv,
				 fr.tax_bil_flg,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 fr.frt_inv_post_dt,
   				 idt.modi_tms,
   				 fr.wms_seq
           FROM  (SELECT a.*, b.buy_inv_no as inv_no, b.inv_dt,		b.inv_post_dt AS i_post_dt,	
           				 b.inv_due_dt,	c.inv_rmk,	b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 c.trdp_cd AS inv_trdp_cd,	    
           				 d.eng_nm  AS inv_trdp_cd_nm,
           				 b.last_pay_dt,	 
           				 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 b.buy_inv_rcv,
           				 c.tax_bil_flg,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT,
           				 a.inv_post_dt AS frt_inv_post_dt
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 			JOIN tb_trdp d   
		     				  ON c.trdp_cd = d.trdp_cd 
		     				  /* 27518 AND d.delt_flg = 'N' */
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1 
                   WHERE  a.delt_flg 		= 'N'
                   	 <isNotEmpty property="f_intg_bl_seq">
                     	AND  a.intg_bl_seq     = #f_intg_bl_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_oth_seq">
                   	 	AND  a.oth_seq			= #f_oth_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_wms_seq">
			    	 	AND a.wms_seq = #f_wms_seq#
			    	 </isNotEmpty>
					 AND  a.sell_buy_tp_cd  = 'B'
					 AND  a.delt_flg 		= 'N'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL 
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'  
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
    	 		AND fr.wms_seq = #f_wms_seq#
    	    </isNotEmpty>
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    <!-- AR, AP Expense Freight 목록 조회. INVOICE 정보   -->
    <select id="selectArApEXP_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectArApEXP_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd, fr.inv_vat_amt,     		 fr.inv_sum_amt,    
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,		
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,	
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.buy_inv_rcv,
				 fr.tax_bil_flg,
				 fr.acc_dept_cd AS RESERVE_FIELD02,
				 fr.acc_dept_cd,
				 fr.ofc_cd,
				 fr.ref_ofc_cd,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 fr.frt_inv_post_dt,
   				 idt.modi_tms,
   				 (SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = fr.ofc_cd) as bl_cnt_cd,
   				 fr.sls_ofc_cd
           FROM  (SELECT a.*, b.buy_inv_no as inv_no, b.inv_dt,		b.inv_post_dt AS i_post_dt,	
           				 b.inv_due_dt,	c.inv_rmk,	b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 c.trdp_cd AS inv_trdp_cd,	    
           				 d.eng_nm  AS inv_trdp_cd_nm,
           				 b.last_pay_dt,	 
           				 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 b.buy_inv_rcv,
           				 c.tax_bil_flg,
           				 c.RESERVE_FIELD02 AS acc_dept_cd,
           				 c.ofc_cd AS ref_ofc_cd,
           				 c.ofc_cd,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT,
           				 a.inv_post_dt AS frt_inv_post_dt
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 			JOIN tb_trdp d   
		     				  ON c.trdp_cd = d.trdp_cd 
		     				  /* 27518 AND d.delt_flg = 'N' */
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1 
                   WHERE  a.delt_flg 		= 'N'
                   	 AND  a.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
					 AND  a.delt_flg 		= 'N'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'  
          WHERE  fr.delt_flg 		= 'N'
            AND  fr.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    <!-- Invoice PK생성   -->
    <select id="selectINV_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(inv_seq)+1, 1)
          FROM  tb_inv
    </select>
    
    <!-- Invoice A/P EXPENSE OTHER BRANCH PK생성   -->
    <select id="selectINV_OTH_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(CONVERT(NUMERIC, INV_SEQ)), 0) + 1
          FROM  tb_exp_inv
    </select>
    
    <!-- Invoice PK생성   -->
    <select id="selectINV_DTL_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(inv_dtl_seq)+1, 1)
          FROM  tb_inv_dtl
    </select>
    
    
    
    
    <!--INVOICE MASTER 테이블 등록   -->
    <insert id="insertINV_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > insertINV_MST*/
        INSERT  tb_inv(
                inv_seq,        	trdp_cd,			frt_ask_clss_cd,	inv_iss_flg,		inv_sts_cd, 
		        air_sea_clss_cd,    bnd_clss_cd,        sell_buy_tp_cd,		inv_ttl_amt,		inv_ttl_vat_amt,
		        perf_ttl_amt,		perf_ttl_vat_amt,	locl_ttl_amt,		locl_ttl_vat_amt,	trdp_calc_clss_cd,
		        clt_cmpl_flg,		stl_bss_clss_cd,	stl_fm_dt,			stl_to_dt,			ofc_cd,
		        rgst_usrid,			rgst_ofc_cd,		rgst_tms,			modi_usrid,			modi_ofc_cd,
		        modi_tms,			delt_flg,			inv_ttl_sum_amt,	tax_bil_flg,		inv_rmk,
		        cmb_inv_seq,		dept_cd,			ship_trdp_cd,		inv_dept_cd,		inco_cd,
		        attn_to,			reserve_field02,  	ship_trdp_nm,		inv_modi_tms,		tax_no
        )VALUES(
                #inv_seq#,        	#trdp_cd#,			#frt_ask_clss_cd#,	#inv_iss_flg#,		#inv_sts_cd#, 
		        #air_sea_clss_cd#,  #bnd_clss_cd#,      #sell_buy_tp_cd#,	#inv_ttl_amt#,		#inv_ttl_vat_amt#,
		        #perf_ttl_amt#,		#perf_ttl_vat_amt#,	#locl_ttl_amt#,		#locl_ttl_vat_amt#,	#trdp_calc_clss_cd#,
		        #clt_cmpl_flg#,		#stl_bss_clss_cd#,	#stl_fm_dt#,		#stl_to_dt#,		#ofc_cd#,
		        #proc_usrid#,		#proc_ofccd#,		getdate(),			#proc_usrid#,		#proc_ofccd#,
		        GETUTCDATE(),			#delt_flg#,			#inv_ttl_sum_amt#,	#tax_bil_flg#,		#inv_rmk#,
		        #cmb_inv_seq#,		#dept_cd#,			#ship_trdp_cd#,		#inv_dept_cd#,		#inco_cd#,
		        #attn_to#,			#reserve_field02#, 	#ship_trdp_nm#,		getdate(),          #tax_no#
        )
    </insert>
    
    
    <!--INVOICE DETAILE 테이블 등록   -->
    <insert id="insertINV_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > insertINV_DTL*/
        INSERT  tb_inv_dtl(
                inv_no,				buy_inv_no,				
                inv_seq,        	frt_ask_clss_cd,	inv_iss_flg,		inv_sts_cd, 
                clt_cmpl_flg,		inv_aply_curr_cd,	inv_xcrt_dt,		inv_aply_xcrt,		inv_amt,
				inv_vat_amt,		inv_sum_amt,		frgn_curr_cd,		frgn_amt,			frgn_vat_amt,
				frgn_sum_amt,		bal_amt,			bal_vat_amt,		bal_frgn_amt,		bal_frgn_vat_amt,
				inv_dt,				inv_post_dt,		inv_due_dt,			profit_share,		cust_ref_no,
				inv_dtl_seq,		inv_krw_amt,		delt_flg,			buy_inv_rcv,        last_pay_dt,
				rgst_usrid,			rgst_ofc_cd,		rgst_tms,
				modi_usrid,			modi_ofc_cd,		modi_tms,			inv_modi_tms
        )VALUES(
                #inv_no#,			#buy_inv_no#,			
                #inv_seq#,        	#frt_ask_clss_cd#,	#inv_iss_flg#,		#inv_sts_cd#, 
                #clt_cmpl_flg#,		#inv_aply_curr_cd#, #inv_xcrt_dt#,		#inv_aply_xcrt#,	#inv_amt#,
                #inv_vat_amt#,		#inv_sum_amt#,		#frgn_curr_cd#,		#frgn_amt#,			#frgn_vat_amt#,
                #frgn_sum_amt#,		#bal_amt#,			#bal_vat_amt#,		#bal_frgn_amt#,		#bal_frgn_vat_amt#,
                #inv_dt#,			#inv_post_dt#,		#inv_due_dt#,		#profit_share#,		#cust_ref_no#,
                #inv_dtl_seq#,		#inv_krw_amt#,		#delt_flg#,			#buy_inv_rcv#,		#last_pay_dt#,	
                #proc_usrid#,		#proc_ofccd#,		getdate(),
                #proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),			getdate()
        )
    </insert>
    
    
    <!--INVOICE MASTER 테이블 수정   -->
    <update id="updateINV_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > updateINV_MST*/
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #perf_ttl_amt#
                ,inv_rmk			= #inv_rmk#
                ,trdp_cd			= #trdp_cd#
                ,ship_trdp_cd		= #ship_trdp_cd#
                ,ship_trdp_nm		= #ship_trdp_nm#
                ,sell_buy_tp_cd		= #sell_buy_tp_cd#
                ,inco_cd			= #inco_cd#
                ,tax_bil_flg		= #tax_bil_flg#
                ,attn_to			= #attn_to#
             <isNotNull property="ofc_cd">
                ,ofc_cd             = #ofc_cd#
             </isNotNull>
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms           = GETUTCDATE()
			    ,reserve_field02	= #reserve_field02#
			    ,inv_modi_tms		= getdate()
			    ,tax_no             = #tax_no#
         WHERE inv_seq = #inv_seq#
    </update>
    
    
    <!-- LOCAL INVOICE MASTER 테이블 수정   -->
    <update id="updateFRTAMT_INVAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > updateFRTAMT_INVAMT_MST*/
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    <!--CR/DB MASTER 테이블 수정   -->
    <update id="updateFRTAMT_CRDBAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
                ,sell_buy_tp_cd		= #sell_buy_tp_cd#
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    <!-- A/P MASTER 테이블 수정   -->
    <update id="updateFRTAMT_APAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    
    <!--INVOICE DETAIL 테이블 수정   -->
    <update id="updateINV_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,last_pay_dt        = #last_pay_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,buy_inv_no			= #buy_inv_no#
                ,buy_inv_rcv		= #buy_inv_rcv#
                ,inv_no				= #inv_no#
                ,inv_sts_cd         = CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms		= getdate()
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    <update id="upateJnrPayAmtUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_jnr_dtl
           SET   pay_amt			= pay_amt * -1
                ,ttl_pay_amt		= ttl_pay_amt * -1
                ,gl_no				= (case when #sell_buy_tp_cd# = 'D' then gl_agent_ar else gl_agent_ap end)
			    ,modi_tms			= GETUTCDATE()
		  FROM  tb_ofc ofc		  
         WHERE  tb_jnr_dtl.ofc_cd = ofc.ofc_cd
           AND  inv_seq = #inv_seq#       
    </update>
    
    <update id="upateInvPayAmtUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   pay_amt			= pay_amt * -1
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#       
    </update>
    
    <update id="upateInvStsUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET inv_sts_cd		= (CASE WHEN ISNULL(pay_amt, 0) = 0 THEN 'IS' ELSE 'IC' END)
			  ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
           AND bal_amt != 0
    </update>
    
    <!--INVOICE DETAIL 테이블 수정   -->
    <update id="updateFRTAMT_INVAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#       
    </update>
    
    <!--CR/DB DETAIL 테이블 수정   -->
    <update id="updateFRTAMT_CRDBAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#       
    </update>
    
    
    
    <!--INVOICE DETAIL AP 테이블 수정   -->
    <update id="updateINV_DTL_AP" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,buy_inv_no			= #buy_inv_no#
                ,buy_inv_rcv		= #buy_inv_rcv#
                ,inv_sts_cd			= CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms		= getdate()
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    <!--INVOICE DETAIL AR 테이블 수정   -->
    <update id="updateINV_DTL_AR" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,inv_no				= #inv_no#
                ,inv_sts_cd			= CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms			= getdate()
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    <!--INVOICE DETAIL AP 테이블 수정   -->
    <update id="updateFRTAMT_APAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,inv_krw_amt		= #inv_sum_amt#
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#       
          
    </update>
    
    
    
    <!--FREIGHT 등록   -->
    <insert id="insertFRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,			
    			inv_seq,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt					
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(
    			<!-- frt_seq,	 -->		
    			inv_seq,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt, 		sls_ofc_cd,
    			whld_vat_rt
    	) SELECT
    			<!-- (SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt), -->
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,      #sls_ofc_cd#,
    			#whld_vat_rt#    	
    </insert>
    
    <!--FREIGHT 등록   -->
    <insert id="insertFRT_LIST_OTHER" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,			
    			inv_seq,			frt_cd_nm,
    			oth_seq,			frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt		
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#oth_seq#,			#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)    	
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    	INSERT INTO tb_frt(
   		
    			inv_seq,			frt_cd_nm,
    			oth_seq,			frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,        sls_ofc_cd,		
    			wms_seq,			whld_vat_rt    	
    	) SELECT

    			#inv_seq#,			#frt_cd_nm#,
    			#oth_seq#,			#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,      #sls_ofc_cd#,
    			#wms_seq#,			#whld_vat_rt#
    </insert>
    
    
    <!--FREIGHT CR/DB등록   -->
    <insert id="insertCRDB_FRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,			
    			inv_seq,
    			intg_bl_seq,		frt_cd,				frt_cd_nm,				
    			aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				
    			ru,
    			agent_ru,
    			trf_cur_sum_amt,	
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    			<isNotEmpty property="intg_bl_seq_2">		
    				,intg_bl_seq_2
    			</isNotEmpty>					
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,
    			#intg_bl_seq#,		#frt_cd#,			#frt_cd_nm#,			
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				
    			<isEqual property="sell_buy_tp_cd" compareValue="D"> 
				 #ru#,
				 0,
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> 
				 #ru#,
				 #ru#, 
			   </isEqual>
    			#trf_cur_sum_amt#,	
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#		
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    	)
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(
			
    			inv_seq,
    			intg_bl_seq,		frt_cd,				frt_cd_nm,				
    			aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				
    			ru,
    			agent_ru,
    			trf_cur_sum_amt,	
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,
    			vat_rt,             vat_amt,            inv_vat_amt
    			<isNotEmpty property="intg_bl_seq_2">		
    				,intg_bl_seq_2
    			</isNotEmpty>	
    			,sls_ofc_cd				
    	) SELECT

    			#inv_seq#,
    			#intg_bl_seq#,		#frt_cd#,			#frt_cd_nm#,			
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				
    			<isEqual property="sell_buy_tp_cd" compareValue="D"> 
				 #ru#,
				 0,
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> 
				 #ru#,
				 #ru#, 
			   </isEqual>
    			#trf_cur_sum_amt#,	
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,
    			#vat_rt#,           #vat_amt#,          #inv_vat_amt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    			,#sls_ofc_cd#
    			
    </insert>
    
    
    
    <!--FREIGHT 등록   -->
    <insert id="insertCRDB_FRT_OTHER" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,			
    			inv_seq,
    			oth_seq,		frt_cd,				frt_cd_nm,				
    			aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    			<isNotEmpty property="intg_bl_seq_2">		
    				,intg_bl_seq_2
    			</isNotEmpty>					
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,
    			#oth_seq#,			#frt_cd#,			#frt_cd_nm#,			
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#		
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    	)
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(
		
    			inv_seq,
    			oth_seq,		frt_cd,				frt_cd_nm,				
    			aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,
    			vat_rt,             vat_amt,            inv_vat_amt
    			<isNotEmpty property="intg_bl_seq_2">		
    				,intg_bl_seq_2
    			</isNotEmpty>		
    			,sls_ofc_cd			
    	) SELECT

    			#inv_seq#,
    			#oth_seq#,			#frt_cd#,			#frt_cd_nm#,			
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,
    			#vat_rt#,           #vat_amt#,          #inv_vat_amt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    			,#sls_ofc_cd#
    </insert>
    
    
    <!--FREIGHT INVOICE 정보 포함 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt     = #whld_vat_rt#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT INVOICE EXPENSE 정보 포함 테이블 수정   -->
    <update id="updateEXP_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>
    
    
    
    
    <!--FREIGHT INVOICE 정보중 INV_CURR_CD 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	       ,trdp_cd			= #trdp_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT INVOICE EXPENSE 정보중 INV_CURR_CD 수정   -->
    <update id="updateEXP_FRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>
    
    
    <!--FREIGHT INVOICE 정보 포함 테이블 수정   -->
    <update id="updateCRDB_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       <isEqual property="sell_buy_tp_cd" compareValue="D"><!-- Debit ��ru �명똿 OJG 20130321  -->
				 ,ru				= #ru#
				  ,agent_ru		= 0
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> <!-- Credit ��agent_ru �명똿 OJG 20130321  -->
				 ,ru		= #ru#
				 ,agent_ru		= #ru#
			   </isEqual>
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #debit_amt#
    	       ,inv_sum_amt		= #debit_amt#
    	       ,agent_amt		= #agent_amt#
    	       ,cr_amt			= #credit_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,sell_buy_tp_cd  = #sell_buy_tp_cd#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd		    = #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	       <isNotEmpty property="intg_bl_seq_2">
    	       	,intg_bl_seq_2   = isnull(#intg_bl_seq_2#, 0)
    	       </isNotEmpty>
    	       ,sls_ofc_cd		= #sls_ofc_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT INVOICE 정보 포함 테이블 수정  A/P용  -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateAPFRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT 정보 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    
    <!--FREIGHT EXPENSE용 정보 테이블 수정   -->
    <update id="updateEXP_FRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>
    
    
    <!--FREIGHT 정보 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateAPFRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT 정보 테이블 수정   -->
    <update id="updateCRDB_FRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       <isEqual property="sell_buy_tp_cd" compareValue="D"><!-- Debit ��ru �명똿 OJG 20130321  -->
				 ,ru				= #ru#
				 ,agent_ru		= 0
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> <!-- Credit ��agent_ru �명똿 OJG 20130321  -->
				 ,ru		= #ru#
				 ,agent_ru		= #ru#
			   </isEqual>
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #debit_amt#
    	       ,inv_sum_amt		= #debit_amt#
    	       ,agent_amt		= #agent_amt#
    	       ,cr_amt			= #credit_amt#
    	       ,sell_buy_tp_cd  = #sell_buy_tp_cd#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	       <isNotEmpty property="intg_bl_seq_2">
    	       	,intg_bl_seq_2   = isnull(#intg_bl_seq_2#, 0)
    	       </isNotEmpty>
    	       ,sls_ofc_cd		= #sls_ofc_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
			  ,delt_flg		= 'Y'
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	   AND frt_seq 		= #frt_seq#
    </update>
    
    
    
    <!--FREIGHT 테이블 수정   -->
    <update id="updateEXPFRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	   AND inv_seq = #inv_seq#
    	   AND frt_seq = #frt_seq#
    </update>
    
    
    <!--FREIGHT EXPENSE 용 테이블 수정   -->
    <update id="updateEXP_FRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>
    
    
    <!--FREIGHT EXPENSE 용 테이블 수정   -->
    <update id="updateEXPLIST_FRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	 <isNotEmpty property="f_inv_seq">
    	 	AND inv_seq = #f_inv_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>

	
	
	<!--FREIGHT 테이블 삭제   -->
	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="deleteFRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 AND frt_seq 		= #frt_seq#
    </update>
    
    
    <!--FREIGHT EXPENSE 용 테이블 삭제   -->
    <update id="deleteEXP_FRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = #intg_bl_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 AND rgst_ofc_cd	 = #proc_ofccd#
    	 AND air_sea_clss_cd = 'G'
    	 AND frt_seq 		 = #frt_seq#
    </update>
    
    
    <!--INVOICE MST 테이블 삭제   -->
    <update id="deleteINV_MST_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_INV
    	   SET DELT_FLG = 'Y'
    	      ,modi_usrid		= #proc_usrid#
			  ,modi_ofc_cd		= #proc_ofccd#
			  ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #f_inv_seq#
    </update>
    
    <!--INVOICE DTL 테이블 삭제   -->
    <update id="deleteINV_DTL_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
    	   SET DELT_FLG = 'Y'
			    ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #f_inv_seq#
    </update>
    
    
    
    <!-- House B/L Info select ajax  Chungrue 2011.11.02  -->
    <select id="selectBL_CommonInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectBL_CommonInfo  */
        SELECT  bl.intg_bl_seq,     				bl.bl_no,
        		bl.biz_clss_cd,						bl.air_sea_clss_cd,
        		bnd.bnd_clss_cd
        		, ISNULL(BLCK.BL_STS_CD1, BL.BL_STS_CD) AS bl_sts_cd
          FROM  tb_intg_bl bl
				LEFT OUTER JOIN tb_add_info_bnd bnd
            ON  bl.intg_bl_seq = bnd.intg_bl_seq
          		LEFT OUTER JOIN(SELECT INTG_BL_SEQ AS INTG_BL_SEQ1, BL_STS_CD AS BL_STS_CD1 FROM TB_INTG_BL_BLCK) BLCK 
          	ON BL.INTG_BL_SEQ = BLCK.INTG_BL_SEQ1
         WHERE  bl.bl_no = #s_bl_no#
         <isNotNull property="s_biz_cls_cd">
    	 	AND bl.biz_clss_cd = #s_biz_cls_cd#
    	 </isNotNull>
    	 <isNotNull property="s_ref_no">
    	 	AND bl.ref_no = #s_ref_no#
    	 </isNotNull>
           AND  ISNULL(bl.DELT_FLG, 'N') = 'N'
    </select>
    
    <!-- REF Info select ajax  Chungrue 2012.01.03  -->
    <select id="selectRefInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectRefInfo  */
        SELECT  bl.intg_bl_seq,     				bl.bl_no,
        		bl.biz_clss_cd,						bl.air_sea_clss_cd,
        		bnd.bnd_clss_cd,				    bl.ref_no
        		, ISNULL(BLCK.BL_STS_CD1, BL.BL_STS_CD) AS bl_sts_cd
          FROM  tb_intg_bl bl
				LEFT OUTER JOIN tb_add_info_bnd bnd
            ON  bl.intg_bl_seq = bnd.intg_bl_seq
                LEFT OUTER JOIN(SELECT INTG_BL_SEQ AS INTG_BL_SEQ1, BL_STS_CD AS BL_STS_CD1 FROM TB_INTG_BL_BLCK) BLCK 
            ON  BL.INTG_BL_SEQ = BLCK.INTG_BL_SEQ1
         WHERE  bl.ref_no = #s_ref_no#
           AND  bl.biz_clss_cd = 'M'
           AND  ISNULL(bl.DELT_FLG, 'N') = 'N'
    </select>
    
    <!-- Other Info select ajax  Chungrue 2011.11.02  -->
    <select id="selectOther_Info" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectOther_Info  */
        SELECT  oth_seq,     				
        		ref_no
        		, ISNULL(BLCK.STS_CD1, OTH.STS_CD) AS sts_cd
          FROM  TB_OTH_SALES OTH
          LEFT OUTER JOIN (SELECT OTH_SEQ AS OTH_SEQ1, STS_CD AS STS_CD1 FROM TB_OTH_SALES_BLCK) BLCK 
                ON OTH.OTH_SEQ = BLCK.OTH_SEQ1
         WHERE  ref_no = #s_oth_no#
           AND  ISNULL(DELT_FLG, 'N') = 'N'
           
    </select>
    
    <!-- WMS ACCOUNT LKH 2015.01.20  -->
    <select id="searchWarehouseInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchWarehouseInfo  */
        SELECT  top 1
        		wm_doc_seq AS wms_seq,     				
        		doc_ref_no AS ref_no,
        		sts_cd
          FROM  TB_WM_DOC_MST
         WHERE  doc_ref_no = #s_wms_no#
           AND  ISNULL(DELT_FLG, 'N') = 'N'
           
           <!--vinh.vo 2015/08/10 (S)  -->
           order by wms_seq desc
           <!--vinh.vo 2015/08/10 (E)  -->
           
    </select>
    
    <!-- Invoice Info select  ajax Chungrue 2011.11.02  -->
    <select id="selectInvInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectInvInfo  */
        SELECT   dtl.inv_seq
                ,dtl.inv_no
		  FROM  tb_inv_dtl dtl
		 LEFT JOIN tb_inv mst ON dtl.inv_seq = mst.inv_seq AND ISNULL(mst.DELT_FLG, 'N') = 'N'
		 WHERE inv_no = #s_inv_no#
		   AND (mst.sell_buy_tp_cd = #type1# OR mst.sell_buy_tp_cd = #type2#) 
    </select>
    
    
    
    <!-- InvoiceNO로 BL정보인지 OTHER 정보인지를 구분한다.   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="selectINV_BL_OTHER_INFO" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectINV_BL_OTHER_INFO  */
    	SELECT MAX(intg_bl_seq) AS intg_bl_seq
    	      ,MAX(oth_seq)		AS oth_seq
    	      ,MAX(wms_seq)     AS wms_seq
    	  FROM tb_frt
    	 WHERE inv_seq 		= #f_inv_seq#
    	 GROUP BY intg_bl_seq, oth_seq, isnull(wms_seq, '') 
    </select>
    
    <!-- Invoice BL Info select  Chungrue 2011.11.02  -->
    <select id="selectBL_INFO_INV" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > selectBL_INFO_INV  */
        SELECT TOP 1
               x.*
          FROM (
	              SELECT distinct(bl.intg_bl_seq)
			        	,bl.bl_no
				        ,bl.AIR_SEA_CLSS_CD
				        ,bl.BIZ_CLSS_CD
				        ,bnd.BND_CLSS_CD
				  FROM  TB_INTG_BL bl
				LEFT OUTER JOIN TB_FRT fr ON bl.INTG_BL_SEQ = fr.INTG_BL_SEQ AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				LEFT OUTER JOIN TB_ADD_INFO_BND bnd ON bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
				 WHERE fr.INV_SEQ     = #f_inv_seq#
			   ) x

    </select>
    
    
    <!-- Invoice OTHER Info select  Chungrue 2011.11.02  -->
    <select id="selectOTHER_INFO_INV" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > selectOTHER_INFO_INV  */
        SELECT TOP 1
               x.*
          FROM (
		        SELECT   distinct(bl.oth_seq)
				        ,bl.ref_no
				  FROM  TB_OTH_SALES bl
				LEFT OUTER JOIN TB_FRT fr ON bl.oth_seq = fr.oth_seq AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				 WHERE fr.inv_seq = #f_inv_seq#
			   ) x

    </select>
    
    <!-- WMS ACCOUNT LKH 2015.01.20  -->
    <select id="searchWmsInfoInv" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > searchWmsInfoInv  */
        SELECT TOP 1
               x.*
          FROM (
		        SELECT   distinct(bl.wm_doc_seq) AS wms_seq
				        ,bl.doc_ref_no as ref_no
				  FROM  TB_WM_DOC_MST bl
				LEFT OUTER JOIN TB_FRT fr ON bl.wm_doc_seq = fr.wms_seq AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				 WHERE fr.inv_seq = #f_inv_seq#
			   ) x

    </select>
    
    <!-- Invoice BL CONTAINER TP_SZ  Chungrue 2011.11.02  -->
    <select id="searchBlCntrInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBlCntrInfo  */
        SELECT   count(*) AS cntr_cnt 
        		,cntr_tpsz_cd
		  FROM  TB_CNTR_LIST
		 WHERE intg_bl_seq = #f_intg_bl_seq#
		   AND delt_flg = 'N'
		 GROUP BY cntr_tpsz_cd
    </select>
    
    
    
    
    <!-- InvoiceList Default 조회 200건만 조회한다.  -->
    <select id="searchDefaultInvoiceList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchDefaultInvoiceList  */
		SELECT TOP 200
		       A.*
		  FROM(
				SELECT 	TOP 200
						dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1  		
				             ELSE MAX(dtl.inv_sum_amt)
				        END AS inv_sum_amt     
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1  		
				             ELSE MAX(dtl.bal_amt)
				        END AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
		        		     ELSE MAX(mbl.bl_no) 		
		        		END AS mbl_no
		        	   ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
		        		     ELSE MAX(bl.bl_no)
		        		end AS hbl_no
				       ,MAX(bl.ref_no)				AS ref_no
				       ,''							AS oth_ref_no
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,CONVERT(VARCHAR, MAX(mst.rgst_tms), 101) AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,CONVERT(VARCHAR, MAX(mst.modi_tms), 101) AS modi_tms
				       ,CONVERT(VARCHAR, MAX(mst.inv_modi_tms), 101) AS inv_modi_tms
				       ,MAX(prnr.shrt_nm)			AS shrt_nm
				       ,MAX(bl.intg_bl_seq)			AS intg_bl_seq
				       ,''							AS oth_seq
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd
				       ,MAX(bl.ref_ofc_cd)			AS ref_ofc_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
				       ,MAX(jnr.jnr_no)				AS jnr_no
				       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
				 FROM TB_INV mst 
				 JOIN TB_INV_DTL dtl 
					ON mst.INV_SEQ = dtl.INV_SEQ 
				 JOIN TB_FRT frt 
					ON dtl.INV_SEQ = frt.INV_SEQ 
				 JOIN TB_INTG_BL bl 
					ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
				 JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd
				LEFT JOIN tb_intg_bl_rlt rlt
		            ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
				LEFT JOIN tb_intg_bl mbl 
					ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
				LEFT JOIN TB_JNR_DTL jnr 
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1 	
				WHERE mst.DELT_FLG = 'N'
				    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
				    AND frt.oth_seq is null
				GROUP BY dtl.inv_seq
				ORDER BY rgst_tms desc, post_dt, inv_no
				
				UNION ALL
				
				SELECT 	TOP 200
						dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1  		
				             ELSE MAX(dtl.inv_sum_amt)
				        END AS inv_sum_amt     
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1  		
				             ELSE MAX(dtl.bal_amt)
				        END AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,MAX(bl.mbl_no)				AS mbl_no
		        	   ,MAX(bl.hbl_no)				AS hbl_no
		        	   ,''							AS ref_no
				       ,MAX(bl.ref_no)				AS oth_ref_no
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,CONVERT(VARCHAR, MAX(mst.rgst_tms), 101) AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,CONVERT(VARCHAR, MAX(mst.modi_tms), 101) AS modi_tms
				       ,MAX(prnr.shrt_nm)			AS shrt_nm
				       ,''							AS intg_bl_seq
				       ,MAX(bl.OTH_SEQ)				AS oth_seq
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd
				       ,MAX(bl.ofc_cd)				AS ref_ofc_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
				       ,MAX(jnr.jnr_no)				AS jnr_no
				       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
				 FROM TB_INV mst 
				 JOIN TB_INV_DTL dtl 
					ON mst.INV_SEQ = dtl.INV_SEQ 
				 JOIN TB_FRT frt 
					ON dtl.INV_SEQ = frt.INV_SEQ 
				 JOIN TB_OTH_SALES bl 
					ON frt.OTH_SEQ = bl.OTH_SEQ 
				 JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd 
		        LEFT JOIN TB_JNR_DTL jnr 
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y' 
			    LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
			    	ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1   
				WHERE mst.DELT_FLG = 'N'
				    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
				    AND frt.oth_seq is not null
				GROUP BY dtl.inv_seq
				ORDER BY rgst_tms desc, post_dt, inv_no
			) A
		ORDER BY rgst_tms desc, post_dt, inv_no
    </select>
    
    
    
    
    
    <!-- InvoiceList COUNT Default 조회 200건 조회   -->
    <select id="searchDefaultInvoiceList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchDefaultInvoiceList_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM (
				SELECT  TOP 200
						A.*
				  FROM(
						SELECT 	TOP 200
								dtl.inv_seq
							   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
						        END 						AS inv_no
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
						        END 						AS inv_tp
						       ,MAX(dtl.inv_post_dt)		AS post_dt
						       ,MAX(mst.trdp_cd)  			AS trdp_cd
						       ,MAX(prnr.eng_nm)  			AS trdp_nm
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1  		
						             ELSE MAX(dtl.inv_sum_amt)
						        END AS inv_sum_amt     
						       ,MAX(dtl.pay_amt)  			AS pay_amt
						       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1  		
						             ELSE MAX(dtl.bal_amt)
						        END AS bal_amt
						       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
						             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
						        END AS over_due
						       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
						       ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				        		     ELSE MAX(mbl.bl_no) 		
				        		END AS mbl_no
				        	   ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				        		     ELSE MAX(bl.bl_no)
				        		end AS hbl_no
						       ,MAX(bl.ref_no)				AS ref_no
						       ,''							AS oth_ref_no
						       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
						       ,MAX(mst.ofc_cd)				AS ofc_cd
						       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
						       ,MAX(mst.rgst_usrid)			AS rgst_usrid
						       ,MAX(mst.rgst_tms)			AS rgst_tms
						       ,MAX(mst.modi_usrid)			AS modi_usrid
						       ,MAX(mst.modi_tms)			AS modi_tms
						       ,MAX(prnr.shrt_nm)			AS shrt_nm
						       ,MAX(bl.intg_bl_seq)			AS intg_bl_seq
						       ,''							AS oth_seq
						       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
						       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd
						       ,MAX(bl.ref_ofc_cd)			AS ref_ofc_cd
						       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
						       ,MAX(jnr.jnr_no)				AS jnr_no
						       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
						 FROM TB_INV mst 
						 JOIN TB_INV_DTL dtl 
							ON mst.INV_SEQ = dtl.INV_SEQ 
						 JOIN TB_FRT frt 
							ON dtl.INV_SEQ = frt.INV_SEQ 
						 JOIN TB_INTG_BL bl 
							ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
						 JOIN tb_trdp prnr
				           ON   prnr.trdp_cd = mst.trdp_cd
						LEFT JOIN tb_intg_bl_rlt rlt
				            ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
						LEFT JOIN tb_intg_bl mbl 
							ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
						LEFT JOIN TB_JNR_DTL jnr 
							ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
						LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
							ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
						WHERE mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND frt.OTH_SEQ is null
						 
						GROUP BY dtl.inv_seq
						
						UNION ALL
						
						SELECT 	TOP 200
								dtl.inv_seq
							   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
						        END 						AS inv_no
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
						        END 						AS inv_tp
						       ,MAX(dtl.inv_post_dt)		AS post_dt
						       ,MAX(mst.trdp_cd)  			AS trdp_cd
						       ,MAX(prnr.eng_nm)  			AS trdp_nm
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1  		
						             ELSE MAX(dtl.inv_sum_amt)
						        END AS inv_sum_amt     
						       ,MAX(dtl.pay_amt)  			AS pay_amt
						       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1  		
						             ELSE MAX(dtl.bal_amt)
						        END AS bal_amt
						       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
						             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
						        END AS over_due
						       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
						       ,MAX(bl.mbl_no)				AS mbl_no
				        	   ,MAX(bl.hbl_no)				AS hbl_no
				        	   ,''							AS ref_no
						       ,MAX(bl.ref_no)				AS oth_ref_no
						       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
						       ,MAX(mst.ofc_cd)				AS ofc_cd
						       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
						       ,MAX(mst.rgst_usrid)			AS rgst_usrid
						       ,MAX(mst.rgst_tms)			AS rgst_tms
						       ,MAX(mst.modi_usrid)			AS modi_usrid
						       ,MAX(mst.modi_tms)			AS modi_tms
						       ,MAX(prnr.shrt_nm)			AS shrt_nm
						       ,''							AS intg_bl_seq
						       ,MAX(bl.OTH_SEQ)				AS oth_seq
						       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
						       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd
						       ,MAX(bl.ofc_cd)				AS ref_ofc_cd
						       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
						       ,MAX(jnr.jnr_no)				AS jnr_no
						       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
						 FROM TB_INV mst 
						 JOIN TB_INV_DTL dtl 
							ON mst.INV_SEQ = dtl.INV_SEQ 
						 JOIN TB_FRT frt 
							ON dtl.INV_SEQ = frt.INV_SEQ 
						 JOIN TB_OTH_SALES bl 
							ON frt.OTH_SEQ = bl.OTH_SEQ 
						 JOIN tb_trdp prnr
				            ON prnr.trdp_cd = mst.trdp_cd 
				        LEFT JOIN TB_JNR_DTL jnr 
							ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
						LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
							ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
						WHERE mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND frt.oth_seq is not null
						GROUP BY dtl.inv_seq
					) A
				
			) x
    </select>
    
    
    
    <!-- InvoiceList 조회  -->
    <!-- ZOOT=2015-01-08 NoPaging 처리  --> 
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchInvoiceList_NOPAGING" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/* AccInvInvoiceSQL.xml > searchInvoiceList_NOPAGING */     
			WITH INV_INFO AS (
				SELECT
							a1.*           
						FROM
							(   SELECT
									ROW_NUMBER() OVER (          
										ORDER BY dtl.inv_post_dt desc, mst.modi_tms desc        
									 ) as ROWNUM, 
									 mst.* 
								  FROM
									TB_INV mst with(nolock)              
									JOIN TB_INV_DTL dtl with(nolock)                
										ON mst.INV_SEQ = dtl.INV_SEQ   
								 WHERE mst.DELT_FLG = 'N'            
								   AND isnull(mst.air_sea_clss_cd,'O') != 'G'			
								   <isNotEmpty property="s_ofc_cd">
										AND mst.ofc_cd = #s_ofc_cd#
									</isNotEmpty>          					     
				) a1
	<![CDATA[ where a1.ROWNUM > #beginIdx# AND a1.ROWNUM <= #topCnt#	]]>
			)                           
			SELECT
			        T1.ROWNUM,
		            T1.inv_seq,
		            T1.inv_no,
		            T1.post_dt,
		            T1.modi_tms,
		            T1.mbl_no,
		            T1.hbl_no,
		            T1.ref_no,
		            T1.oth_ref_no,
					T1.wms_ref_no,
		            T1.intg_bl_seq,
		            T1.oth_seq,
					T1.wms_seq,
		            T1.bl_cnt_cd,
		            T1.ref_ofc_cd,
		            T1.m_intg_bl_seq,
		            T1.bnd_clss_cd,
			        MAX(mst.sell_buy_tp_cd) AS sell_buy_tp_cd,
			        max(mst.air_sea_clss_cd) AS air_sea_clss_cd,
			        CASE      
			            WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'                        
			            WHEN MAX(mst.sell_buy_tp_cd) = 'D'       
			            OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'                        
			            WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'                  
			        END AS inv_tp             ,
			        MAX(mst.trdp_cd) AS trdp_cd,
			        MAX(T1.duty_tax_amt) AS duty_tax_amt,		
					MAX(T1.non_taxable_amt) AS non_taxable_amt,
					MAX(T1.taxable_amt) AS taxable_amt,
			  		MAX(T1.vat_amt) AS vat_amt,
					MAX(T1.whd_amt) AS whd_amt,
					CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.duty_tax_amt) * -1                       
			             ELSE MAX(T1.duty_tax_amt)              
			        END AS duty_tax_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.non_taxable_amt) * -1                       
			             ELSE MAX(T1.non_taxable_amt)              
			        END AS non_taxable_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.taxable_amt) * -1                       
			             ELSE MAX(T1.taxable_amt)              
			        END AS taxable_tot_amt,	
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.vat_amt) * -1                       
			             ELSE MAX(T1.vat_amt)              
			        END AS vat_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.whd_amt) * -1                       
			             ELSE MAX(T1.whd_amt)              
			        END AS whd_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                                     
			             ELSE MAX(dtl.inv_sum_amt)                        
			        END AS inv_sum_amt,
			        CASE               
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C'       
			            OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_sum_amt) * -1                                     
			            ELSE MAX(dtl.inv_sum_amt)                        
			        END AS profit_amt                 ,
			        MAX(dtl.pay_amt)     AS pay_amt             ,
			        MAX(dtl.last_pay_dt)  AS last_pay_dt             ,
			        CASE               
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1                                     
			            ELSE MAX(dtl.bal_amt)                        
			        END AS bal_amt             ,
			        CASE               
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C'       
			            OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.pay_amt) * -1                                     
			            ELSE MAX(dtl.pay_amt)                        
			        END AS pay_tot_amt                ,
			        CASE               
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C'       
			            OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.bal_amt) * -1                                     
			            ELSE MAX(dtl.bal_amt)                        
			        END AS bal_tot_amt                ,
			        CASE               
			            WHEN MAX(dtl.bal_amt) = 0 THEN ''                                  
			            ELSE datediff(day,
			            MAX(dtl.INV_DUE_DT),
			            getdate())                         
			        END AS over_due,
			        MAX(dtl.inv_due_dt)   AS inv_due_dt,
			        MAX(dtl.buy_inv_no)       AS vnd_inv_no,
			        MAX(mst.ofc_cd)    AS ofc_cd,
			        MAX(dtl.inv_aply_curr_cd) AS inv_aply_curr_cd,
			        MAX(mst.rgst_usrid)   AS rgst_usrid,
			        CONVERT(VARCHAR,
			        MAX(mst.rgst_tms),
			        20) AS rgst_tms                ,
			        MAX(mst.modi_usrid)   AS modi_usrid                ,
			        CONVERT(VARCHAR,
			        MAX(mst.inv_modi_tms),
			        20) AS inv_modi_tms              ,
			        MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))  AS clt_cmpl_flg,
			        MAX(mst.cmb_inv_seq)  AS cmb_inv_seq,
			        CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND (MAX(mst.sell_buy_tp_cd) IN ('D', 'C')) THEN MAX(dtl.CUST_REF_NO)        
			             ELSE MAX(T1.agent_ref_no) END AS imp_ref_no,   
		            CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)          
		                 ELSE MAX(T1.cust_ref_no)        
		            END AS cust_ref_no,
			        MAX(mst.inv_rmk) AS inv_rmk,
			        MAX(prnr.shrt_nm)   AS shrt_nm,
			        MAX(prnr.eng_nm)     AS trdp_nm,
			        MAX(jnr.jnr_no)    AS jnr_no,
			        T1.etd_dt_tm,
			        T1.eta_dt_tm  
			    FROM
			        (  SELECT
			            a1.*           
			        FROM
			            (   SELECT
			                ROW_NUMBER() OVER (          
			            ORDER BY
			                A.post_dt desc,
			                A.modi_tms desc) as ROWNUM,
			                A.*                
			            FROM
			                (      SELECT
			                    dtl.inv_seq          ,
			                    CASE         
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                           
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'D'         
			                        OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                           
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)                     
			                    END       AS inv_no             ,
			                    MAX(dtl.inv_post_dt)  AS post_dt             ,			                    
			                    SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,								  	 
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
			                    CASE         
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                               
			                        ELSE MAX(dtl.inv_sum_amt)                     
			                    END AS inv_sum_amt                 ,
			                    CONVERT(VARCHAR,
			                    MAX(mst.modi_tms),
			                    20) AS modi_tms  ,
			                    CASE         
			                        WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)                           
			                        ELSE MAX(mbl.bl_no)                        
			                    END AS mbl_no                ,
			                    CASE         
			                        WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)                           
			                        ELSE MAX(bl.bl_no)                     
			                    end AS hbl_no             ,
			                    MAX(bl.ref_no)    AS ref_no             ,
		                        ''       AS oth_ref_no   ,
								''       AS wms_ref_no   ,
		                        MAX(bl.intg_bl_seq)   AS intg_bl_seq             ,
		                        ''       AS oth_seq             ,
								''       AS wms_seq             ,
			                    (select
			                        upper(x.CNT_CD)        
			                    from
			                        tb_ofc x with(nolock)       
			                    where
			                        x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd             ,
			                    MAX(bl.ref_ofc_cd)   AS ref_ofc_cd             ,
			                    CASE         
			                        WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.intg_bl_seq)                           
			                        ELSE MAX(mbl.intg_bl_seq)                        
			                    END AS m_intg_bl_seq          ,
			                    CASE         
			                        WHEN MAX(bl.biz_clss_cd) = 'M'             THEN (select
			                            max(bnd_clss_cd)         
			                        from
			                            tb_add_info_bnd with(nolock)        
			                        where
			                            intg_bl_seq = max(bl.intg_bl_seq))                           
			                        ELSE (select
			                            max(bnd_clss_cd)         
			                        from
			                            tb_add_info_bnd with(nolock)        
			                        where
			                            intg_bl_seq = max(mbl.intg_bl_seq))                        
			                    END AS bnd_clss_cd                  ,
			                    CASE 
									WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
									WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
								END AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
			                    MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                    MAX(bl.eta_dt_tm) AS eta_dt_tm             
			                FROM
			                    INV_INFO mst with(nolock)              
			                JOIN
			                    TB_INV_DTL dtl with(nolock)                
			                        ON mst.INV_SEQ = dtl.INV_SEQ              
			                JOIN
			                    TB_FRT frt with(nolock)                
			                        ON dtl.INV_SEQ = frt.INV_SEQ  
			                LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd                       
			                JOIN
			                    TB_INTG_BL bl with(nolock)                
			                        ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ         
			                        AND bl.delt_flg = 'N'                        
			                LEFT JOIN
			                    tb_intg_bl_rlt rlt with(nolock)                        
			                        ON  bl.intg_bl_seq = rlt.intg_bl_seq         
			                        AND rlt.delt_flg = 'N'            
			                LEFT JOIN
			                    tb_intg_bl mbl with(nolock)                
			                        ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq         
			                        AND mbl.biz_clss_cd = 'M'         
			                        AND mbl.delt_flg = 'N'                       
			                WHERE
			                    mst.DELT_FLG = 'N'            
			                    AND isnull(mst.air_sea_clss_cd,'O') != 'G'                 
			                    AND isnull(frt.oth_seq,'') ='' AND isnull(frt.WMS_SEQ,'') =''  
			                    <isNotEmpty property="s_ofc_cd">
										AND bl.ref_ofc_cd = #s_ofc_cd#
								</isNotEmpty>                                                                                                                                                      
			                GROUP BY
			                    dtl.inv_seq            
			                UNION
			                ALL            SELECT
			                    dtl.inv_seq          ,
			                    CASE         
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                           
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'D'         
			                        OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                           
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)                     
			                    END       AS inv_no             ,
			                    MAX(dtl.inv_post_dt)  AS post_dt             ,
			                    SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,		
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
			                    CASE         
			                        WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                               
			                        ELSE MAX(dtl.inv_sum_amt)                     
			                    END AS inv_sum_amt                 ,
			                    CONVERT(VARCHAR,
			                    MAX(mst.modi_tms),
			                    20) AS modi_tms    ,
			                    MAX(bl.mbl_no)    AS mbl_no                ,
			                    MAX(bl.hbl_no)    AS hbl_no                ,
			                    ''       AS ref_no             ,
		                        MAX(bl.ref_no)    AS oth_ref_no     ,
								''       AS wms_ref_no             ,
		                        ''       AS intg_bl_seq             ,
		                        MAX(bl.OTH_SEQ)    AS oth_seq ,            
								''    AS wms_seq             ,
			                    (select
			                        upper(x.CNT_CD)        
			                    from
			                        tb_ofc x with(nolock)       
			                    where
			                        x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
			                    MAX(bl.ofc_cd)    AS ref_ofc_cd             ,
			                    '' AS m_intg_bl_seq          ,
			                    '' AS bnd_clss_cd          ,
			                    '' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
			                    MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                    MAX(bl.eta_dt_tm) AS eta_dt_tm                         
			                FROM
			                    INV_INFO mst with(nolock)             
			                JOIN
			                    TB_INV_DTL dtl with(nolock)               
			                        ON mst.INV_SEQ = dtl.INV_SEQ              
			                JOIN
			                    TB_FRT frt with(nolock)                
			                        ON dtl.INV_SEQ = frt.INV_SEQ 
			                LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd                        
			                JOIN
			                    TB_OTH_SALES bl with(nolock)                
			                        ON frt.OTH_SEQ = bl.OTH_SEQ                         
			                WHERE
			                    mst.DELT_FLG = 'N'          
			                    AND isnull(mst.air_sea_clss_cd,'O') != 'G'          
			                    AND isnull(frt.oth_seq,'') !=''   
			                    <isNotEmpty property="s_ofc_cd">
										AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>                                                                                                                                             
			                GROUP BY
			                    dtl.inv_seq     
			                UNION ALL
			                SELECT
		                        dtl.inv_seq          ,
		                        CASE                                     
		                            WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                                                       
		                            WHEN MAX(mst.sell_buy_tp_cd) = 'D'                                     
		                            OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                                                       
		                            WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)                                             
		                        END       AS inv_no             ,
		                        MAX(dtl.inv_post_dt)  AS post_dt             ,
		                        SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,		
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
		                        CASE                                     
		                            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                                                           
		                            ELSE MAX(dtl.inv_sum_amt)                                             
		                        END AS inv_sum_amt                 ,
		                        CONVERT(VARCHAR,
		                        MAX(mst.modi_tms),
		                        20) AS modi_tms    ,
		                        MAX(bl.mbl_no)    AS mbl_no                ,
		                        MAX(bl.hbl_no)    AS hbl_no                ,
		                        ''       AS ref_no             ,
		                        ''    AS oth_ref_no     ,
								MAX(bl.doc_ref_no)    AS wms_ref_no     ,
		                        ''       AS intg_bl_seq             ,
		                        ''    AS oth_seq             ,
								MAX(bl.WM_DOC_SEQ)    AS WMS_SEQ ,    
		                        (select
		                            upper(x.CNT_CD)                                
		                        from
		                            tb_ofc x with(nolock)                               
		                        where
		                            x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
		                        MAX(bl.ofc_cd)    AS ref_ofc_cd             ,
		                        '' AS m_intg_bl_seq          ,
		                        '' AS bnd_clss_cd          ,
		                        '' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
		                        '' AS etd_dt_tm,
			                    '' AS eta_dt_tm                                                 
		                    FROM
		                        INV_INFO mst with(nolock)                                 
		                    JOIN
		                        TB_INV_DTL dtl with(nolock)                                           
		                            ON mst.INV_SEQ = dtl.INV_SEQ                                  
		                    JOIN
		                        TB_FRT frt with(nolock)                                            
		                            ON dtl.INV_SEQ = frt.INV_SEQ          
		                    LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd                                   
		                    JOIN
		                        TB_WM_DOC_MST bl with(nolock)                                            
		                            ON frt.WMS_SEQ = bl.WM_DOC_SEQ                                            
		                    WHERE
		                        mst.DELT_FLG = 'N'                                  
		                        AND isnull(mst.air_sea_clss_cd,'O') != 'G'                                  
		                        AND isnull(frt.WMS_SEQ,'') !=''  
		                        <isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>                                                                                                                                                                  
		                    GROUP BY
		                        dtl.inv_seq     			                    
			                    ) A     
			            ) a1  
			        )  T1 
			    JOIN
			        TB_INV mst with(nolock)      
			            ON T1.INV_SEQ = mst.INV_SEQ        
			    JOIN
			        TB_INV_DTL dtl with(nolock)         
			            ON mst.INV_SEQ = dtl.INV_SEQ  
			    LEFT JOIN
			        tb_trdp prnr with(nolock)                  
			            ON prnr.trdp_cd = MST.trdp_cd 
			    LEFT JOIN
			        TB_JNR_DTL jnr with(nolock)         
			            ON T1.INV_SEQ = jnr.INV_SEQ 
			            AND isnull(jnr.DELT_FLG,
			        'N') != 'Y'  
			    LEFT OUTER JOIN 
			    	(SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
			    		ON DTL.INV_SEQ = BLCK.INV_SEQ1 
			    		AND DTL.INV_NO = BLCK.INV_NO1 
			    GROUP BY
			        T1.inv_seq,
			        T1.inv_no,
			        T1.post_dt,
			        T1.modi_tms,
			        T1.mbl_no,
			        T1.hbl_no,
			        T1.ref_no,
		            T1.oth_ref_no,
					T1.wms_ref_no,
		            T1.intg_bl_seq,
		            T1.oth_seq,
					T1.wms_seq,
			        T1.bl_cnt_cd,
			        T1.ref_ofc_cd,
			        T1.m_intg_bl_seq,
			        T1.bnd_clss_cd,
			        T1.cust_ref_no,
			        T1.ROWNUM,
			        T1.etd_dt_tm, 
					T1.eta_dt_tm     
			    ORDER BY
			        T1.post_dt desc, T1.modi_tms desc
	</select>
	<!-- WMS ACCOUNT LKH 2015.01.20 -->	
    <select id="searchInvoiceList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchInvoiceList  */
		SELECT ROW.* FROM(
			SELECT ROW_NUMBER() OVER(ORDER BY T2.post_dt desc, T2.modi_tms desc) AS RNUM,  
				   T2.* FROM(       		
				SELECT  T1.ROWNUM, T1.inv_seq, T1.inv_no,T1.post_dt,T1.modi_tms,T1.mbl_no,T1.hbl_no,T1.ref_no,T1.oth_ref_no,T1.wms_ref_no,
					T1.intg_bl_seq,T1.oth_seq, T1.wms_seq,T1.bl_cnt_cd,T1.ref_ofc_cd,T1.m_intg_bl_seq,T1.bnd_clss_cd,			
					MAX(mst.sell_buy_tp_cd) AS sell_buy_tp_cd,
					max(mst.air_sea_clss_cd) AS air_sea_clss_cd,
					CASE 
						WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'                   
						WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
							OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'                   
						WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'              
					END AS inv_tp             ,
					MAX(mst.trdp_cd) AS trdp_cd, 
					MAX(T1.duty_tax_amt) AS duty_tax_amt,		
					MAX(T1.non_taxable_amt) AS non_taxable_amt,
					MAX(T1.taxable_amt) AS taxable_amt,
					MAX(T1.vat_amt) AS vat_amt,
					MAX(T1.whd_amt) AS whd_amt,
					CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.duty_tax_amt) * -1                       
			             ELSE MAX(T1.duty_tax_amt)              
			        END AS duty_tax_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.non_taxable_amt) * -1                       
			             ELSE MAX(T1.non_taxable_amt)              
			        END AS non_taxable_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.taxable_amt) * -1                       
			             ELSE MAX(T1.taxable_amt)              
			        END AS taxable_tot_amt,	
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.vat_amt) * -1                       
			             ELSE MAX(T1.vat_amt)              
			        END AS vat_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.whd_amt) * -1                       
			             ELSE MAX(T1.whd_amt)              
			        END AS whd_tot_amt,
			        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                                     
			             ELSE MAX(dtl.inv_sum_amt)                        
			        END AS inv_sum_amt,
			        CASE 
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C' 
							OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_sum_amt) * -1                       
			            ELSE MAX(dtl.inv_sum_amt)              
			        END AS profit_amt                 ,
			        MAX(dtl.pay_amt)     AS pay_amt             ,
			        MAX(dtl.last_pay_dt)  AS last_pay_dt             ,
			        CASE 
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1                       
			            ELSE MAX(dtl.bal_amt)              
			        END AS bal_amt             ,
			        CASE 
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C' 
							OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.pay_amt) * -1                       
			            ELSE MAX(dtl.pay_amt)              
			        END AS pay_tot_amt                ,
			        CASE 
			            WHEN MAX(mst.sell_buy_tp_cd) = 'C' 
							OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.bal_amt) * -1                       
			            ELSE MAX(dtl.bal_amt)              
			        END AS bal_tot_amt                ,
			        CASE 
			            WHEN MAX(dtl.bal_amt) = 0 THEN ''                    
			            ELSE datediff(day,
			            MAX(dtl.INV_DUE_DT),
			            getdate())               
			        END AS over_due,
			        MAX(dtl.inv_due_dt)   AS inv_due_dt,
						MAX(dtl.buy_inv_no)       AS vnd_inv_no,
			        MAX(mst.ofc_cd)    AS ofc_cd,
			        MAX(dtl.inv_aply_curr_cd) AS inv_aply_curr_cd,
			        MAX(mst.rgst_usrid)   AS rgst_usrid,
			        CONVERT(VARCHAR,MAX(mst.rgst_tms),20) AS rgst_tms                ,
			        MAX(mst.modi_usrid)   AS modi_usrid                ,
					CONVERT(VARCHAR,MAX(mst.inv_modi_tms),20) AS inv_modi_tms              ,    
					MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))  AS clt_cmpl_flg,             
			        MAX(mst.cmb_inv_seq)  AS cmb_inv_seq,    
					CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND (MAX(mst.sell_buy_tp_cd) IN ('D', 'C')) THEN MAX(dtl.CUST_REF_NO)        
			             ELSE MAX(T1.agent_ref_no) END AS imp_ref_no,   
		            CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)          
		                 ELSE MAX(T1.cust_ref_no)        
		            END AS cust_ref_no,
					MAX(mst.inv_rmk) AS inv_rmk,
					MAX(prnr.shrt_nm)   AS shrt_nm,
					MAX(prnr.eng_nm)     AS trdp_nm,
					MAX(jnr.jnr_no)    AS jnr_no,
					T1.etd_dt_tm, 
					T1.eta_dt_tm 
			FROM  
			(
			SELECT
			        a1.*
			    FROM
			        (   SELECT
				            ROW_NUMBER() OVER (
				        ORDER BY
				            A.post_dt desc, A.modi_tms desc
			            ) as ROWNUM,
			            A.*      
			        FROM
			            (
							SELECT
								dtl.inv_seq          ,
								CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
									OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
								END       AS inv_no             ,
								MAX(dtl.inv_post_dt)  AS post_dt             ,
			                	SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,		
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
							   CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
									ELSE MAX(dtl.inv_sum_amt)              
								END AS inv_sum_amt                 ,
								CONVERT(VARCHAR,
								MAX(mst.modi_tms),
								20) AS modi_tms  ,
							
								CASE 
									WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)                   
									ELSE MAX(mbl.bl_no)                 
								END AS mbl_no                ,
								CASE 
									WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)                   
									ELSE MAX(bl.bl_no)              
								end AS hbl_no             ,
								MAX(bl.ref_no)    AS ref_no             ,
								''       AS oth_ref_no   ,
								'' as wms_ref_no,
								MAX(bl.intg_bl_seq)   AS intg_bl_seq             ,
								''       AS oth_seq             ,
								'' as wms_seq,
								(select
									upper(x.CNT_CD) 
								from
									tb_ofc x with(nolock)
								where
									x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd             ,
								MAX(bl.ref_ofc_cd)   AS ref_ofc_cd             ,
								CASE 
									WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.intg_bl_seq)                   
									ELSE MAX(mbl.intg_bl_seq)                 
								END AS m_intg_bl_seq          ,
								CASE 
									WHEN MAX(bl.biz_clss_cd) = 'M'             THEN (select
										max(bnd_clss_cd) 
									from
										tb_add_info_bnd with(nolock)
									where
										intg_bl_seq = max(bl.intg_bl_seq))                   
									ELSE (select
										max(bnd_clss_cd) 
									from
										tb_add_info_bnd with(nolock)
									where
										intg_bl_seq = max(mbl.intg_bl_seq))                 
								END AS bnd_clss_cd                  ,
								CASE 
									WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
									WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
								END AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
								MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                    MAX(bl.eta_dt_tm) AS eta_dt_tm         
							FROM
								TB_INV mst with(nolock)        
							JOIN
								TB_INV_DTL dtl with(nolock)        
									ON mst.INV_SEQ = dtl.INV_SEQ        
							JOIN
								TB_FRT frt with(nolock)        
									ON dtl.INV_SEQ = frt.INV_SEQ
							LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
							JOIN
								TB_INTG_BL bl with(nolock)        
									ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ 
									AND bl.delt_flg = 'N'                  
							LEFT JOIN
								tb_intg_bl_rlt rlt with(nolock)                
									ON  bl.intg_bl_seq = rlt.intg_bl_seq 
									AND rlt.delt_flg = 'N'      
							LEFT JOIN
								tb_intg_bl mbl with(nolock)        
									ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq 
									AND mbl.biz_clss_cd = 'M' 
									AND mbl.delt_flg = 'N'                 
							WHERE
								mst.DELT_FLG = 'N'  
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'          
								AND isnull(frt.oth_seq,'') ='' AND isnull(frt.WMS_SEQ,'') =''          
								<isNotEqual property="s_post_strdt" compareValue="">
								AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>	
								AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#)
											   )
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ref_ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.bl_no = #s_hbl_no#
									AND bl.biz_clss_cd = 'H'
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND (mbl.bl_no =  #s_mbl_no# or ( bl.bl_no = #s_mbl_no#	AND bl.biz_clss_cd = 'M'))							
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND bl.ref_no like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND bl.intg_bl_seq = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq
							
							UNION ALL
							
							SELECT
								dtl.inv_seq          ,
								CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
									OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
								END       AS inv_no             ,
								MAX(dtl.inv_post_dt)  AS post_dt             ,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,		
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
							   CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
									ELSE MAX(dtl.inv_sum_amt)              
								END AS inv_sum_amt                 ,
			               
								CONVERT(VARCHAR,
								MAX(mst.modi_tms),
								20) AS modi_tms    ,
							
								MAX(bl.mbl_no)    AS mbl_no                ,
								MAX(bl.hbl_no)    AS hbl_no                ,
								''       AS ref_no             ,
								MAX(bl.ref_no)    AS oth_ref_no     ,
								'' as wms_ref_no, 
								''       AS intg_bl_seq             ,
								MAX(bl.OTH_SEQ)    AS oth_seq             ,   
								'' as wms_seq,         
								  (select
									upper(x.CNT_CD) 
								from
									tb_ofc x with(nolock)
								where
									x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
								MAX(bl.ofc_cd)    AS ref_ofc_cd             , 
								'' AS m_intg_bl_seq          ,
								'' AS bnd_clss_cd          ,
			 					'' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
			 					MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                    MAX(bl.eta_dt_tm) AS eta_dt_tm                     
							FROM
								TB_INV mst with(nolock)       
							JOIN
								TB_INV_DTL dtl with(nolock)       
									ON mst.INV_SEQ = dtl.INV_SEQ        
							JOIN
								TB_FRT frt with(nolock)        
									ON dtl.INV_SEQ = frt.INV_SEQ
							LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
							JOIN
								TB_OTH_SALES bl with(nolock)        
									ON frt.OTH_SEQ = bl.OTH_SEQ                   
							WHERE
								mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.oth_seq,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
								AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>					
								AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no = #s_hbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no = #s_mbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'bl.ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND bl.ref_no like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq
							
							UNION ALL
							
							SELECT
								dtl.inv_seq          ,
								CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
									OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
									WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
								END       AS inv_no             ,
								MAX(dtl.inv_post_dt)  AS post_dt             ,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS duty_tax_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS non_taxable_amt,
								SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
						  		 		  THEN  CASE frt.SELL_BUY_TP_CD
						  						WHEN 'C' then frt.CR_AMT*-1
												ELSE frt.INV_AMT 
								  	 END ELSE 0 END ) AS taxable_amt,		
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS vat_amt,	
								SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
								 	 ELSE 0 END ) AS whd_amt,	
							    CASE 
									WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
									ELSE MAX(dtl.inv_sum_amt)              
								END AS inv_sum_amt                 ,
			               
								CONVERT(VARCHAR,
								MAX(mst.modi_tms),
								20) AS modi_tms    ,
							
								MAX(bl.mbl_no)    AS mbl_no                ,
								MAX(bl.hbl_no)    AS hbl_no                ,
								''       AS ref_no             ,
								''    AS oth_ref_no     ,
								MAX(bl.doc_ref_no)    AS wms_ref_no     ,
								''       AS intg_bl_seq             ,
								''    AS oth_seq             , 
								MAX(bl.WM_DOC_SEQ)    AS wms_seq             ,            
								  (select
									upper(x.CNT_CD) 
								from
									tb_ofc x with(nolock)
								where
									x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
								MAX(bl.ofc_cd)    AS ref_ofc_cd             , 
								'' AS m_intg_bl_seq          ,
								'' AS bnd_clss_cd          ,
			 					'' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no,
			 					'' AS etd_dt_tm,
			                    '' AS eta_dt_tm                     
							FROM
								TB_INV mst with(nolock)       
							JOIN
								TB_INV_DTL dtl with(nolock)       
									ON mst.INV_SEQ = dtl.INV_SEQ        
							JOIN
								TB_FRT frt with(nolock)        
									ON dtl.INV_SEQ = frt.INV_SEQ
							LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
							JOIN
								TB_WM_DOC_MST bl with(nolock)        
									ON frt.WMS_SEQ = bl.WM_DOC_SEQ                   
							WHERE
								mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.WMS_SEQ,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
								AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>					
								AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no = #s_hbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no = #s_mbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND bl.doc_ref_no like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq
						) A
					 ) a1	
				)  T1
				JOIN TB_INV mst with(nolock)    
					ON T1.INV_SEQ = mst.INV_SEQ       
				JOIN TB_INV_DTL dtl with(nolock)       
					ON mst.INV_SEQ = dtl.INV_SEQ 
				LEFT JOIN tb_trdp prnr with(nolock)                
					ON prnr.trdp_cd = MST.trdp_cd
				LEFT JOIN TB_JNR_DTL jnr with(nolock)       
					ON T1.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'  
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
			 	GROUP BY
			        T1.inv_seq, T1.inv_no,T1.post_dt,T1.modi_tms,T1.mbl_no,T1.hbl_no,T1.ref_no,T1.oth_ref_no,T1.wms_ref_no,T1.intg_bl_seq,T1.oth_seq,T1.wms_seq,
					T1.bl_cnt_cd,T1.ref_ofc_cd,T1.m_intg_bl_seq,T1.bnd_clss_cd,T1.cust_ref_no,T1.ROWNUM,T1.etd_dt_tm,T1.eta_dt_tm 		
			) T2
			<dynamic prepend="WHERE">
				<isNotEmpty property="s_imp_ref_no" prepend="AND">
					T2.imp_ref_no LIKE '%' + #s_imp_ref_no# + '%'
				</isNotEmpty>
				<isNotEmpty property="s_cust_ref_no" prepend="AND">
					T2.cust_ref_no = #s_cust_ref_no#
				</isNotEmpty>
			</dynamic>   
		) ROW WHERE <![CDATA[ ROW.RNUM > #beginIdx# AND ROW.RNUM <= #topCnt#	]]>
		ORDER BY ROW.RNUM		
    </select>
    
    <!-- EXCEL ALL YJW 2015.03.23 -->	
    <select id="searchInvoiceList_EXCEL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchInvoiceList_EXCEL  */
		SELECT T2.* FROM(
			SELECT  T1.ROWNUM, T1.inv_seq, T1.inv_no,T1.post_dt,T1.modi_tms,T1.mbl_no,T1.hbl_no,T1.ref_no,T1.oth_ref_no,T1.wms_ref_no,
			T1.intg_bl_seq,T1.oth_seq, T1.wms_seq,T1.bl_cnt_cd,T1.ref_ofc_cd,T1.m_intg_bl_seq,T1.bnd_clss_cd,				
			MAX(mst.sell_buy_tp_cd) AS sell_buy_tp_cd,
			max(mst.air_sea_clss_cd) AS air_sea_clss_cd,
			CASE 
				WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'                   
				WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
					OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'                   
				WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'              
			END AS inv_tp             ,
			MAX(mst.trdp_cd) AS trdp_cd, 
			MAX(T1.duty_tax_amt) AS duty_tax_amt,		
			MAX(T1.non_taxable_amt) AS non_taxable_amt,
			MAX(T1.taxable_amt) AS taxable_amt,
			MAX(T1.vat_amt) AS vat_amt,
			MAX(T1.whd_amt) AS whd_amt,
			CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.duty_tax_amt) * -1                       
	             ELSE MAX(T1.duty_tax_amt)              
	        END AS duty_tax_tot_amt,
	        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.non_taxable_amt) * -1                       
	             ELSE MAX(T1.non_taxable_amt)              
	        END AS non_taxable_tot_amt,
	        CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.taxable_amt) * -1                       
	             ELSE MAX(T1.taxable_amt)              
	        END AS taxable_tot_amt,	
			CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.vat_amt) * -1                       
			     ELSE MAX(T1.vat_amt)              
			END AS vat_tot_amt,
			CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.whd_amt) * -1                       
			     ELSE MAX(T1.whd_amt)              
			END AS whd_tot_amt,
			CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                                     
			     ELSE MAX(dtl.inv_sum_amt)                        
			END AS inv_sum_amt,
	        CASE 
	            WHEN MAX(mst.sell_buy_tp_cd) = 'C' OR MAX(mst.sell_buy_tp_cd) = 'B' 
	            THEN MAX(dtl.inv_sum_amt) * -1                       
	            ELSE MAX(dtl.inv_sum_amt)              
	        END AS profit_amt                 ,
	        MAX(dtl.pay_amt)     AS pay_amt             ,
	        MAX(dtl.last_pay_dt)  AS last_pay_dt             ,
	        CASE 
	            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1                       
	            ELSE MAX(dtl.bal_amt)              
	        END AS bal_amt             ,
	        CASE 
	            WHEN MAX(mst.sell_buy_tp_cd) = 'C' 
					OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.pay_amt) * -1                       
	            ELSE MAX(dtl.pay_amt)              
	        END AS pay_tot_amt                ,
	        CASE 
	            WHEN MAX(mst.sell_buy_tp_cd) = 'C' 
					OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.bal_amt) * -1                       
	            ELSE MAX(dtl.bal_amt)              
	        END AS bal_tot_amt                ,
	        <![CDATA[
	        CASE 
	        	WHEN CASE 
			            WHEN MAX(dtl.bal_amt) = 0 THEN ''                    
			            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())               
	        	END < 0 THEN 0
	        	ELSE CASE 
			            WHEN MAX(dtl.bal_amt) = 0 THEN ''                    
			            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())               
	        	END 
	        END AS over_due ]]>,
	        MAX(dtl.inv_due_dt)   AS inv_due_dt,
				MAX(dtl.buy_inv_no)       AS vnd_inv_no,
	        MAX(mst.ofc_cd)    AS ofc_cd,
	        MAX(dtl.inv_aply_curr_cd) AS inv_aply_curr_cd,
	        MAX(mst.rgst_usrid)   AS rgst_usrid,
	        CONVERT(VARCHAR,MAX(mst.rgst_tms),20) AS rgst_tms                ,
	        MAX(mst.modi_usrid)   AS modi_usrid                ,
			CONVERT(VARCHAR,MAX(mst.inv_modi_tms),20) AS inv_modi_tms              ,    
			MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))  AS clt_cmpl_flg,             
	        MAX(mst.cmb_inv_seq)  AS cmb_inv_seq,    
			MAX(mst.inv_rmk) AS inv_rmk,
			MAX(prnr.shrt_nm)   AS shrt_nm,
			MAX(prnr.eng_nm)     AS trdp_nm,
			MAX(jnr.jnr_no)    AS jnr_no,
			CASE WHEN MAX(ISNULL(BLCK.CLT_CMPL_FLG1,DTL.CLT_CMPL_FLG)) = 'Y' THEN 'Y' ELSE '' END AS magam_flag,
			CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND (MAX(mst.sell_buy_tp_cd) IN ('D', 'C')) THEN MAX(dtl.CUST_REF_NO)        
	             ELSE MAX(T1.agent_ref_no) END AS imp_ref_no,   
            CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)          
                 ELSE MAX(T1.cust_ref_no)        
            END AS cust_ref_no,
            T1.etd_dt_tm, 
			T1.eta_dt_tm 
		FROM  
		(
		SELECT
		        a1.*     
		    FROM
		        (   SELECT
			            ROW_NUMBER() OVER (
			        ORDER BY
			            A.post_dt desc, A.modi_tms desc
		            ) as ROWNUM,
		            A.*      
		        FROM
		            (
						SELECT
							dtl.inv_seq          ,
							CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
								OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
							END       AS inv_no             ,
							MAX(dtl.inv_post_dt)  AS post_dt             ,
		                	SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS duty_tax_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS non_taxable_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS taxable_amt,		
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	  ELSE 0 END ) AS vat_amt,	
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
							 	 	  ELSE 0 END ) AS whd_amt,	
						    CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
								ELSE MAX(dtl.inv_sum_amt)              
							END AS inv_sum_amt                 ,
							CONVERT(VARCHAR,
							MAX(mst.modi_tms),
							20) AS modi_tms  ,
						
							CASE 
								WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)                   
								ELSE MAX(mbl.bl_no)                 
							END AS mbl_no                ,
							CASE 
								WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)                   
								ELSE MAX(bl.bl_no)              
							end AS hbl_no             ,
							MAX(bl.ref_no)    AS ref_no             ,
							''       AS oth_ref_no   ,
							'' as wms_ref_no,
							MAX(bl.intg_bl_seq)   AS intg_bl_seq             ,
							''       AS oth_seq             ,
							'' as wms_seq,
							(select
								upper(x.CNT_CD) 
							from
								tb_ofc x with(nolock)
							where
								x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd             ,
							MAX(bl.ref_ofc_cd)   AS ref_ofc_cd             ,
							CASE 
								WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.intg_bl_seq)                   
								ELSE MAX(mbl.intg_bl_seq)                 
							END AS m_intg_bl_seq          ,
							CASE 
								WHEN MAX(bl.biz_clss_cd) = 'M'             THEN (select
									max(bnd_clss_cd) 
								from
									tb_add_info_bnd with(nolock)
								where
									intg_bl_seq = max(bl.intg_bl_seq))                   
								ELSE (select
									max(bnd_clss_cd) 
								from
									tb_add_info_bnd with(nolock)
								where
									intg_bl_seq = max(mbl.intg_bl_seq))                 
							END AS bnd_clss_cd                  ,
							CASE 
								WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
								WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
							END AS agent_ref_no,
							MAX(bl.cust_ref_no) AS cust_ref_no,
							MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                MAX(bl.eta_dt_tm) AS eta_dt_tm              
						FROM
							TB_INV mst with(nolock)        
						JOIN
							TB_INV_DTL dtl with(nolock)        
								ON mst.INV_SEQ = dtl.INV_SEQ        
						JOIN
							TB_FRT frt with(nolock)        
								ON dtl.INV_SEQ = frt.INV_SEQ
						LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
						JOIN
							TB_INTG_BL bl with(nolock)        
								ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ 
								AND bl.delt_flg = 'N'                  
						LEFT JOIN
							tb_intg_bl_rlt rlt with(nolock)                
								ON  bl.intg_bl_seq = rlt.intg_bl_seq 
								AND rlt.delt_flg = 'N'      
						LEFT JOIN
							tb_intg_bl mbl with(nolock)        
								ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq 
								AND mbl.biz_clss_cd = 'M' 
								AND mbl.delt_flg = 'N'                 
						WHERE
							mst.DELT_FLG = 'N'  
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'          
							AND isnull(frt.oth_seq,'') ='' AND isnull(frt.WMS_SEQ,'') =''          
							<isNotEqual property="s_post_strdt" compareValue="">
							AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
							</isNotEqual>	
							AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
							<isNotEmpty property="s_bill_to_cd">
								AND mst.trdp_cd = #s_bill_to_cd#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_nm">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd 
											WHERE trd.TRDP_CD = mst.TRDP_CD 
											  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
							</isNotEmpty>
							<isNotEmpty property="s_ofc_cd">
								AND bl.ref_ofc_cd = #s_ofc_cd#
							</isNotEmpty>
							<isNotEmpty property="s_hbl_no">
								AND bl.bl_no = #s_hbl_no#
								AND bl.biz_clss_cd = 'H'
							</isNotEmpty>
							<isNotEmpty property="s_mbl_no">
								AND (mbl.bl_no =  #s_mbl_no# or ( bl.bl_no = #s_mbl_no#	AND bl.biz_clss_cd = 'M'))							
							</isNotEmpty>
							<isNotEmpty property="s_inv_no">
								AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_v_inv_no">
								AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_ref_no">
								AND bl.ref_no like #s_ref_no#
							</isNotEmpty>
							<isEqual property="s_type_cd" compareValue="LC">
								AND mst.sell_buy_tp_cd = 'S'
							</isEqual>
							<isEqual property="s_type_cd" compareValue="CD">
								AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
							</isEqual>
							<isEqual property="s_type_cd" compareValue="AP">
								AND mst.sell_buy_tp_cd = 'B'
							</isEqual>
							<isNotEmpty property="s_inv_seq">
								AND dtl.inv_seq = #s_inv_seq#
							</isNotEmpty>
							<isNotEmpty property="f_intg_bl_seq">
								AND bl.intg_bl_seq = #f_intg_bl_seq#
							</isNotEmpty>
							<isNotEmpty property="f_oth_seq">
	 							AND frt.oth_seq = #f_oth_seq#
							</isNotEmpty>
							<isNotEmpty property="s_oth_ref_no">
	 							AND 's_oth_ref_no' like #s_oth_ref_no#
							</isNotEmpty>
							<isNotEmpty property="s_wms_ref_no">
	 							AND 's_wms_ref_no' like #s_wms_ref_no#
							</isNotEmpty>
							<isNotEqual property="s_amt_to" compareValue="0">
								AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
							</isNotEqual>
							<isNotEmpty property="s_inv_rmk">
								AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
							</isNotEmpty>
						GROUP BY dtl.inv_seq
						
						UNION ALL
						
						SELECT
							dtl.inv_seq          ,
							CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
								OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
							END       AS inv_no             ,
							MAX(dtl.inv_post_dt)  AS post_dt             ,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS duty_tax_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS non_taxable_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS taxable_amt,		
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	  ELSE 0 END ) AS vat_amt,	
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
							 	 	  ELSE 0 END ) AS whd_amt,	
						    CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
								ELSE MAX(dtl.inv_sum_amt)              
							END AS inv_sum_amt                 ,
		               
							CONVERT(VARCHAR,
							MAX(mst.modi_tms),
							20) AS modi_tms    ,
						
							MAX(bl.mbl_no)    AS mbl_no                ,
							MAX(bl.hbl_no)    AS hbl_no                ,
							''       AS ref_no             ,
							MAX(bl.ref_no)    AS oth_ref_no     ,
							'' as wms_ref_no, 
							''       AS intg_bl_seq             ,
							MAX(bl.OTH_SEQ)    AS oth_seq             ,   
							'' as wms_seq,         
							  (select
								upper(x.CNT_CD) 
							from
								tb_ofc x with(nolock)
							where
								x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
							MAX(bl.ofc_cd)    AS ref_ofc_cd             , 
							'' AS m_intg_bl_seq          ,
							'' AS bnd_clss_cd          ,
		 					'' AS agent_ref_no,
							MAX(bl.cust_ref_no) AS cust_ref_no,
			 				MAX(bl.etd_dt_tm) AS etd_dt_tm,
			                MAX(bl.eta_dt_tm) AS eta_dt_tm                
						FROM
							TB_INV mst with(nolock)       
						JOIN
							TB_INV_DTL dtl with(nolock)       
								ON mst.INV_SEQ = dtl.INV_SEQ        
						JOIN
							TB_FRT frt with(nolock)        
								ON dtl.INV_SEQ = frt.INV_SEQ
						LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
						JOIN
							TB_OTH_SALES bl with(nolock)        
								ON frt.OTH_SEQ = bl.OTH_SEQ                   
						WHERE
							mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND isnull(frt.oth_seq,'') !=''
							<isNotEqual property="s_post_strdt" compareValue="">
							AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
							</isNotEqual>					
							AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
							<isNotEmpty property="s_bill_to_cd">
								AND mst.trdp_cd = #s_bill_to_cd#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_nm">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd 
											WHERE trd.TRDP_CD = mst.TRDP_CD 
											  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
							</isNotEmpty>
							<isNotEmpty property="s_ofc_cd">
								AND bl.ofc_cd = #s_ofc_cd#
							</isNotEmpty>
							<isNotEmpty property="s_hbl_no">
								AND bl.hbl_no = #s_hbl_no#
							</isNotEmpty>
							<isNotEmpty property="s_mbl_no">
								AND bl.mbl_no = #s_mbl_no#
							</isNotEmpty>
							<isNotEmpty property="s_inv_no">
								AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_v_inv_no">
								AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_ref_no">
								AND 'bl.ref_no' like #s_ref_no#
							</isNotEmpty>
							<isEqual property="s_type_cd" compareValue="LC">
								AND mst.sell_buy_tp_cd = 'S'
							</isEqual>
							<isEqual property="s_type_cd" compareValue="CD">
								AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
							</isEqual>
							<isEqual property="s_type_cd" compareValue="AP">
								AND mst.sell_buy_tp_cd = 'B'
							</isEqual>
							<isNotEmpty property="s_inv_seq">
								AND dtl.inv_seq = #s_inv_seq#
							</isNotEmpty>
							<isNotEmpty property="f_intg_bl_seq">
								AND 'f_intg_bl_seq' = #f_intg_bl_seq#
							</isNotEmpty>
							<isNotEmpty property="f_oth_seq">
	 							AND frt.oth_seq = #f_oth_seq#
							</isNotEmpty>
							<isNotEmpty property="s_oth_ref_no">
	 							AND bl.ref_no like #s_oth_ref_no#
							</isNotEmpty>
							<isNotEmpty property="s_wms_ref_no">
	 							AND 's_wms_ref_no' like #s_wms_ref_no#
							</isNotEmpty>
							<isNotEqual property="s_amt_to" compareValue="0">
								AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
							</isNotEqual>
							<isNotEmpty property="s_inv_rmk">
								AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
							</isNotEmpty>
						GROUP BY dtl.inv_seq
						
						UNION ALL
						
						SELECT
							dtl.inv_seq          ,
							CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'D' 
								OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)                   
								WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)              
							END       AS inv_no             ,
							MAX(dtl.inv_post_dt)  AS post_dt             ,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND (ISNULL(fcd.PFMC_FLG,'N') = 'N' OR fcd.PFMC_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS duty_tax_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '')
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS non_taxable_amt,
							SUM( CASE WHEN fcd.FRT_CLSS_CD != 'VAT' AND fcd.FRT_CLSS_CD != 'WHD' AND ISNULL(fcd.PFMC_FLG,'N') = 'Y' AND ISNULL(fcd.TAX_FLG,'N') = 'Y'
					  		 		  THEN  CASE frt.SELL_BUY_TP_CD
					  						WHEN 'C' then frt.CR_AMT*-1
											ELSE frt.INV_AMT 
							  	 END ELSE 0 END ) AS taxable_amt,		
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
								 	  ELSE 0 END ) AS vat_amt,	
							SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
							 	 	  ELSE 0 END ) AS whd_amt,	
						    CASE 
								WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1                       
								ELSE MAX(dtl.inv_sum_amt)              
							END AS inv_sum_amt                 ,
		               
							CONVERT(VARCHAR,
							MAX(mst.modi_tms),
							20) AS modi_tms    ,
						
							MAX(bl.mbl_no)    AS mbl_no                ,
							MAX(bl.hbl_no)    AS hbl_no                ,
							''       AS ref_no             ,
							''    AS oth_ref_no     ,
							MAX(bl.doc_ref_no)    AS wms_ref_no     ,
							''       AS intg_bl_seq             ,
							''    AS oth_seq             , 
							MAX(bl.WM_DOC_SEQ)    AS wms_seq             ,            
							  (select
								upper(x.CNT_CD) 
							from
								tb_ofc x with(nolock)
							where
								x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
							MAX(bl.ofc_cd)    AS ref_ofc_cd             , 
							'' AS m_intg_bl_seq          ,
							'' AS bnd_clss_cd          ,
		 					'' AS agent_ref_no,
							MAX(bl.cust_ref_no) AS cust_ref_no,
							'' AS etd_dt_tm,
			                '' AS eta_dt_tm                 
						FROM
							TB_INV mst with(nolock)       
						JOIN
							TB_INV_DTL dtl with(nolock)       
								ON mst.INV_SEQ = dtl.INV_SEQ        
						JOIN
							TB_FRT frt with(nolock)        
								ON dtl.INV_SEQ = frt.INV_SEQ
						LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd   		        
						JOIN
							TB_WM_DOC_MST bl with(nolock)        
								ON frt.WMS_SEQ = bl.WM_DOC_SEQ                   
						WHERE
							mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND isnull(frt.WMS_SEQ,'') !=''
							<isNotEqual property="s_post_strdt" compareValue="">
							AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
							</isNotEqual>					
							AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
							<isNotEmpty property="s_bill_to_cd">
								AND mst.trdp_cd = #s_bill_to_cd#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_nm">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd 
											WHERE trd.TRDP_CD = mst.TRDP_CD 
											  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
							</isNotEmpty>
							<isNotEmpty property="s_ofc_cd">
								AND bl.ofc_cd = #s_ofc_cd#
							</isNotEmpty>
							<isNotEmpty property="s_hbl_no">
								AND bl.hbl_no = #s_hbl_no#
							</isNotEmpty>
							<isNotEmpty property="s_mbl_no">
								AND bl.mbl_no = #s_mbl_no#
							</isNotEmpty>
							<isNotEmpty property="s_inv_no">
								AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_v_inv_no">
								AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
							</isNotEmpty>
							<isNotEmpty property="s_ref_no">
								AND 'ref_no' like #s_ref_no#
							</isNotEmpty>
							<isEqual property="s_type_cd" compareValue="LC">
								AND mst.sell_buy_tp_cd = 'S'
							</isEqual>
							<isEqual property="s_type_cd" compareValue="CD">
								AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
							</isEqual>
							<isEqual property="s_type_cd" compareValue="AP">
								AND mst.sell_buy_tp_cd = 'B'
							</isEqual>
							<isNotEmpty property="s_inv_seq">
								AND dtl.inv_seq = #s_inv_seq#
							</isNotEmpty>
							<isNotEmpty property="f_intg_bl_seq">
								AND 'f_intg_bl_seq' = #f_intg_bl_seq#
							</isNotEmpty>
							<isNotEmpty property="f_oth_seq">
	 							AND frt.oth_seq = #f_oth_seq#
							</isNotEmpty>
							<isNotEmpty property="s_oth_ref_no">
	 							AND 's_oth_ref_no' like #s_oth_ref_no#
							</isNotEmpty>
							<isNotEmpty property="s_wms_ref_no">
	 							AND bl.doc_ref_no like #s_wms_ref_no#
							</isNotEmpty>
							<isNotEqual property="s_amt_to" compareValue="0">
								AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
							</isNotEqual>
							<isNotEmpty property="s_inv_rmk">
								AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
							</isNotEmpty>
						GROUP BY dtl.inv_seq
					) A
				 ) a1
			)  T1
			JOIN TB_INV mst with(nolock)    
				ON T1.INV_SEQ = mst.INV_SEQ       
			JOIN TB_INV_DTL dtl with(nolock)       
				ON mst.INV_SEQ = dtl.INV_SEQ 
			LEFT JOIN tb_trdp prnr with(nolock)                
				ON prnr.trdp_cd = MST.trdp_cd
			LEFT JOIN TB_JNR_DTL jnr with(nolock)       
				ON T1.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'  
			LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
				ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
			 GROUP BY
			        T1.inv_seq, T1.inv_no,T1.post_dt,T1.modi_tms,T1.mbl_no,T1.hbl_no,T1.ref_no,T1.oth_ref_no,T1.wms_ref_no,T1.intg_bl_seq,T1.oth_seq,T1.wms_seq,
					T1.bl_cnt_cd,T1.ref_ofc_cd,T1.m_intg_bl_seq,T1.bnd_clss_cd,T1.cust_ref_no,T1.ROWNUM,T1.etd_dt_tm,T1.eta_dt_tm 			
		) T2
			<dynamic prepend="WHERE">
				<isNotEmpty property="s_imp_ref_no" prepend="AND">
					T2.imp_ref_no LIKE '%' + #s_imp_ref_no# + '%'
				</isNotEmpty>
				<isNotEmpty property="s_cust_ref_no" prepend="AND">
					T2.cust_ref_no = #s_cust_ref_no#
				</isNotEmpty>
			</dynamic>        		
		ORDER BY T2.ROWNUM 	            		
    </select>
    
    
    <!-- InvoiceList COUNT 조회  -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchInvoiceList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		<!-- AccInvInvoiceSQL.xml > searchInvoiceList_CNT   -->
		<!-- ZOOT = AR_AP LIST -->
		/*  AccInvInvoiceSQL.xml > searchInvoiceList_CNT */
		SELECT COUNT(x.inv_seq)
          FROM (
          	SELECT	
					A.inv_seq,
					CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND (MAX(A.sell_buy_tp_cd) IN ('D', 'C')) THEN MAX(dtl.CUST_REF_NO)        
			             ELSE MAX(A.agent_ref_no) END AS imp_ref_no,   
		            CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND MAX(A.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)          
		                 ELSE MAX(A.cust_ref_no)        
		            END AS cust_ref_no
					FROM(
							SELECT 	
								dtl.inv_seq,
								MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
								CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
								END AS inv_no,
								CASE 
									WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
									WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
								END AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no    								   
							 FROM TB_INV mst 
							 JOIN TB_INV_DTL dtl 
								ON mst.INV_SEQ = dtl.INV_SEQ 
							 JOIN TB_FRT frt 
								ON dtl.INV_SEQ = frt.INV_SEQ 
							 JOIN TB_INTG_BL bl 
								ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
							LEFT JOIN tb_intg_bl_rlt rlt
					            ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
							LEFT JOIN tb_intg_bl mbl 
								ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'							
							WHERE mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'          
								AND isnull(frt.oth_seq,'') ='' AND isnull(frt.WMS_SEQ,'') =''      
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>	
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ref_ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.bl_no = #s_hbl_no#
									AND bl.biz_clss_cd = 'H'
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND (mbl.bl_no =  #s_mbl_no# or ( bl.bl_no = #s_mbl_no#	AND bl.biz_clss_cd = 'M'))							
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND bl.ref_no like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND bl.intg_bl_seq = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							 
							GROUP BY dtl.inv_seq
							
							UNION ALL
							
							SELECT 
									dtl.inv_seq,
									MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
									CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
									     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
									     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
									END AS inv_no,
									'' AS agent_ref_no,
									MAX(bl.cust_ref_no) AS cust_ref_no								   
							 FROM TB_INV mst 
							 JOIN TB_INV_DTL dtl 
								ON mst.INV_SEQ = dtl.INV_SEQ 
							 JOIN TB_FRT frt 
								ON dtl.INV_SEQ = frt.INV_SEQ 
							 JOIN TB_OTH_SALES bl 
								ON frt.OTH_SEQ = bl.OTH_SEQ 
							WHERE mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.oth_seq,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>					
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no = #s_hbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no = #s_mbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'bl.ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND bl.ref_no like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq

							UNION ALL
					
							SELECT
								dtl.inv_seq,
								MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
								CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
								END AS inv_no,
								'' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no	
					        FROM
					            TB_INV mst with(nolock)               
					        JOIN
					            TB_INV_DTL dtl with(nolock)                 
					            ON mst.INV_SEQ = dtl.INV_SEQ                
					        JOIN
					            TB_FRT frt with(nolock)                  
					            ON dtl.INV_SEQ = frt.INV_SEQ
					        LEFT OUTER JOIN 
								TB_FRT_CD fcd with(nolock)                                                                           
									ON frt.FRT_CD = fcd.frt_cd                       
					        JOIN
					            TB_WM_DOC_MST bl with(nolock)                  
					            ON frt.WMS_SEQ = bl.WM_DOC_SEQ                  
							WHERE
								mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.WMS_SEQ,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>					
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd 
												WHERE trd.TRDP_CD = mst.TRDP_CD 
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no = #s_hbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no = #s_mbl_no#
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE '%' + #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE '%' + #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND bl.doc_ref_no like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk like '%' + #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq 
						) A
						JOIN
							TB_INV_DTL dtl with(nolock)                 
				            ON A.INV_SEQ = dtl.INV_SEQ   
				        GROUP BY A.INV_SEQ
			) x 
			<dynamic prepend="WHERE">
				<isNotEmpty property="s_imp_ref_no" prepend="AND">
					x.imp_ref_no LIKE '%' + #s_imp_ref_no# + '%'
				</isNotEmpty>
				<isNotEmpty property="s_cust_ref_no" prepend="AND">
					x.cust_ref_no = #s_cust_ref_no#
				</isNotEmpty>
			</dynamic>
    </select>

    <!-- InvoiceList 조회  -->
    <select id="searchExpenseList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchExpenseList  */
		SELECT
	        a1.*     
	    FROM
	        (   SELECT
		            ROW_NUMBER() OVER (
		        ORDER BY
		            A.modi_tms desc, A.post_dt, A.inv_no
	            ) as ROWNUM,
	            A.*      
	        FROM
	            (
	            SELECT 	dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,MAX(dtl.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				             ELSE MAX(dtl.inv_no)
				        END 						AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(ISNULL(mst.inv_modi_tms, mst.modi_tms))		AS inv_modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS clt_cmpl_flg
				       ,MAX(jnr_mst.jnr_no)			AS jnr_no
		   		       ,MAX(mst.Reserve_field02)   AS reserve_field02
		   		       ,(SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = MAX(mst.ofc_cd)) as bl_cnt_cd
		   		       ,MAX(MST.INV_RMK) AS inv_rmk 		         
				 FROM TB_INV mst 
				LEFT JOIN TB_INV_DTL dtl 
					ON mst.INV_SEQ = dtl.INV_SEQ 
				LEFT JOIN TB_FRT frt 
					ON dtl.INV_SEQ = frt.INV_SEQ 
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr 
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'  
				LEFT JOIN TB_JNR_MST jnr_mst 
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1 	  
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>
					<isNotEmpty property="s_inv_strdt">	
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
						AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd 
									WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE '%' + #s_bill_to_nm# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE '%' + #s_inv_no# + '%' OR dtl.inv_no LIKE '%' + #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY dtl.inv_seq
	            ) A
	    ) a1
		<![CDATA[ where a1.ROWNUM > #beginIdx# AND a1.ROWNUM <= #topCnt#	]]>		
    </select>
    
    <!-- InvoiceList 조회  -->
    <select id="searchExpenseList_EXCEL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchExpenseList_EXCEL  */
		SELECT
	        a1.*     
	    FROM
	        (   SELECT
		            ROW_NUMBER() OVER (
		        ORDER BY
		            A.modi_tms desc, A.post_dt, A.inv_no
	            ) as ROWNUM,
	            A.*      
	        FROM
	            (
	            SELECT 	dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,MAX(dtl.bal_amt)			AS bal_amt				       
				       <![CDATA[
				       ,CASE 
				        	WHEN CASE 
						            WHEN MAX(dtl.bal_amt) = 0 THEN ''                    
						            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())               
				        	END < 0 THEN 0
				        	ELSE CASE 
						            WHEN MAX(dtl.bal_amt) = 0 THEN ''                    
						            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())               
				        	END 
				        END AS over_due ]]>
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				             ELSE MAX(dtl.inv_no)
				        END 						AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(ISNULL(mst.inv_modi_tms, mst.modi_tms))		AS inv_modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS clt_cmpl_flg
				       ,MAX(jnr_mst.jnr_no)			AS jnr_no
		   		       ,MAX(mst.Reserve_field02)   AS reserve_field02
		   		       ,(SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = MAX(mst.ofc_cd)) as bl_cnt_cd 
		   		       ,CASE WHEN MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG)) = 'Y' THEN 'Y' ELSE '' END AS magam_flag
				 FROM TB_INV mst 
				LEFT JOIN TB_INV_DTL dtl 
					ON mst.INV_SEQ = dtl.INV_SEQ 
				LEFT JOIN TB_FRT frt 
					ON dtl.INV_SEQ = frt.INV_SEQ 
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr 
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'  
				LEFT JOIN TB_JNR_MST jnr_mst 
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1 	  
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>
					<isNotEmpty property="s_inv_strdt">	
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
						AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd 
									WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE '%' + #s_bill_to_nm# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE '%' + #s_inv_no# + '%' OR dtl.inv_no LIKE '%' + #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY dtl.inv_seq
	            ) A
	    ) a1
    </select>
    
    
    <!-- InvoiceList COUNT 조회  -->
    <select id="searchExpenseList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchExpenseList_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM (
          		SELECT 	dtl.inv_seq
					   <!-- ZOOT 215-01-08
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,MAX(dtl.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN '' 
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate()) 
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(dtl.clt_cmpl_flg)		AS clt_cmpl_flg
				       ,MAX(jnr.jnr_no)				AS jnr_no
          		       ,MAX(mst.Reserve_field02)   AS reserve_field02 -->
				 FROM TB_INV mst 
				LEFT JOIN TB_INV_DTL dtl 
					ON mst.INV_SEQ = dtl.INV_SEQ 
				LEFT JOIN TB_FRT frt 
					ON dtl.INV_SEQ = frt.INV_SEQ 
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr 
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'   
				LEFT JOIN TB_JNR_MST jnr_mst 
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'	
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>	
					<isNotEmpty property="s_inv_strdt">	
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
					AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd 
									WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE '%' + #s_bill_to_nm# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE '%' + #s_inv_no# + '%' OR dtl.inv_no LIKE '%' + #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY dtl.inv_seq
			) x
    </select>
    
    <!--INVOICE POST DATE 수정   -->
    <update id="updateINV_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV_DTL
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>
    
    <!--INVOICE POST DATE 수정   -->
    <update id="updateFRT_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_FRT
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>
    
    <!--INVOICE POST DATE 수정   -->
    <update id="updateINV_LIST_POSTDATE" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
    	   SET inv_post_dt  = #post_dt#
    	       <dynamic>
	    	       <isNotNull>
		    	        <isEqual property="post_dt_inv" compareValue="POST">
						,inv_dt  = #post_dt#
						,inv_due_dt   = CONVERT(VARCHAR
						                       ,case when #cr_term_cd# = 'A' 
												     then dateadd(d, convert(int, #cr_term_dt#), #post_dt#)
												     when #cr_term_cd# = 'B' 
												     then dateadd(month,1,#post_dt#)-(day(#post_dt#))
												     when #cr_term_cd# = 'C' 
												     then dateadd(month,2,#post_dt#)-(day(#post_dt#))
												     when #cr_term_cd# = 'D' 
												     then dateadd(d, convert(int, #cr_term_dt#), dateadd(month,1,#post_dt#)-(day(#post_dt#)))
												end
											   ,112)
					    </isEqual>
	    	       </isNotNull>
			   </dynamic>		
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
		      ,INV_MODI_TMS	= getdate()
         WHERE inv_seq = #inv_seq#
    </update>
    
    
    <!--INVOICE LIST 삭제시 FREIGHT 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 :: intg_bl_seq 	= #intg_bl_seq# where조건 제거 함..-->
    <!-- WMS4.0 테스트 시 재수정 2015.11.02 :: intg_bl_seq 	= #intg_bl_seq# where조건 제거 함..-->
    <update id="deleteINV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= 'FI'
    	      ,inv_post_dt  = null
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE inv_seq 		= #inv_seq#
    </update>
    
    
    <!--A/P EXPENSE INVOICE LIST 삭제시 FREIGHT 테이블 수정   -->
    <update id="deleteEXPINV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= 'FI'
    	      ,inv_post_dt  = null
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE inv_seq 		= #inv_seq#
    </update>
    
    
    <!--INVOICE LIST MST ��젣   -->
    <update id="deleteINVLIST_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV
    	   SET DELT_FLG = 'Y'
    	      ,modi_usrid		= #proc_usrid#
			  ,modi_ofc_cd		= #proc_ofccd#
			  ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#
    </update>
    
    <!--INVOICE LIST DTL ��젣   -->
    <update id="deleteINVLIST_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV_DTL
    	   SET DELT_FLG = 'Y'
			    ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#
    </update>
    
    
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다.   -->
    <update id="upateInvCurLmtAmtAdd" parameterClass="java.util.HashMap">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) + #cur_lmt_amt#
    	 WHERE TRDP_CD = #cur_trdp_cd#
    </update>
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateInvCurLmtAmtDelete" parameterClass="java.util.HashMap">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) - #cur_lmt_amt#
    	 WHERE TRDP_CD = #cur_trdp_cd#
    </update>
    
    
    
    <!-- DEBIT/CREDIT BL LIST 조회   -->
    <select id="searchRltBlList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchRltBlList  */
    	SELECT bl.BL_NO
		      ,bl.INTG_BL_SEQ
		  FROM TB_INTG_BL bl
		 WHERE bl.INTG_BL_SEQ = #f_intg_bl_seq#
		 	
		 <isEqual property="f_biz_clss_cd" compareValue="H">
		 	UNION ALL
		 	
		 	SELECT mbl.BL_NO
			      ,mbl.INTG_BL_SEQ
			  FROM TB_INTG_BL hbl
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
				ON  hbl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl mbl
				ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'  
			 WHERE hbl.INTG_BL_SEQ = #f_intg_bl_seq#
		 </isEqual>
		 <isEqual property="f_biz_clss_cd" compareValue="M">
		 	UNION ALL
		 	
		 	SELECT hbl.BL_NO
			      ,hbl.INTG_BL_SEQ
			  FROM TB_INTG_BL mbl
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
				ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl hbl
				ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'  
			 WHERE mbl.INTG_BL_SEQ = #f_intg_bl_seq#
		 </isEqual>
    </select>
    
    
    <!-- Invoice 업무별 FrtCd  조회    -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchBlFrtCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBlFrtCdList  */
    	SELECT FRT_CD, FRT_CD_NM, FRT_CD_LOCL_NM, ISNULL(TAX_RATE, 0)  as TAX_RATE ,ISNULL(FRT_CLSS_CD, '') as FRT_CLSS_CD
		  FROM TB_FRT_CD
		 WHERE DELT_FLG  = 'N'
		   AND USE_FLG   = 'Y'
		   AND GNR_FLG  != 'Y'
		   <isEqual property="param" compareValue="AOH">
		   	   AND AEH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AOM">
		   	   AND AEM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AIH">
		   	   AND AIH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AIM">
		   	   AND AIM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SOH">
		   	   AND OEH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SOM">
		   	   AND OEM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SIH">
		   	   AND OIH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SIM">
		   	   AND OIM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="WMS">
		   	   AND WMS_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AR">
		   	   AND AR_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AP">
		   	   AND AP_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="DC">
		   	   AND DC_FLG    = 'Y'
		   </isEqual>
    </select>
    
    
    
    <!-- Invoice EXPENSE FrtCd  조회    -->
    <select id="searchExpFrtCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchExpFrtCdList  */
    	SELECT FRT_CD, FRT_CD_NM
		  FROM TB_FRT_CD
		 WHERE DELT_FLG  = 'N'
		   AND USE_FLG   = 'Y'
		   AND GNR_FLG   = 'Y'
		   <isEqual property="s_inv_flg" compareValue="AP">
		   	   AND AP_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AR">
		   	   AND AR_FLG    = 'Y'
		   </isEqual>
    </select>
    
    <!-- Invoice 업무별 FrtCd  조회    -->
    <select id="getInvFrtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvFrtcd  */
        SELECT 	frt_cd
               ,frt_cd_nm
               ,frt_cd_locl_nm
               ,ISNULL(tax_rate, 0) as tax_rate
		  FROM  tb_frt_cd
		 WHERE  delt_flg = 'N'
		   AND  GNR_FLG != 'Y'
		   AND  frt_cd = #frt_cd#
    </select>
    
    <!-- Invoice FrtCd  조회    -->
    <!-- #20645 : [BINEX]G/L Validation jsjang 2013.09.10 -->
    <select id="getInvFrtBillingcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvFrtcd  */
        SELECT 	frt_cd
               ,frt_cd_nm
               ,frt_cd_locl_nm
               ,ISNULL(tax_rate, 0) as tax_rate
               ,ISNULL(whld_tax_rate, 0) as whld_tax_rate
			   ,gl_cd_rev
			   ,gl_cd_cost
			   ,gl_cd_prnr
		  FROM  tb_frt_cd
		 WHERE  delt_flg = 'N'
		   AND  GNR_FLG != 'Y'
		   AND  frt_cd = #frt_cd#
    </select>    
    
    <!-- Invoice FrtCd  조회    -->
    <select id="getInvGnrFrtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvGnrFrtcd  */
        SELECT 	frt_cd
               ,frt_cd_nm
               ,tax_rate
               <isEqual property="sell_buy_tp_cd" compareValue="S">
				,gl_cd_rev as gl_cd
			   </isEqual>
			   <isEqual property="sell_buy_tp_cd" compareValue="B">
				,gl_cd_cost as gl_cd
			   </isEqual>
		  FROM  tb_frt_cd
		 WHERE  delt_flg = 'N'
		   AND  GNR_FLG  = 'Y'
		   AND  frt_cd = #frt_cd#
		<isEqual property="sell_buy_tp_cd" compareValue="S">
		   AND  ar_flg = 'Y'
		</isEqual>
		<isEqual property="sell_buy_tp_cd" compareValue="B">
		   AND  ap_flg = 'Y'
		</isEqual>
    </select>
    
    
    
    <!-- CR/DB INVOICE Freight 목록 조회. AUTO 용   -->
    <select id="searchFreightAutoOut" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOut  */
    	SELECT hbl.BL_NO
		      ,hbl.INTG_BL_SEQ
		      ,fr.frt_seq
		      ,fr.sell_buy_tp_cd
		      ,fr.rat_curr_cd
		      ,fr.frt_cd
		      ,  CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,	
		  		 isnull(fr.cr_amt,0)             AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code, 
				 '' as inv_rmk,
				 fr.intg_bl_seq_2
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'  
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp           
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'            
		LEFT OUTER JOIN tb_frt_cd fd           
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N' 	
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 		    
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD IN ('C', 'D')
		   AND (fr.INV_SEQ IS NULL OR fr.INV_SEQ = '')

    </select>
    
    <!-- CR/DB INVOICE Freight 목록 조회. AUTO 용   -->
    <select id="searchFreightAutoIn" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoIn  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq     
		        ,CASE WHEN fr.sell_buy_tp_cd = 'S' THEN 'C'
					ELSE 'D'
				END AS sell_buy_tp_cd   
		        ,fr.rat_curr_cd
		        ,fr.frt_cd          
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 0                  			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,	
		  		 isnull(fr.inv_amt,0)            AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code, 
				 '' as inv_rmk,
				 fr.intg_bl_seq_2
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'  
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp           
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'            
		LEFT OUTER JOIN tb_frt_cd fd           
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N' 	
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 		    
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.RESERVE_FIELD01  = 'Y'
    </select>
    
    
    <!-- CR/DB INVOICE Freight 목록 조회. AUTO O/F 용   -->
    <select id="searchFreightAutoOFOut" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOF  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq         
		        ,'D'  as sell_buy_tp_cd         
		        ,fr.rat_curr_cd
		        ,fr.frt_cd          
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    
                 'CC' as frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,	
		  		 isnull(fr.cr_amt,0)             AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code, 
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
				 fd.frt_clss_cd
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'  
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp           
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'            
		LEFT OUTER JOIN tb_frt_cd fd           
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N' 	
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 		    
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD   = 'C'
		   AND fr.FRT_TERM_CD      = 'CC'
		   AND mbl.AIR_SEA_CLSS_CD = 'S'
		   AND fd.FRT_CLSS_CD      = 'FC'
    </select>
    
    <!-- CR/DB INVOICE Freight 목록 조회. AUTO O/F 용   -->
    <select id="searchFreightAutoOFIn" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOFIn  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq         
		        ,'C' as sell_buy_tp_cd
		        ,fr.rat_curr_cd
		        ,fr.frt_cd          
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,    
		  		 0                  			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,	
		  		 isnull(fr.inv_amt,0)            AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd,     
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O' 
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I' 
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)	
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code, 
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
				 fd.frt_clss_cd
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'  
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd 
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp           
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'            
		LEFT OUTER JOIN tb_frt_cd fd           
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N' 	
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 		    
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD   = 'S'
		   AND fd.FRT_CLSS_CD      = 'FC'
		   AND fr.RESERVE_FIELD01  = 'Y'
    </select>
    
    <!-- FREIGHT POST DATE UPDATE   -->
    <update id="upateInvFrtPostDt" parameterClass="java.util.HashMap">
    	UPDATE tb_frt
    	   SET  inv_post_dt	  = #inv_post_dt#
    	       ,modi_ofc_cd	  = #proc_ofccd#
		       ,modi_usrid	  = #proc_usrid#
		       ,modi_tms	  = GETUTCDATE()
    	 WHERE inv_seq 		  = #inv_seq#
    </update>
    
    
    
    <!-- FREIGHT POST DATE UPDATE A/P EXPENSE OTHER BRANCH  -->
    <update id="upateInvFrtPostDtAPOB" parameterClass="java.util.HashMap">
    	UPDATE tb_frt
    	   SET  inv_post_dt	  	= #inv_post_dt#
    	       ,trdp_cd			= #trdp_cd#
    	       ,rat_curr_cd		= #curr_cd#
    	       ,inv_curr_cd		= #curr_cd#
    	       ,modi_ofc_cd	  = #proc_ofccd#
		       ,modi_usrid	  = #proc_usrid#
		       ,modi_tms	  = GETUTCDATE()
    	 WHERE reserve_field03 	= #inv_seq#
    </update>
    
    
    
    
    <!-- INVOICE COMBINE   -->
    <!-- Freight List를 조회함   -->
    <select id="selectNonInvFrtList" parameterClass="HashMap" resultClass="com.clt.apps.fis.see.frt.freight.dto.FrtVO">
		/*  AccInvInvoiceSQL.xml > selectNonInvFrtList  */
			SELECT  inv.inv_seq,      idt.inv_no,                idt.inv_aply_curr_cd AS inv_curr_cd, 
					idt.inv_amt,      idt.inv_vat_amt,           idt.inv_sum_amt,
					inv.trdp_cd,      trd.locl_nm AS trdp_nm,
					idt.frgn_curr_cd, idt.frgn_sum_amt,
					idt.inv_post_dt,  idt.buy_inv_no,
					idt.inv_sum_amt-(idt.frgn_sum_amt*idt.inv_aply_xcrt) AS locl_amt,
					usr.eng_usr_nm AS proc_usrnm,   dpt.cd_nm AS proc_dept_nm,
					CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
	        		     ELSE mbl.bl_no 		
	        		END AS mbl_no,
	        		CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
	        		     ELSE bl.bl_no
	        		end AS hbl_no,
	        		bl.ref_ofc_cd
					
			FROM(
					SELECT  inv.inv_seq,    inv.trdp_cd,     dtl.inv_no,    max(frt.intg_bl_seq)  AS hbl_bl_seq
					  FROM  tb_inv inv
					  JOIN  tb_inv_dtl dtl
						ON  inv.inv_seq = dtl.inv_seq
					  JOIN  tb_frt frt
						ON  inv.inv_seq = frt.inv_seq 
					 WHERE  inv.cmb_inv_seq IS NULL  
					   AND  dtl.inv_sts_cd = 'IS'
		               AND  inv.air_sea_clss_cd = #f_air_sea_clss_cd#
					   AND  dtl.inv_dt BETWEEN #f_inv_dt_bgn# AND #f_inv_dt_end#
                       AND  inv.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
				<isNotEmpty property="f_trdp_cd">
		               AND  inv.trdp_cd         = #f_trdp_cd#
				</isNotEmpty>
				<isNotEmpty property="f_ofc_cd">
                       AND  inv.modi_ofc_cd     = #f_ofc_cd#
				</isNotEmpty>		
					   AND inv.tax_bil_flg = 'Y'
				  GROUP BY  inv.inv_seq, dtl.inv_no, inv.trdp_cd
			 )inv     
			JOIN  tb_inv_dtl idt
			  ON  inv.inv_seq = idt.inv_seq
			JOIN  tb_intg_bl bl
			  ON  inv.hbl_bl_seq   = bl.intg_bl_seq
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
              ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl mbl
              ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
			JOIN  tb_add_info_bnd bnd
			  ON  bl.intg_bl_seq = bnd.intg_bl_seq
			JOIN  tb_usr usr
			  ON  usr.usr_tp = 'I' AND idt.modi_usrid = usr.usrid
			JOIN  tb_com_cd_dtl dpt
			  ON  dpt.cd_val = usr.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'
		    JOIN  tb_trdp trd
		      ON  inv.trdp_cd = trd.trdp_cd 
		   
		   WHERE  1=1
		<isNotEmpty property="f_bnd_clss_cd">   
		     AND  bnd.bnd_clss_cd= #f_bnd_clss_cd#
		</isNotEmpty>
        <isNotEmpty property="f_bl_no">
			 AND  hbl.bl_no      = #f_bl_no#
        </isNotEmpty>			
        <isNotEmpty property="f_dpt_cd">
		     AND  usr.dept_cd    = #f_dpt_cd#
		</isNotEmpty>
        <isNotEmpty property="f_pic_id">
		     AND  idt.modi_usrid = #f_pic_id#
		</isNotEmpty>
		ORDER BY idt.inv_no ASC
    </select>
    
    
    
    <!--INV_DTL에서 Foreight Currency를 뺀 INV_AMT를 조회함  -->
    <select id="selectSUM_FRGN_INV_AMT" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectSUM_FRGN_INV_AMT  */
        SELECT inv.inv_amt, inv.inv_vat_amt, inv.inv_sum_amt, 
               inv.frgn_amt, inv.frgn_vat_amt, (inv.frgn_amt+inv.frgn_vat_amt) AS frgn_sum_amt,
               inv.inv_krw_amt
          FROM(
                SELECT  sm.frt_amt AS inv_amt,                 sm.frt_vat_amt AS inv_vat_amt,   (sm.frt_amt+sm.frt_vat_amt) AS inv_sum_amt, 
                        (iv.tot_amt-sm.frt_amt) AS frgn_amt,   (iv.tot_vat_amt-sm.frt_vat_amt) AS frgn_vat_amt,
                        iv.inv_krw_amt
                 FROM(
                     SELECT  ISNULL(SUM(frt.inv_amt), 0) AS frt_amt, ISNULL(SUM(frt.inv_vat_amt), 0) AS frt_vat_amt
                       FROM(
                          SELECT  inv_seq,  idt.inv_aply_curr_cd, idt.inv_amt, idt.inv_vat_amt
                            FROM  tb_inv_dtl idt
                           WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>)
                     )idt
                  JOIN  tb_frt frt
                    ON  idt.inv_seq = frt.inv_seq AND frt.rat_curr_cd = idt.inv_aply_curr_cd AND frt.delt_flg = 'N'
                )sm,
                (     SELECT  ISNULL(SUM(idt.inv_amt), 0) AS tot_amt, ISNULL(SUM(idt.inv_vat_amt), 0) AS tot_vat_amt,
                              ISNULL(SUM(idt.inv_krw_amt), 0) AS inv_krw_amt
                        FROM  tb_inv_dtl idt
                       WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>)
                ) iv
         )inv
    </select>
    
    
    <!--Foreight Amount합을 조회함   -->	
    <select id="selectSUM_FRGN_AMT" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectSUM_FRGN_AMT  */
		SELECT  SUM(idt.frgn_amt) AS frgn_amt, SUM(idt.frgn_vat_amt) AS frgn_vat_amt, idt.frgn_curr_cd
		  FROM  tb_inv_dtl idt
		 WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>) 
		   AND  idt.frgn_curr_cd IS NOT NULL
	  GROUP BY  idt.frgn_curr_cd 
    </select>
	
	
    <!-- 통합인보이스 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_STS" parameterClass="HashMap">
        UPDATE  tb_cmb_inv
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,      
                modi_ofc_cd  = #proc_ofccd#,     
                modi_tms     = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq# 
    </update>
	
	<!-- 인보이스 헤더 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_HEAD_STS" parameterClass="HashMap">
        UPDATE  tb_inv
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,      
                modi_ofc_cd  = #proc_ofccd#,     
                modi_tms     = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq# 
    </update>
	
    <!-- 인보이스 헤더 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_DTL_STS" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_inv_dtl
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,      
                modi_ofc_cd  = #proc_ofccd#,     
                modi_tms     = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq# 
    </update>
	
    <update id ="updateCMB_FRT_STS" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE tb_frt
        SET      inv_sts_cd     = #inv_sts_cd#,
                 modi_usrid     = #proc_usrid#,
                 modi_ofc_cd    = #proc_ofccd#,
                 modi_tms       = GETUTCDATE()
        WHERE inv_seq = #inv_seq#
    </update>
    




    
    <!-- Combined Invoice 추가  -->
	<!-- Combined Invoice PK생성   -->
    <select id="selectCMB_INV_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(cmb_inv_seq)+1, 1)
          FROM  tb_cmb_inv
    </select>

		
	<!--Combined Invoice Number 생성   -->
    <select id="selectCmbInvDtlMax" resultClass="String" parameterClass="String">
		/*  AccInvInvoiceSQL.xml > selectCmbInvDtlMax  */
        SELECT  MAX(maxInv) as maxInv
        FROM    (
                SELECT  CASE    WHEN MAX(SUBSTRING(inv_no,8,4)) = SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)
                                THEN '$flg$'+SUBSTRING(CAST(SUBSTRING(inv_no,8,8)+100000001 as VARCHAR), 2, 8)
                        ELSE    '$flg$'+ SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)+'0001' END 
                        AS maxInv
                FROM    tb_cmb_inv
                WHERE   SUBSTRING(inv_no, 1,11) = '$flg$'+SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)
                GROUP BY inv_no
                union all
                select '$flg$'+ SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)+'0001' as maxInv
         ) a
    </select>
    
	<!-- Combined Invoice Header 정보 생성   -->
    <insert id="insertCMB_INV_INFO" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		INSERT INTO tb_cmb_inv(
            cmb_inv_seq,        frt_ask_clss_cd,       sell_buy_tp_cd, 
            inv_no,             inv_sts_cd,            trdp_cd,           
            air_sea_clss_cd,    bnd_clss_cd,           tax_bil_flg,        
			inv_dt,             clt_due_dt,            inv_iss_dt,           inv_fm_dt,          
		    inv_to_dt,          inv_rmk,
            buy_inv_no,         slip_no,                                  
            inv_aply_curr_cd,   inv_xcrt_dt,           inv_aply_xcrt,     
            inv_amt,            inv_krw_amt,           inv_sum_amt,          inv_vat_amt,    
            bal_amt,            bal_vat_amt,                                                                          
            rgst_usrid,         rgst_ofc_cd,           rgst_tms,             ofc_cd,       dept_cd,
            modi_usrid,         modi_ofc_cd,           modi_tms,             delt_flg
        )VALUES(
            #cmb_inv_seq#,      #frt_ask_clss_cd#,     #sell_buy_tp_cd#,
            #inv_no#,           #inv_sts_cd#,          #trdp_cd#,           
            #air_sea_clss_cd#,  #bnd_clss_cd#,         #tax_bil_flg#,      
		    #inv_dt#,           #clt_due_dt#,          CONVERT(VARCHAR, getDate(), 112),  CONVERT(VARCHAR, getDate(), 112),          
		    #inv_to_dt#,        #inv_rmk#,           
            #buy_inv_no#,       #slip_no#,
            #inv_aply_curr_cd#, #inv_xcrt_dt#,         1,  
            #inv_amt#,          #inv_krw_amt#,         #inv_sum_amt#,       #inv_vat_amt#,     
            #bal_amt#,          #bal_vat_amt#,         
            #proc_usrid#,       #proc_ofccd#,          getdate(),            #ofc_cd#,    #proc_dept_cd#,
            #proc_usrid#,       #proc_ofccd#,          GETUTCDATE(),            'N'
        )
	</insert>
	
	<!-- Combined Invoice를 업데이트함   -->
    <update id="updateCMB_INV_INFO" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_cmb_inv
           SET  tax_bil_flg      = #tax_bil_flg#,        inv_dt     = #inv_dt#,           clt_due_dt = #clt_due_dt#,          
                inv_rmk          = #inv_rmk#,            buy_inv_no = #buy_inv_no#,       slip_no    = #slip_no#,                                  
                inv_aply_curr_cd = #inv_aply_curr_cd#,   inv_xcrt_dt= #inv_xcrt_dt#,      inv_aply_xcrt= #inv_aply_xcrt#,     
                inv_amt          = #inv_amt#,            inv_krw_amt= #inv_krw_amt#,      inv_sum_amt  = #inv_sum_amt#,      inv_vat_amt = #inv_vat_amt#,    
                bal_amt          = #bal_amt#,            bal_vat_amt= #bal_vat_amt#,      
				dept_cd     	 = #proc_dept_cd#,                                                          
                modi_usrid  	 = #proc_usrid#,         modi_ofc_cd = #proc_ofccd#,      modi_tms = GETUTCDATE()
         WHERE  cmb_inv_seq 	 = #cmb_inv_seq#
    </update>
	
	<!--Combined Invoice 삭제   -->
	<delete id="deleteCMB_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		DELETE FROM tb_cmb_inv
		      WHERE cmb_inv_seq = #cmb_inv_seq#
	</delete>
	
	<!-- 통합인보이스 내용조회   -->
	<select id="selectCMB_INV_READ" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_INV_READ  */
        SELECT  cmb.cmb_inv_seq,        cmb.frt_ask_clss_cd,       cmb.sell_buy_tp_cd,       cdt.cd_nm AS sell_buy_tp_nm,
                cmb.inv_no,             cmb.tax_bil_flg,
                cmb.inv_sts_cd,         cst.cd_nm   AS inv_sts_nm,
                cmb.trdp_cd,            trd.locl_nm AS trdp_nm,
                cmb.inv_dt,             cmb.clt_due_dt,            cmb.inv_iss_dt,           cmb.inv_fm_dt,          
                cmb.inv_to_dt,          cmb.inv_rmk,
                cmb.buy_inv_no,         cmb.slip_no,                                  
                cmb.inv_xcrt_dt,        cmb.inv_aply_xcrt,
                cmb.inv_aply_curr_cd,   cmb.inv_amt,               cmb.inv_vat_amt,          cmb.inv_sum_amt,         cmb.inv_krw_amt,            
                cmb.frgn_curr_cd,       cmb.frgn_amt,              cmb.frgn_vat_amt,         cmb.frgn_sum_amt, 
		        (cmb.inv_amt-cmb.frgn_amt)         AS org_amt,     (cmb.inv_vat_amt-cmb.frgn_vat_amt) AS org_vat_amt,     
		        (cmb.inv_sum_amt-cmb.frgn_sum_amt) AS org_sum_amt,
		        cmb.modi_usrid AS proc_usrid,     dpt.cd_nm AS proc_dept_nm,
		        cmb.ofc_cd
		
          FROM  tb_cmb_inv cmb
          JOIN  tb_trdp trd
            ON  cmb.trdp_cd = trd.trdp_cd
            
          JOIN  tb_com_cd_dtl cdt
            ON  cmb.sell_buy_tp_cd = cdt.cd_val AND cdt.com_cd = 'C030'
            
          JOIN  tb_com_cd_dtl cst
            ON  cmb.inv_sts_cd     = cst.cd_val AND  cst.com_cd = 'C048'
		
          JOIN  tb_com_cd_dtl dpt
            ON  dpt.cd_val = cmb.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'
		
		 WHERE  cmb.inv_no = #f_inv_no#
	</select>
	
	<!-- Combined Invoice에 해당하는 Invoice 정보를 조회함   -->
	<select id="selectCMB_SUB_INV_LIST" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_SUB_INV_LIST  */
		 SELECT  idt.inv_seq,        idt.inv_no,          idt.inv_aply_curr_cd,   idt.inv_amt,   idt.inv_vat_amt,   idt.inv_sum_amt,
		         idt.frgn_curr_cd,   idt.frgn_sum_amt,
                 idt.inv_sum_amt-(idt.frgn_sum_amt*idt.inv_aply_xcrt) AS locl_amt
               , idt.inv_dt, idt.buy_inv_no, TMP.ET_DT_TM, TMP.BL_NO, TMP.MBL_NO
               , inv.ofc_cd
               , DEPT.CD_NM + ' / ' + USR.USRID AS DEPT_NM
		   FROM  tb_inv inv
		   JOIN  tb_inv_dtl idt
		 	 ON  inv.inv_seq = idt.inv_seq
LEFT OUTER JOIN (
				  SELECT  FRT.INV_SEQ
						, CASE WHEN FRT.BND_CLSS_CD = 'O' 
							   THEN MAX(BL.ETD_DT_TM) 
							   ELSE MAX(BL.ETA_DT_TM) 
						   END AS ET_DT_TM
						, MAX(BL.BL_NO) AS BL_NO
						, MAX(MBL.BL_NO) AS MBL_NO
					FROM  TB_FRT FRT 
		 LEFT OUTER JOIN  TB_INTG_BL BL ON FRT.INTG_BL_SEQ = BL.INTG_BL_SEQ AND BL.DELT_FLG = 'N'
		 LEFT OUTER JOIN  TB_INTG_BL_RLT RLT ON BL.INTG_BL_SEQ = RLT.INTG_BL_SEQ AND RLT.DELT_FLG = 'N'
		 LEFT OUTER JOIN  TB_INTG_BL MBL ON RLT.RLT_INTG_BL_SEQ = MBL.INTG_BL_SEQ AND MBL.DELT_FLG = 'N'
				   WHERE  FRT.DELT_FLG = 'N'
				GROUP BY  FRT.INV_SEQ, FRT.BND_CLSS_CD
				) TMP ON inv.INV_SEQ = TMP.INV_SEQ 
LEFT OUTER JOIN  TB_USR USR ON USR.USR_TP = 'I' AND idt.RGST_USRID = USR.USRID
LEFT OUTER JOIN  TB_COM_CD_DTL DEPT ON DEPT.COM_CD = 'C056' AND USR.DEPT_CD = DEPT.CD_VAL
		 WHERE  inv.cmb_inv_seq = #cmb_inv_seq#
		ORDER BY inv_no ASC
	</select>
	
    <!--하위 Invoice인 경우 통합 Invoice의 키값을 업데이트함  -->
    <update id="updateINV_REL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvRltVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = #cmb_inv_seq#,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq# 
    </update>
	
	<!-- 하위 Invoice 목록에서 invoice를 삭제함   -->
    <update id="deleteINV_REL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvRltVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = NULL,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq# 
    </update>
	
	
	
	
	
	
	<!-- 등록된 Combined Invoice List를 조회함  -->
    <select id="selectCMB_INV_LIST" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_INV_LIST  */
        SELECT  cmb.cmb_inv_seq,        cmb.frt_ask_clss_cd,       cmb.sell_buy_tp_cd,
                cmb.inv_no,             cmb.inv_sts_cd,            cst.cd_nm AS inv_sts_nm,
                cmb.trdp_cd,            trd.locl_nm AS trdp_nm,
                cmb.air_sea_clss_cd,    cmb.bnd_clss_cd,           cmb.tax_bil_flg,        
                cmb.inv_dt,             cmb.clt_due_dt,            cmb.inv_iss_dt,           cmb.inv_fm_dt,          
                cmb.inv_to_dt,          cmb.inv_rmk,
                cmb.buy_inv_no,         cmb.slip_no,
                cmb.inv_aply_curr_cd,   cmb.inv_xcrt_dt,           cmb.inv_aply_xcrt,     
                cmb.inv_amt,            cmb.inv_krw_amt,           cmb.inv_sum_amt,          cmb.inv_vat_amt,    
                cmb.frgn_curr_cd,       cmb.frgn_amt,              cmb.frgn_vat_amt,         cmb.frgn_sum_amt, 
                cmb.pay_amt,            cmb.pay_vat_amt,           cmb.pay_frgn_amt,         cmb.pay_frgn_vat_amt, 
                cmb.bal_amt,            cmb.bal_vat_amt,           cmb.bal_frgn_amt,         cmb.bal_frgn_vat_amt,
				cmb.modi_usrid AS proc_usrid,   
				cmb.ofc_cd,
				dpt.cd_nm AS proc_dept_nm,
				(SELECT SUM(INV_SUM_AMT)
				   FROM TB_FRT F
				       ,TB_FRT_CD FC
				       ,TB_INV I
				  WHERE F.FRT_CD = FC.FRT_CD
				    AND F.INV_SEQ = I.INV_SEQ
				    AND I.CMB_INV_SEQ = cmb.CMB_INV_SEQ
				    AND FC.FRT_CLSS_CD = 'WAF'
				 ) AS wfg_amt
          FROM  tb_cmb_inv cmb
          JOIN  tb_trdp trd
            ON  cmb.trdp_cd = trd.trdp_cd
          JOIN  tb_com_cd_dtl cst
            ON  cmb.inv_sts_cd     = cst.cd_val AND  cst.com_cd = 'C048'
		  JOIN  tb_com_cd_dtl dpt
		    ON  dpt.cd_val = cmb.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'
		 WHERE  
			<isEqual property="f_date_cd" compareValue="B">
				cmb.inv_dt       BETWEEN  #f_sel_strdt# AND #f_sel_enddt#
			</isEqual>
			<isNotEqual property="f_date_cd" compareValue="B">
				cmb.clt_due_dt   BETWEEN  #f_sel_strdt# AND #f_sel_enddt#
			</isNotEqual>
			<isNotEmpty property="f_slip_yn">
				<isEqual property="f_slip_yn" compareValue="Y">
					AND  cmb.slip_no IS NOT NULL
				</isEqual>
				<isEqual property="f_slip_yn" compareValue="N">
					AND  cmb.slip_no IS NULL
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="f_air_sea_clss_cd">
				AND  cmb.air_sea_clss_cd = #f_air_sea_clss_cd#
			</isNotEmpty>
			<isNotEmpty property="f_sell_buy_tp_cd">
				AND  cmb.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
			</isNotEmpty>
			<isNotEmpty property="f_inv_sts_cd">
				AND  cmb.inv_sts_cd = #f_inv_sts_cd#
			</isNotEmpty>
			<isNotEmpty property="f_inv_no">
			   AND  cmb.inv_no = #f_inv_no#
			</isNotEmpty>
			<isNotEmpty property="f_trdp_cd">
			   AND  cmb.trdp_cd= #f_trdp_cd#
			</isNotEmpty>
			<isNotEmpty property="f_dpt_cd">
			   AND  cmb.dept_cd = #f_dpt_cd#
			</isNotEmpty>
			<isNotEmpty property="f_pic_id">
			   AND  cmb.modi_usrid = #f_pic_id#
			</isNotEmpty>
    </select>
	
	<!-- Combined Invoice 정보를 회계쪽(KICOM) 과 인터페이스    -->
    <procedure id="insertCMB_INVOICE_INTF" parameterClass="HashMap">
         { CALL SP_T_INVOICE_INTERFACE(#inv_no#, #sell_buy_tp_cd#) } 
    </procedure>
    
    
    
    <!-- Freight 테이블에 Invoice 정보를 초기화함   -->
    <update id="updateINV_REL_RESET" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = null,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq# 
    </update>
	
<!-- Combined Invoice 추가 끝  -->






	<!-- PAID HISTORY   -->
    <select id="searchPaidHistory" parameterClass="java.util.HashMap" resultClass="PaidVO">
		/*  AccInvInvoiceSQL.xml > searchPaidHistory  */
        SELECT mst.TRDP_CD AS BILL_TO_CD
		      ,(SELECT LOCL_NM FROM TB_TRDP WHERE TRDP_CD = mst.TRDP_CD) AS BILL_TO_NM
		      ,inv_dtl.INV_SUM_AMT
		      ,inv_dtl.PAY_AMT
		      ,inv_dtl.BAL_AMT
		      ,mst.POST_DT
		      ,dtl.CURR_CD
		      ,mst.CLR_DT
		      ,mst.BANK_SEQ
		      ,(SELECT BANK_NM FROM TB_BANK WHERE BANK_SEQ = mst.BANK_SEQ) AS BANK_NM
		      ,mst.VOID_DT		      
		      ,mst.CHK_NO
		      ,dtl.TTL_PAY_AMT
		      ,mst.RMK
		      ,mst.JNR_TP
		  FROM TB_JNR_DTL dtl
		      ,TB_JNR_MST mst
		      ,TB_INV_DTL inv_dtl
		 WHERE 1 = 1
		   AND dtl.JNR_NO   	= mst.JNR_NO
		   AND dtl.INV_SEQ 		= inv_dtl.INV_SEQ
		   AND mst.DELT_FLG 	= 'N'
		   AND dtl.DELT_FLG 	= 'N'
		   AND inv_dtl.DELT_FLG = 'N'
		   AND dtl.INV_SEQ 	    = #f_inv_seq#
    </select>
    
    
    
    
    
    <select id="selectPgmBtnRole" parameterClass="java.util.HashMap" resultClass="com.clt.apps.opusbase.system.role.dto.RoleBtnVO">
		/*  AccInvInvoiceSQL.xml > selectPgmBtnRole  */
		 SELECT TOP 1
		 		A.MNU_NM AS TOP_MNU_NM
		 	  , A.MNU_SEQ AS TOP_MNU_SEQ
		 	  , B.MNU_NM AS SUB_MNU_NM
		 	  , B.MNU_SEQ AS SUB_MNU_SEQ
		 	  , D.PGM_NM AS PGM_MNU_NM
		 	  , D.PGM_SEQ AS PGM_MNU_SEQ
			  , E.ATTR1, E.ATTR2, E.ATTR3, E.ATTR4, E.ATTR5
			  , E.ATTR6, E.ATTR7, E.ATTR8, E.ATTR9
		   FROM TB_MNU A 
LEFT OUTER JOIN TB_MNU B ON A.MNU_SEQ = B.PRNT_MNU_SEQ
LEFT OUTER JOIN TB_MNU_ROLE C ON B.MNU_SEQ = C.MNU_SEQ
LEFT OUTER JOIN TB_PGM D ON C.MNU_SEQ = D.MNU_SEQ
		   JOIN TB_PGM_ROLE E ON D.PGM_SEQ = E.PGM_SEQ AND C.ROLE_CD = E.ROLE_CD
		  WHERE 1=1
		    AND C.ROLE_CD  = #role_cd#
		    AND D.PGM_URL  = #pgm_url#
		    AND D.USE_FLG  = 'Y'
	   ORDER BY A.SRT_SEQ, B.MNU_SEQ, D.SRT_SEQ
    </select>
    
    
    
    
    <!-- Invoice 일 환율조회    -->
    <select id="getCurrExchDay" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getCurrExchDay  */
    	SELECT DT_CLSS_CD
		      ,CONVERT(VARCHAR,XCH_RT_UT) AS XCH_RT_UT
		  FROM tb_inv_xcrt
		 WHERE 1 = 1
		   AND FM_CURR_CD = #frCurr#
		   AND TO_CURR_CD = #toCurr#
		   AND APLY_FM_DT BETWEEN #postDt# AND #postDt#
		   AND APLY_TO_DT BETWEEN #postDt# AND #postDt#
		   AND DT_CLSS_CD = 'D'
		   AND DELT_FLG = 'N'
		   
    </select>
    
    <!-- Invoice 월 환율조회    -->
    <select id="getCurrExchMon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getCurrExchMon  */
    	SELECT DT_CLSS_CD
		      ,CONVERT(VARCHAR,XCH_RT_UT) AS XCH_RT_UT
		  FROM tb_inv_xcrt
		 WHERE 1 = 1
		   AND FM_CURR_CD = #frCurr#
		   AND TO_CURR_CD = #toCurr#
		   AND APLY_FM_DT = #frDt#
		   AND APLY_TO_DT = #toDt#
		   AND DT_CLSS_CD = 'M'
		   AND DELT_FLG = 'N'
		   
    </select>
    
    
    <!-- Invoice No 중복체크    -->
    <select id="checkDupInvNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > checkDupInvNo  */
    	SELECT INV_NO
		  FROM TB_INV_DTL
		 WHERE INV_NO = #inv_no#
		   AND DELT_FLG = 'N'
		   
    </select>
    
    
    
    
    <!-- 마감 POST DATE 정보 조회  -->
    <select id="searchSlipPostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchSlipPostDate  */
    	<!-- 
    	SELECT isnull(MAX(POST_DT),'') AS POST_DT
    	  FROM TB_SLIP_MST
    	 WHERE SLIP_TP != 'SL'
    	   -->
    	 SELECT CONVERT(VARCHAR, dateadd(M, 1, isnull(MAX(POST_DT),'')) - datepart(day, dateadd(month, 1, isnull(MAX(POST_DT),''))), 112) AS POST_DT
    	  FROM TB_SLIP_MST
    	 WHERE SLIP_TP != 'SL'
    </select>
    
    <!-- CLOSE POST DATE 정보 조회  -->
    <select id="searchClosePostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchClosePostDate  */
    	<!--  
    	SELECT isnull(MAX(INV_POST_DT),'') AS POST_DT
    	  FROM TB_INV_DTL
    	 WHERE CLT_CMPL_FLG = 'Y'
    	  -->
    	SELECT CONVERT(VARCHAR, dateadd(M, 1, isnull(MAX(INV_POST_DT),'')) - datepart(day, dateadd(month, 1, isnull(MAX(INV_POST_DT),''))), 112) AS POST_DT
    	  FROM TB_INV_DTL D
    	  	   LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK 
    	  	   	ON D.INV_SEQ = BLCK.INV_SEQ1 AND D.INV_NO = BLCK.INV_NO1 
    	      ,TB_INV M
    	 WHERE D.INV_SEQ = M.INV_SEQ
    	   AND M.CMB_INV_SEQ IS NULL
    	   AND ISNULL(BLCK.CLT_CMPL_FLG1, D.CLT_CMPL_FLG) = 'Y'      
    	   AND ISNULL(D.DELT_FLG, 'N') = 'N'    	 
    </select>
    
    <!-- MAX(BLOCK POST DATE) 정보 조회  -->
    <select id="searchBlockPostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchBlockPostDate  */
    	/*
    		SELECT  MAX(isnull(BLOCK_DT,''))
    	 	FROM TB_INV_DTL 
    	 	WHERE DELT_FLG !='Y'
    	*/
    	 
    	 SELECT  isnull(MAX(isnull(BLOCK_DT,'')),'')
    	 FROM TB_INV_DTL_BLCK
    </select>
    
    <!-- MAX(JNR_DT DATE)  정보 조회  -->
    <select id="searchMaxJnrDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchMaxJnrDate  */
    	 SELECT  MAX(isnull(JNR_DT,''))
    	 FROM TB_JNR_MST 
    	 WHERE DELT_FLG !='Y'
    </select>
    
    <!-- Batch Print InvoiceList 조회한다.  -->
    <select id="searchBatchPrintList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBatchPrintList  */
		WITH INV_INFO AS (
			SELECT D.INV_SEQ				AS inv_seq
			      ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'S' THEN 'A/R'
			            WHEN MAX(M.SELL_BUY_TP_CD) IN ('C','D') THEN 'DB/CR'
			            WHEN MAX(M.SELL_BUY_TP_CD) = 'B' THEN 'A/P'	
			       END						AS inv_tp
			      ,MAX(M.SELL_BUY_TP_CD)    AS SELL_BUY_TP_CD
			      ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'S' THEN 1 ELSE 0 END AS AR_CNT
        		  ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'B' THEN 1 ELSE 0 END AS AP_CNT
			      ,MAX(D.INV_NO)			AS inv_no
			      ,MAX(F.INTG_BL_SEQ)		AS intg_bl_seq
			      ,MAX(F.OTH_SEQ)			AS oth_seq
			      ,MAX(F.WMS_SEQ)			AS wms_seq
			      ,(SELECT cnt_cd FROM TB_OFC WHERE OFC_CD = ISNULL( MAX(B.ref_ofc_cd), MAX(O.OFC_CD))) AS bl_cnt
			      ,ISNULL( MAX(B.ref_ofc_cd), MAX(O.OFC_CD)) AS bl_ofc
			      ,MAX(M.trdp_cd)			AS trdp_cd
			      ,MAX(D.INV_POST_DT)       AS inv_post_dt
			      ,MAX(D.INV_DT)            AS inv_dt
			      ,ISNULL(ISNULL( MAX(B.REF_NO), MAX(O.REF_NO)),MAX(W.DOC_REF_NO)) AS ref_no
			FROM TB_INV M 
			JOIN TB_INV_DTL D 
				ON M.INV_SEQ = D.INV_SEQ 
			JOIN TB_FRT F 
				ON D.INV_SEQ = F.INV_SEQ AND F.DELT_FLG = 'N' 
			LEFT JOIN TB_INTG_BL B 
				ON F.INTG_BL_SEQ = B.INTG_BL_SEQ AND B.DELT_FLG = 'N'
			LEFT JOIN TB_OTH_SALES O 
				ON F.OTH_SEQ = O.OTH_SEQ AND O.DELT_FLG = 'N'	
			LEFT JOIN TB_WM_DOC_MST W 
				ON F.WMS_SEQ = W.WM_DOC_SEQ AND W.DELT_FLG = 'N'	
			WHERE ISNULL(M.DELT_FLG,'N') = 'N'
			  AND ISNULL(D.DELT_FLG,'N') = 'N'
			  
			<isEqual property="prn_radio" compareValue="NO">
				<isEqual property="f_ap_yn" compareValue="Y">
					AND D.BUY_INV_NO BETWEEN #f_inv_no# AND #t_inv_no#
				  	AND M.SELL_BUY_TP_CD = 'B'
				</isEqual>
				<isEqual property="f_ap_yn" compareValue="N">
				  	AND D.INV_NO BETWEEN #f_inv_no# AND #t_inv_no#
				  	AND M.SELL_BUY_TP_CD in ('S','D','C')
				</isEqual>
			</isEqual>
			  
			<isEqual property="prn_radio" compareValue="DT">
				<isEqual property="date_clss_cd" compareValue="P">
			  		AND D.INV_POST_DT BETWEEN #f_strdt# AND #f_enddt#
			  	</isEqual>
			  	<isEqual property="date_clss_cd" compareValue="I">
			  		AND D.INV_DT BETWEEN #f_strdt# AND #f_enddt#
			  	</isEqual>
			  	
			  	<isEqual property="ap_not_ar_yn" compareValue="N">
				  	AND ( 1=2
			  		<isEqual property="sell_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD = 'S'
			  		</isEqual>
			  		<isEqual property="buy_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD = 'B'
			  		</isEqual>
			  		<isEqual property="dc_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD IN ('D','C')
			  		</isEqual>
			  		)
		  		</isEqual>
			</isEqual>
			  
			<isNotEmpty property="role_ofc_cd">
			  	AND M.OFC_CD = #role_ofc_cd#
			</isNotEmpty>
			  
			GROUP BY D.INV_SEQ		
		)
		
		SELECT * 
		  FROM INV_INFO
		 WHERE 1 = 1
			 <isEqual property="ap_not_ar_yn" compareValue="Y">
			   AND REF_NO IN (
		       		SELECT REF_NO
		       		FROM   (
			       			SELECT REF_NO, SUM(AR_CNT) AS AR_CNT, SUM(AP_CNT) AS AP_CNT
			       			FROM   INV_INFO
			       		 	GROUP BY REF_NO
			       			) INVAL
		       		WHERE AR_CNT = 0 AND AP_CNT != 0
		      	)
		       AND SELL_BUY_TP_CD = 'B'
			 </isEqual>
		
		<isEqual property="sort_radio" compareValue="D">
			<isEqual property="date_clss_cd" compareValue="P">
				ORDER BY INV_POST_DT ASC
			</isEqual>
			<isNotEqual property="date_clss_cd" compareValue="P">
				ORDER BY INV_DT ASC
			</isNotEqual>
		</isEqual>
		<isNotEqual property="sort_radio" compareValue="D">
			ORDER BY INV_NO ASC
		</isNotEqual>
    </select>
 
    <!-- AP Expense Other Branch Freight 목록 조회. INVOICE 정보   -->
    <select id="selectAPEXP_OTH_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPEXP_OTH_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,          
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,   
		         fr.frt_biz_clss_cd, fr.inv_vat_amt,     		 fr.inv_sum_amt,    
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.i_inv_seq as inv_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,		
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,	
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.inv_bal_amt,
				 fr.inv_aply_curr_cd,
				 fr.buy_inv_rcv,
				 fr.ref_ofc_cd
           FROM  (SELECT a.*, 
                         b.inv_seq as i_inv_seq,
           				 b.buy_inv_no as inv_no, 
           				 b.inv_dt,		
           				 b.inv_post_dt AS i_post_dt,	
           				 b.inv_due_dt,	
           				 b.inv_rmk,	
           				 b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 b.trdp_cd  AS inv_trdp_cd,	    
           				 b.trdp_nm  AS inv_trdp_cd_nm,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 b.buy_inv_rcv,
          				 b.ofc_cd AS ref_ofc_cd
                    FROM tb_frt a
                 LEFT JOIN TB_EXP_INV b ON a.reserve_field03 = b.inv_seq AND b.delt_flg = 'N'
                   WHERE  a.delt_flg 		= 'N'
                   	 AND  a.sell_buy_tp_cd  = 'B'
					 AND  a.delt_flg 		= 'N'
					 AND  a.reserve_field03	= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp   
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd   
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N' 
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_USR USR 
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt 
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'  
          WHERE  fr.delt_flg 		= 'N'
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  fr.reserve_field03	= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>
    
    
    
    
    
    
    <!-- A/P EXPENSE OTHER BRANCH 정보 INSERT   -->
    <insert id="insertEXP_OTH_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.ExpInvVO">
		INSERT INTO TB_EXP_INV(
            inv_seq,        		air_sea_clss_cd,			bnd_clss_cd,
            sell_buy_tp_cd,         frt_ask_clss_cd,            inv_no,           
            inv_sts_cd,    			trdp_cd,           			trdp_nm,        
			inv_dt,             	inv_post_dt,            	inv_due_dt,                    
		    buy_inv_no,          	inv_aply_curr_cd,			inv_xcrt_dt,
            inv_aply_xcrt,         	inv_amt,        			inv_sum_amt,                          
            bal_amt,           		ofc_cd,     
            rgst_usrid,         	rgst_ofc_cd,           		rgst_tms,              
            modi_usrid,         	modi_ofc_cd,           		modi_tms,             
            inv_rmk, 				buy_inv_rcv,	            terms,	
            delt_flg			
        )VALUES(
            #inv_seq#,      		#air_sea_clss_cd#,     		#bnd_clss_cd#,
            #sell_buy_tp_cd#,       #frt_ask_clss_cd#,          #inv_no#,           
            #inv_sts_cd#,  			#trdp_cd#,         			#trdp_nm#,      
		    #inv_dt#,           	#inv_post_dt#,          	#inv_due_dt#,        
		    #buy_inv_no#,        	#inv_aply_curr_cd#,     	#inv_xcrt_dt#,      
            #inv_aply_xcrt#,       	#inv_amt#,					#inv_sum_amt#,
            #bal_amt#,         		#ofc_cd#,  
            #proc_usrid#,       	#proc_ofccd#,          		getdate(),            
            #proc_usrid#,       	#proc_ofccd#,         		GETUTCDATE(),            
            #inv_rmk#,				#buy_inv_rcv#,				#terms#,
            'N'
        )
	</insert>
	
	<!-- A/P EXPENSE OTHER BRANCH 정보 UPDATE   -->
    <update id="updateEXP_OTH_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.ExpInvVO">
    	UPDATE TB_EXP_INV
    	   SET trdp_cd 			= #trdp_cd#
    	      ,trdp_nm 			= #trdp_nm#
    	      ,inv_dt  			= #inv_dt#
    	      ,inv_post_dt 		= #inv_post_dt#
    	      ,inv_due_dt 		= #inv_due_dt#
    	      ,buy_inv_no 		= #buy_inv_no#
    	      ,inv_aply_curr_cd = #inv_aply_curr_cd#
    	      ,inv_amt 			= #inv_amt#
    	      ,inv_sum_amt 		= #inv_sum_amt#
			  ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
    	      ,inv_rmk 			= #inv_rmk#
    	      ,buy_inv_rcv 		= #buy_inv_rcv#
    	      ,terms 			= #terms#
    	      ,modi_usrid 		= #proc_usrid#
    	      ,modi_ofc_cd 		= #proc_ofccd#
    	      ,modi_tms 		= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#
    	  
    </update>
    
    
    
    <!-- A/P EXPENSE OTHER BRANCH FREIGHT 등록   -->
    <insert id="insertEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,			
    			reserve_field03,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt					
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)
    	-->    	
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(
			
    			reserve_field03,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,		
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,		
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,	
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt				
    	) SELECT

    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#
    	
    </insert>
    
    
    
    <!--FREIGHT INVOICE EXPENSE 정보 포함 테이블 수정   -->
    <update id="updateEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND frt_seq 		   = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>
    
    
    
    <!--FREIGHT EXPENSE 용 테이블 삭제   -->
    <update id="deleteEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	   AND rgst_ofc_cd	 = #proc_ofccd#
    	   AND frt_seq 		 = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>
    
    
    
    <!--FREIGHT INVOICE EXPENSE 정보중 INV_CURR_CD 수정   -->
    <update id="updateEXP_OTH_FRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	 WHERE 1=1
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND frt_seq 		   = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>
    
    
    <!--EXP INVOICE DTL 테이블 삭제   -->
    <update id="deleteINV_EXP_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_EXP_INV
    	   SET DELT_FLG = 'Y'
    	 WHERE inv_seq = #f_inv_seq#
    </update>
    
    
    
    
    
    
    
    
    <!-- InvoiceList 조회  -->
    <select id="searchExpenseOBList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchExpenseOBList  */
		SELECT 	mst.inv_seq
			   ,MAX(mst.inv_no) 			AS inv_no
		       ,'A/P' 						AS inv_tp
		       ,MAX(mst.inv_post_dt)		AS post_dt
		       ,MAX(mst.trdp_cd)  			AS trdp_cd
		       ,MAX(mst.trdp_nm)  			AS trdp_nm
		       ,MAX(mst.inv_sum_amt)  		AS inv_sum_amt
		       ,MAX(mst.pay_amt)  			AS pay_amt
		       ,MAX(mst.bal_amt)			AS bal_amt
		       ,CASE WHEN MAX(mst.bal_amt) = 0 THEN '' 
		             ELSE datediff(day, MAX(mst.INV_DUE_DT), getdate()) 
		        END AS over_due
		       ,MAX(mst.inv_due_dt)			AS inv_due_dt
		       ,MAX(mst.buy_inv_no)    	 	AS vnd_inv_no
		       ,MAX(mst.ofc_cd)				AS ofc_cd
		       ,MAX(mst.inv_aply_curr_cd)	AS inv_aply_curr_cd
		       ,MAX(mst.rgst_usrid)			AS rgst_usrid
		       ,MAX(mst.rgst_tms)			AS rgst_tms
		       ,MAX(mst.modi_usrid)			AS modi_usrid
		       ,MAX(mst.modi_tms)			AS modi_tms
		       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		 FROM TB_EXP_INV mst 
		LEFT JOIN TB_FRT frt 
			ON mst.inv_seq = frt.reserve_field03
		WHERE mst.DELT_FLG = 'N'
		<dynamic>
			AND mst.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
			AND mst.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
			AND mst.sell_buy_tp_cd  = 'B'
			<isNotNull property="s_bill_to_cd">
				AND mst.trdp_cd = #s_bill_to_cd#
			</isNotNull>
			<isNotNull property="s_ofc_cd">
				AND mst.ofc_cd = #s_ofc_cd#
			</isNotNull>
			<isNotNull property="s_inv_no">
				AND mst.buy_inv_no LIKE '%' + #s_inv_no# + '%'
			</isNotNull>
			<isNotNull property="s_inv_seq">
				AND mst.inv_seq = #s_inv_seq#
			</isNotNull>
			<isNotEqual property="s_amt_to" compareValue="0">
				AND mst.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
			</isNotEqual>
		</dynamic>
		GROUP BY mst.inv_seq
		ORDER BY rgst_tms desc, post_dt, inv_no
		
    </select>
    
    
    
    
    <!-- InvoiceList 조회  -->
    <select id="searchExpenseListOB_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchExpenseListOB_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM(	
				SELECT 	mst.inv_seq
					   ,MAX(mst.inv_no) 			AS inv_no
				       ,'A/P' 						AS inv_tp
				       ,MAX(mst.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(mst.trdp_nm)  			AS trdp_nm
				       ,MAX(mst.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(mst.pay_amt)  			AS pay_amt
				       ,MAX(mst.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(mst.bal_amt) = 0 THEN '' 
				             ELSE datediff(day, MAX(mst.INV_DUE_DT), getdate()) 
				        END AS over_due
				       ,MAX(mst.inv_due_dt)			AS inv_due_dt
				       ,MAX(mst.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(mst.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				 FROM TB_EXP_INV mst 
				LEFT JOIN TB_FRT frt 
					ON mst.inv_seq = frt.reserve_field03
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					AND mst.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					AND mst.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					AND mst.sell_buy_tp_cd  = 'B'
					<isNotNull property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotNull>
					<isNotNull property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotNull>
					<isNotNull property="s_inv_no">
						AND mst.buy_inv_no LIKE '%' + #s_inv_no# + '%'
					</isNotNull>
					<isNotNull property="s_inv_seq">
						AND mst.inv_seq = #s_inv_seq#
					</isNotNull>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND mst.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY mst.inv_seq
			) x
		
    </select>
    
    
    
    
    <!--INVOICE POST DATE A/P EXPENSE OTHER BRANCH 수정   -->
    <update id="updateEXP_INV_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_EXP_INV
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>
    
    
    
    <!--INVOICE POST DATE A/P EXPENSE OTHER BRANCH 수정   -->
    <update id="updateEXP_FRT_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_FRT
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE reserve_field03 = #inv_seq#
    </update>
    
    
    
    
    <!--A/P EXPENSE INVOICE OTHER BRANCH LIST 삭제시 FREIGHT 테이블 수정   -->
    <update id="deleteEXPOB_INV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	DELETE FROM TB_FRT
    	 WHERE reserve_field03 = #inv_seq# 
    </update>
    
    
    <!--INVOICE LIST OTHER BRANCH 삭제   -->
    <update id="deleteEXPOB_FRT_INVLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_EXP_INV
    	   SET DELT_FLG = 'Y'
    	 WHERE inv_seq = #inv_seq#
    </update>
    
    
    
    <!-- 저정된 FREIGHT 정보를 조회한다.   -->
    <select id="selectExFrtList" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO" resultClass="FrtVO">
		/*  AccInvInvoiceSQL.xml > selectExFrtList  */
    	SELECT ISNULL(INV_AMT, 0)		AS INV_AMT 
		      ,ISNULL(INV_VAT_AMT, 0) 	AS INV_VAT_AMT
		      ,ISNULL(INV_SUM_AMT, 0) 	AS INV_SUM_AMT
		      ,ISNULL(CR_AMT, 0) 	  	AS CREDIT_AMT
		  FROM TB_FRT
		 WHERE INV_SEQ = #inv_seq#
		   AND ISNULL(DELT_FLG,'N') = 'N'
    </select>
    
    <!-- 20130401 OJG   -->
    <select id="searchInvoicePayAmt" parameterClass="HashMap" resultClass="String">
    	SELECT SUM(isnull(PAY_AMT, 0)) 
    	  FROM tb_inv_dtl 
    	 WHERE inv_seq = #inv_seq# 
    	     AND DELT_FLG = 'N'
    </select>
    <!-- 20130401 OJG   -->
    
    <!-- invoice History Search  -->
    <select id="selectDefaultInvoiceHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisVO">
		SELECT 
			CASE WHEN INV.SELL_BUY_TP_CD !='B' THEN  DTL.INV_NO
				ELSE DTL.BUY_INV_NO
			END AS INV_NO,	
			DTL.INV_SUM_AMT,
			DTL.INV_APLY_CURR_CD,
			DTL.INV_POST_DT,
			DTL.INV_DT,
			DTL.INV_DUE_DT,
			INV.TRDP_CD,
			TP.LOCL_NM TRDP_NM,
			ISNULL(DTL.PAY_AMT, 0) AS PAY_AMT,
			DTL.DELT_FLG	
		FROM TB_INV INV
		 LEFT OUTER JOIN TB_INV_DTL DTL ON DTL.INV_SEQ = INV.INV_SEQ
		 LEFT OUTER JOIN TB_TRDP TP ON  INV.TRDP_CD = TP.TRDP_CD AND TP.DELT_FLG = 'N'
		WHERE  DTL.INV_SEQ = #inv_seq# 
    </select>
    
    <select id="selectInvoiceHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisVO">
    	SELECT 
			MST.INV_SEQ 						AS INV_SEQ,
			MST.MODI_SEQ 						AS MODI_SEQ,
			MST.INV_NO							AS INV_NO,
			isnull(MST.INV_SUM_AMT,  0) 		AS INV_SUM_AMT,
			MST.INV_POST_DT						AS INV_POST_DT,
			MST.INV_DT							AS INV_DT,
			MST.INV_DUE_DT						AS INV_DUE_DT,
			MST.TRDP_CD							AS TRDP_CD,
			TP.LOCL_NM							AS TRDP_NM,
			MST.MODI_USRID						AS MODI_USRID,
			MST.MODI_OFC_CD						AS MODI_OFC_CD,
			CONVERT(VARCHAR(10),MST.MODI_TMS,110)+' '+CONVERT(VARCHAR(5),MST.MODI_TMS,108) AS MODI_TMS,
			CASE WHEN MST.INV_SEQ LIKE 'AR%' OR MST.INV_SEQ LIKE 'AP%' OR MST.INV_SEQ LIKE 'DC%' THEN 'Y' ELSE 'N' END MIG_YN
    	  FROM TB_INV_HIS_MST MST
    	  	LEFT OUTER JOIN  tb_trdp   tp   
		     ON  MST.trdp_cd = tp.trdp_cd
    	 WHERE inv_seq = #inv_seq# 
    	 ORDER BY MODI_SEQ DESC
    </select>
    
    <select id="selectInvoiceDetailHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
    	SELECT 
    		INV_SEQ
			,MODI_SEQ
			,DTL_SEQ
			,SELL_BUY_TP_CD
			,FRT_CD
			,FRT_CD_NM
			,FRT_TERM_CD
			,(SELECT CD_NM FROM tb_com_cd_dtl x WHERE  x.CD_VAL = APLY_UT_CD  AND  x.delt_flg = 'N' AND x.COM_CD ='S004') AS APLY_UT_CD
			,CNTR_TPSZ_CD
			,QTY
			,RU
			,INV_AMT
			,INV_VAT_AMT
			,RAT_CURR_CD
			,INV_XCRT
			,INV_SUM_AMT
			,AGENT_AMT
			,CR_AMT
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
			,INV_POST_DT
			,(SELECT BL_NO FROM TB_INTG_BL 
				WHERE INTG_BL_SEQ = (SELECT MAX(INTG_BL_SEQ) FROM TB_FRT 
				WHERE inv_seq = #inv_seq# )) BL_NO
    	  FROM TB_INV_HIS_DTL 
    	 WHERE inv_seq = #inv_seq# 
    	  AND modi_seq = #modi_seq# 
    </select>


	<select id="selectFrtForInvHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
		SELECT 
			fr.frt_seq,
			fr.sell_buy_tp_cd,
			fr.rat_curr_cd,
			fr.frt_cd,
			CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
				ELSE fr.frt_cd_nm
			END AS frt_cd_nm,
			fr.trdp_cd,
			tp.eng_nm AS trdp_nm,
			tp.trdp_tp_cd,
			fr.aply_ut_cd,
			fr.cntr_tpsz_cd,
			CAST(CAST(fr.qty AS float )  AS varchar) AS qty,       
			fr.scg_incl_flg,
			fr.frt_term_cd,             
			CASE WHEN fr.sell_buy_tp_cd ='C' THEN fr.agent_ru
				ELSE fr.ru
			END AS ru,
			fr.inv_curr_cd,     
			fr.inv_xcrt,
			fr.inv_xcrt_dt,    
			isnull(fr.inv_amt,  0) AS inv_amt,
			isnull(fr.agent_amt,0) AS agent_amt,	
			isnull(fr.cr_amt,0)    AS cr_amt,
			fr.inv_vat_amt,
			fr.inv_sum_amt,
			fr.perf_curr_cd,
			fr.perf_xcrt,
			fr.perf_amt,
			fr.perf_vat_amt,
			fr.frt_biz_clss_cd,
			fr.vat_rt,
			fr.vat_amt,
			fr.intg_bl_seq,
			fr.frt_ask_clss_cd,
			fr.trf_ctrt_no,
			fr.trf_dtl_seq,
			fr.auto_trf_flg,
			fr.inv_sts_cd,     
			fr.trf_cur_sum_amt,
			fr.inv_seq,
			fr.inv_post_dt,
			(SELECT MAX(modi_seq) FROM TB_INV_HIS_MST mst
				WHERE MST.INV_SEQ = FR.INV_SEQ
			) AS MODI_SEQ
		FROM TB_FRT FR
				LEFT OUTER JOIN tb_trdp tp ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N' 
				LEFT OUTER JOIN tb_frt_cd fd ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N' 	
		WHERE 1=1
		AND fr.INV_SEQ = #h_inv_seq#
		AND fr.DELT_FLG != 'Y'
		ORDER BY fr.frt_seq
    </select>
    
    <insert id="insertInvoiceHistory" parameterClass="HashMap">
        INSERT INTO TB_INV_HIS_MST(
			INV_SEQ,
			MODI_SEQ,
			INV_NO,
			INV_SUM_AMT,
			INV_POST_DT,
			INV_DT,
			INV_DUE_DT,
			TRDP_CD,
			RGST_USRID,
			RGST_OFC_CD,
			RGST_TMS,
			MODI_USRID,
			MODI_OFC_CD,
			MODI_TMS
		) SELECT
			#h_inv_seq#,   
			(SELECT  isnull(max(modi_seq)+1, 1) FROM  TB_INV_HIS_MST WHERE INV_SEQ = #h_inv_seq#),
			#h_inv_no#,
			#h_amt_tot#,			
			REPLACE(#h_post_dt#,'-',''),			
			REPLACE(#h_inv_dt#,'-',''),			
			REPLACE(#h_due_dt#,'-',''),			
			#h_trdp_cd#,			
			#rgst_usrid#,			
			#rgst_ofc_cd#,			
			getdate(),
			#rgst_usrid#,			
			#modi_ofc_cd#,			
			GETUTCDATE()
    </insert>
    
    <insert id="insertInvoiceDetailHistory" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
       INSERT INTO TB_INV_HIS_DTL(
			INV_SEQ,
			MODI_SEQ,
			DTL_SEQ,
			SELL_BUY_TP_CD,
			FRT_CD,
			FRT_CD_NM,
			FRT_TERM_CD,
			APLY_UT_CD,
			CNTR_TPSZ_CD,
			QTY,
			RU,
			INV_AMT,
			INV_VAT_AMT,
			RAT_CURR_CD,
			INV_XCRT,
			INV_SUM_AMT,
			AGENT_AMT,
			CR_AMT,
			DELT_FLG,
			RGST_USRID,
			RGST_OFC_CD,
			RGST_TMS,
			MODI_USRID,
			MODI_OFC_CD,
			MODI_TMS,
			INV_POST_DT
        )VALUES(			
        	#inv_seq#,
			#modi_seq#,
			#dtl_seq#,
			#sell_buy_tp_cd#,
			#frt_cd#,
			#frt_cd_nm#,
			#frt_term_cd#,
			#aply_ut_cd#,
			#cntr_tpsz_cd#,
			#qty#,
			#ru#,
			#inv_amt#,
			#inv_vat_amt#,
			#rat_curr_cd#,
			#inv_xcrt#,
			#inv_sum_amt#,
			#agent_amt#,
			#cr_amt#,
			#delt_flg#,
			#rgst_usrid#,
			#rgst_ofc_cd#,
			getdate(),
			#modi_usrid#,
			#modi_ofc_cd#,
			#modi_tms#,
			#inv_post_dt#
        )
    </insert>
    
    <insert id="insertInvoiceHistory_Master" parameterClass="HashMap">
        INSERT INTO tb_inv_his_mst(
			inv_seq,
			modi_seq,
			inv_no,
			inv_sum_amt,
			inv_post_dt,
			inv_dt,
			inv_due_dt,
			trdp_cd,
			rgst_usrid,
			rgst_ofc_cd,
			rgst_tms,
			modi_usrid,
			modi_ofc_cd,
			modi_tms
		) 
		SELECT  dtl.inv_seq,
				(SELECT  isnull(max(modi_seq)+1, 1) FROM  tb_inv_his_mst WHERE inv_seq = dtl.inv_seq),
				dtl.inv_no,
				dtl.inv_sum_amt,			
				CASE WHEN ISNULL(dtl.inv_post_dt, '') != ''
				     THEN substring(dtl.inv_post_dt, 5, 4) + substring(dtl.inv_post_dt, 1, 4)
				     ELSE dtl.inv_post_dt
				END,
				CASE WHEN ISNULL(dtl.inv_dt, '') != ''
				     THEN substring(dtl.inv_dt, 5, 4) + substring(dtl.inv_dt, 1, 4)
				     ELSE dtl.inv_dt
				END,			
				CASE WHEN ISNULL(dtl.inv_due_dt, '') != ''
				     THEN substring(dtl.inv_due_dt, 5, 4) + substring(dtl.inv_due_dt, 1, 4)
				     ELSE dtl.inv_due_dt
				END,			
				inv.trdp_cd,		
				#proc_usrid#,			
				#proc_ofccd#,			
				getdate(),
				dtl.modi_usrid,			
				dtl.modi_ofc_cd,			
				GETUTCDATE()
	     FROM tb_inv inv, tb_inv_dtl dtl	     
	    WHERE inv.inv_seq = dtl.inv_seq
	      AND dtl.inv_seq = #inv_seq#		
    </insert>
    
    <insert id="insertInvoiceHistory_Detail" parameterClass="HashMap">
        INSERT INTO tb_inv_his_dtl(
			inv_seq,
			modi_seq,
			dtl_seq,
			sell_buy_tp_cd,
			frt_cd,
			frt_cd_nm,
			frt_term_cd,
			aply_ut_cd,
			cntr_tpsz_cd,
			qty,
			ru,
			inv_amt,
			inv_vat_amt,
			rat_curr_cd,
			inv_xcrt,
			inv_sum_amt,
			agent_amt,
			cr_amt,
			delt_flg,
			rgst_usrid,
			rgst_ofc_cd,
			rgst_tms,
			modi_usrid,
			modi_ofc_cd,
			modi_tms
        )
        SELECT  frt.inv_seq,
				(SELECT  max(modi_seq) FROM  tb_inv_his_mst WHERE inv_seq = frt.inv_seq),
				RANK() OVER (ORDER BY frt.frt_seq),
				frt.sell_buy_tp_cd,
				frt.frt_cd,			
				frt.frt_cd_nm,			
				frt.frt_term_cd,			
				frt.aply_ut_cd,			
				frt.cntr_tpsz_cd,		
				frt.qty,
				frt.RU,
				frt.inv_amt,
				frt.inv_vat_amt,
				frt.rat_curr_cd,
				frt.inv_xcrt,
				frt.inv_sum_amt,
				frt.agent_amt,
				frt.cr_amt,
				frt.delt_flg,
				#proc_usrid#,			
				#proc_ofccd#,
				getdate(),
				frt.modi_usrid,
				frt.modi_ofc_cd,
				frt.modi_tms
	     FROM tb_frt frt
	    WHERE frt.inv_seq = #inv_seq#	
    </insert>


    <select id="selectBuyInvNoDupChk" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectBuyInvNoDupChk  */
		select count(*) 
		  from tb_inv_dtl x, tb_inv y
		  where x.inv_seq    = Y.inv_seq
		    and x.inv_seq   != #inv_seq#
		    and x.buy_inv_no = #buy_inv_no#
		    and y.trdp_cd    = #trdp_cd#
		    and x.delt_flg = 'N'
		    and y.delt_flg = 'N'
		    and x.buy_inv_no is not null
		    and x.buy_inv_no != ''
    </select>
    
    
    <select id="searchInvModiTms" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchInvModiTms  */
		SELECT MAX(MODI_TMS) AS modi_tms
		FROM (
			SELECT MODI_TMS
			  FROM TB_INV_DTL
			 WHERE INV_SEQ = #inv_seq#
		) INVAL
    </select>
    
    <select id="searchOffice_Post_Dt_Inv" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchOffice_Post_Dt_Inv  */
		select post_dt_inv 
		  from tb_ofc 
		 where ofc_cd = #ofc_cd#
    </select>
    
    <select id="searchTrdp_Cr_Term_Cd" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchTrdp_Cr_Term_Cd  */
		select cr_term_cd 
		  from tb_trdp 
		 where trdp_cd = #trdp_cd#
    </select>
    
    <select id="searchTrdp_Cr_Term_Dt" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > "searchTrdp_Cr_Term_Dt"  */
		select cr_term_dt 
		  from tb_trdp 
		 where trdp_cd = #trdp_cd#
    </select>
    
    <select id="searchCntrListByBlSeq" resultClass="java.util.HashMap"  parameterClass="java.lang.String">
		/*  AccInvInvoiceSQL.xml > "searchCntrListByBlSeq"  */
		SELECT CNTR_NO,CNTR.CNTR_TPSZ_CD FROM 
		TB_CNTR_LIST CNTR
		LEFT OUTER JOIN TB_INTG_BL BL ON BL.INTG_BL_SEQ = CNTR.INTG_BL_SEQ  AND BL.DELT_FLG !='Y'
		WHERE 
		BL.INTG_BL_SEQ = #value#
		AND CNTR.DELT_FLG !='Y'
		GROUP BY CNTR_NO,CNTR.CNTR_TPSZ_CD
		
		UNION ALL
		
		SELECT O_CNTR.CNTR_NO ,O_CNTR.CNTR_TPSZ_CD FROM
		TB_OTH_SALES_CNTR O_CNTR
		LEFT OUTER JOIN TB_OTH_SALES OTH ON OTH.OTH_SEQ = O_CNTR.OTH_SEQ AND OTH.DELT_FLG !='Y' 
		WHERE 
		OTH.OTH_SEQ = #value#
		GROUP BY O_CNTR.CNTR_NO,O_CNTR.CNTR_TPSZ_CD
		ORDER BY CNTR.CNTR_TPSZ_CD,CNTR_NO ASC
    </select>
    
    <select id="getDefaultDate" resultClass="java.lang.String" parameterClass="java.util.HashMap">
    /*  AccInvInvoiceSQL.xml > "getDefaultDate"  */
    
    select obrd_dt_tm from tb_intg_bl
	where intg_bl_seq = #f_intg_bl_seq#
    </select>
    
    <select id="getUnitCdClosing" resultClass="java.lang.String" parameterClass="java.util.HashMap">
    /*  AccInvInvoiceSQL.xml > "getUnitCdClosing"  */
    
    SELECT APLY_UT_CD from TB_FRT WHERE WMS_SEQ = #f_wms_seq# AND FRT_SEQ = #f_frt_seq#
    </select>
    
    <!-- Sub Code 조회시  -->
    <select id="selectCOM_CD_DTL_SUBCD_LIST_Closing" resultClass="com.clt.apps.fis.mdm.code.currency.dto.ComCdDtlVO" parameterClass="java.util.HashMap">
        /*  AccInvInvoiceSQL.xml > "selectCOM_CD_DTL_SUBCD_LIST_Closing"  */
        SELECT  com_cd,   cd_val,
                cd_nm,    srt_seq,   use_flg,      rmk
          FROM  tb_com_cd_dtl
         WHERE  delt_flg = 'N' AND com_cd = 'Z3' AND cd_val = #cd_val#
    </select>
    
</sqlMap>