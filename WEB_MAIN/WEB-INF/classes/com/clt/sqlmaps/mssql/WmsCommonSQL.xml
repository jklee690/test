<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
<sqlMap namespace="wms.common.all">
	<typeAlias alias="WMSCommonVO" 	type="com.clt.apps.fis.wms.common.dto.WMSCommonVO"/>
	<typeAlias alias="WHUnloadShtVO" 	type="com.clt.apps.fis.wms.common.dto.WHUnloadShtVO"/>
	<typeAlias alias="WHInbkItemVO" 	type="com.clt.apps.fis.wms.common.dto.WHInbkItemVO"/>
	<typeAlias alias="WHOutbkCondVO" 	type="com.clt.apps.fis.wms.common.dto.WHOutbkCondVO"/>
	<typeAlias alias="ManualAllcPopupListVO" 	type="com.clt.apps.fis.wms.common.dto.Grd01ManualAllcPopupListVO"/>
	<typeAlias alias="InvAdjustCondVO" 	type="com.clt.apps.fis.wms.common.dto.InvAdjustCondVO"/>
	<typeAlias alias="InvAdjustVO" 	type="com.clt.apps.fis.wms.common.dto.InvAdjustVO"/>

	<typeAlias alias="WHOutbkPrintOptionPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WHOutbkPrintOptionPopupVO"/>
	<typeAlias alias="WHBookingPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WHBookingPopupVO"/>
	<typeAlias alias="WHBookingInfoVO" 	type="com.clt.apps.fis.wms.common.dto.WHBookingInfoVO"/>
	<typeAlias alias="WarehouseLocVO" 	type="com.clt.apps.fis.wms.common.dto.WarehouseLocVO"/>
	
	<typeAlias alias="ContractItemCodeInfoVO" 	type="com.clt.apps.fis.wms.whoutbooking.dto.ContractItemCodeInfoVO"/>
	<typeAlias alias="ContractItemCodeInfoVO1" 	type="com.clt.apps.fis.wms.common.dto.ContractItemCodeInfoVO"/>
	
	<typeAlias alias="WHICListPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WHICListPopupVO"/>
	<typeAlias alias="UsersVO" 	type="com.clt.apps.fis.wms.common.dto.UsersVO"/>
	<typeAlias alias="Grd01SalesActivityListVO" 	type="com.clt.apps.fis.wms.common.dto.Grd01SalesActivityListVO"/>
	<typeAlias alias="CtrtChkPopUpVO" 	type="com.clt.apps.fis.wms.common.dto.CtrtChkPopUpVO"/>
	<typeAlias alias="CommonCodeInfoVO" 	type="com.clt.apps.fis.wms.common.dto.CommonCodeInfoVO"/>
	<typeAlias alias="Grd01FreightCAListVO" 	type="com.clt.apps.fis.wms.common.dto.Grd01FreightCAListVO"/>
	<typeAlias alias="CommodityVO" 	type="com.clt.apps.fis.wms.common.dto.CommodityVO"/>
	<typeAlias alias="TlEqVO" 	type="com.clt.apps.fis.wms.common.dto.TlEqVO"/>
	<typeAlias alias="RateLocationListVO" 	type="com.clt.apps.fis.wms.common.dto.RateLocationListVO"/>
	<typeAlias alias="FreightHstVO" 	type="com.clt.apps.fis.wms.common.dto.FreightHstVO"/>
	<typeAlias alias="WHOCListPopupByBookingInOutVO" 	type="com.clt.apps.fis.wms.common.dto.WHOCListPopupByBookingInOutVO"/>
	<typeAlias alias="FreightPopupVO" 	type="com.clt.apps.fis.wms.common.dto.FreightPopupVO"/>
	<typeAlias alias="CheckpointVO" 	type="com.clt.apps.fis.wms.common.dto.CheckpointVO"/>
	<typeAlias alias="WHOutStockSelectVO" 	type="com.clt.apps.fis.wms.common.dto.WHOutStockSelectVO"/>
	<typeAlias alias="Grd03WHInPackDefVO" 	type="com.clt.apps.fis.wms.common.dto.Grd03WHInPackDefVO"/>
	<typeAlias alias="MCLPChangePopupVO" 	type="com.clt.apps.fis.wms.common.dto.MCLPChangePopupVO"/>
	<typeAlias alias="Grd05FreightMgmtFrtMstVO" 	type="com.clt.apps.fis.wms.common.dto.Grd05FreightMgmtFrtMstVO"/>
	<typeAlias alias="TlFreightVO" 	type="com.clt.apps.fis.wms.common.dto.TlFreightVO"/>
	<typeAlias alias="WHLocBlockPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WHLocBlockPopupVO"/>
	<typeAlias alias="WarehouseLocVO" 	type="com.clt.apps.fis.wms.common.dto.WarehouseLocVO"/>
	<typeAlias alias="FreightSellBuyRouteVO" 	type="com.clt.apps.fis.wms.common.dto.FreightSellBuyRouteVO"/>
	<typeAlias alias="TlCustVO" 	type="com.clt.apps.fis.wms.common.dto.TlCustVO"/>
	<typeAlias alias="TlLocVO" 	type="com.clt.apps.fis.wms.common.dto.TlLocVO"/>
	<typeAlias alias="CheckpointVO" 	type="com.clt.apps.fis.wms.common.dto.CheckpointVO"/>
	<typeAlias alias="WHOutStockSelectVO" 	type="com.clt.apps.fis.wms.common.dto.WHOutStockSelectVO"/>
	<typeAlias alias="Grd03WHInPackDefVO" 	type="com.clt.apps.fis.wms.common.dto.Grd03WHInPackDefVO"/>
	<typeAlias alias="MCLPChangePopupVO" 	type="com.clt.apps.fis.wms.common.dto.MCLPChangePopupVO"/>
	
	<typeAlias alias="ContractOrderConVO" 	type="com.clt.apps.fis.wms.common.dto.ContractOrderConVO"/>
	
	<typeAlias alias="TlCustVO" 	type="com.clt.apps.fis.wms.common.dto.TlCustVO"/>
	<typeAlias alias="FreightCopyFormVO" 	type="com.clt.apps.fis.wms.common.dto.FreightCopyFormVO"/>
	<typeAlias alias="FreightRouteRateCondVO" 	type="com.clt.apps.fis.wms.common.dto.FreightRouteRateCondVO"/>
	<typeAlias alias="CodeInfoVO" 	type="com.clt.apps.fis.wms.common.dto.CodeInfoVO"/>
	<typeAlias alias="Grd03WHCreateMultiItemPopupVO" 	type="com.clt.apps.fis.wms.common.dto.Grd03WHCreateMultiItemPopupVO"/>
	
	<select id="searchWarehouseLocInfoForName" resultClass="WarehouseLocVO">
		SELECT WL.ZONE_CD
		      ,WL.WH_LOC_CD
		      ,WL.WH_LOC_NM
		      ,WL.PROP_CD
		      ,dbo.TL_GET_COMM_NM('WL0', WL.PROP_CD)   AS PROP_NM
		      ,WL.PUT_TP_CD
		      ,dbo.TL_GET_COMM_NM('PP0', WL.PUT_TP_CD) AS PUT_TP_NM
		      ,WP.PUTAWAY_FLG
		      ,WP.ALLOC_FLG
		      ,WP.MOVE_FLG
		      ,WP.REPLENISH_FLG
		      ,WP.ADJUST_FLG
		      ,WL.LOC_CD
		      ,WL.SPACE_TP_CD
		      ,dbo.TL_GET_COMM_NM('WS0', WL.SPACE_TP_CD) AS SPACE_TP_NM
		  FROM TL_WH_LOC WL INNER JOIN TL_WH_PROP WP ON WL.LOC_CD  = WP.LOC_CD  AND WL.PROP_CD = WP.PROP_CD
		 WHERE 1=1
		   AND WL.LOC_CD  = #f_loc_cd#
		   AND WL.WH_LOC_NM = #f_wh_loc_nm#
		   <isNotEmpty property="f_fix_wh_loc_nm">
		   		AND WL.WH_LOC_NM = #f_fix_wh_loc_nm#
		   </isNotEmpty>
			<isNotEqual property="f_put_tp" compareValue="ALL">
				<isEqual property="f_put_tp" compareValue="C">
					AND WL.PUT_TP_CD IN ('C', 'N')
				</isEqual>
				<isEqual property="f_put_tp" compareValue="E">
					AND WL.PUT_TP_CD IN ('E', 'N')
				</isEqual>
				<isEqual property="f_put_tp" compareValue="N">
					AND WL.PUT_TP_CD IN ('C', 'E', 'N')
				</isEqual>
			</isNotEqual>	
		   <isEqual property="param1" compareValue="Y">
		   	AND (
		   		<isEqual property="f_putaway_flg" compareValue="Y">
		   			PUTAWAY_FLG = 'Y'
		   		</isEqual>
		   		<isEqual property="f_alloc_flg" compareValue="Y">
		   			<isEqual property="f_putaway_flg" compareValue="Y">
			   			OR
			   		</isEqual>
			   		ALLOC_FLG = 'Y'
		   		</isEqual>
		   		<isEqual property="f_move_flg" compareValue="Y">
		   			<isEqual property="f_putaway_flg" compareValue="Y">
			   			OR
			   		</isEqual>
			   		<isNotEqual property="f_putaway_flg" compareValue="Y">
			   			<isEqual property="f_alloc_flg" compareValue="Y">
				   			OR
				   		</isEqual>
			   		</isNotEqual>
			   		MOVE_FLG = 'Y'
		   		</isEqual>
		   		<isEqual property="f_replenish_flg" compareValue="Y">
		   			<isEqual property="f_putaway_flg" compareValue="Y">
			   			OR
			   		</isEqual>
		   			<isEqual property="f_alloc_flg" compareValue="Y">
			   			OR
			   		</isEqual>
		   			<isEqual property="f_move_flg" compareValue="Y">
			   			OR
			   		</isEqual>
			   		REPLENISH_FLG = 'Y'
		   		</isEqual>
		   		<isEqual property="f_adjust_flg" compareValue="Y">
				 	<isEqual property="f_putaway_flg" compareValue="Y">
			   			OR
			   		</isEqual>
		   			<isEqual property="f_alloc_flg" compareValue="Y">
			   			OR
			   		</isEqual>
		   			<isEqual property="f_move_flg" compareValue="Y">
			   			OR
			   		</isEqual>
		   			<isEqual property="f_replenish_flg" compareValue="Y">
			   			OR
			   		</isEqual>
			   		 ADJUST_FLG = 'Y'
		   		</isEqual>
			   )
		  </isEqual>
	</select>
	<select id="searchContractOrderTypeListCnt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
             SELECT count(*)	        
	        FROM ( SELECT C.*, '' as RTP_NO, '' as PNL_SVC_TP_CD
<!--                              R.RTP_NO, -->
<!--                              O.PNL_SVC_TP_CD	 -->
                            ,ROW_NUMBER() OVER(PARTITION BY C.CTRT_NO ORDER BY C.CTRT_NO) RNUM
                        FROM TL_CTRT C
<!--                             ,TL_RTP R -->
<!--                             ,TL_CTRT_ORD_TP O -->
                       WHERE 1 = 1
<!--                        	 AND C.CTRT_NO = R.CTRT_NO -->
<!--                          AND R.CTRT_NO = O.CTRT_NO -->
<!--                          AND R.ORD_TP_CD = O.ORD_TP_CD -->
                         <isNotEmpty property="ctrt_use_flg">
                         	 AND C.CTRT_USE_FLG   = 'Y'
<!-- 	                         AND R.RTP_USE_FLG    = 'Y' -->
<!-- 	                         AND O.ORD_TP_USE_FLG = 'Y' -->
                         </isNotEmpty>
                         <isNotEmpty property="ctrt_no">
                         	AND C.CTRT_NO LIKE #ctrt_no#+'%'
                         </isNotEmpty>
                         <isNotEmpty property="ctrt_nm">
			                  AND UPPER(C.CTRT_NM) LIKE '%'+#ctrt_nm#+'%'
                         </isNotEmpty>
                         <isNotEmpty property="ctrt_cust_cd">
			                  AND C.CTRT_CUST_CD = #ctrt_cust_cd#
                         </isNotEmpty>
                         <isNotEmpty property="ord_tp_lvl1_cd">
<!-- 	  				          AND O.ORD_TP_LVL1_CD IN (#ord_tp_lvl1_cd#) -->
                         </isNotEmpty>
                         <isNotEmpty property="ord_tp_lvl2_cd">
<!-- 	  				          AND O.ORD_TP_LVL2_CD IN (#ord_tp_lvl2_cd#) -->
                         </isNotEmpty>
                    ) T    
	      WHERE T.RNUM = 1
	</select>
	<select id="searchContractOrderTypeList" parameterClass="java.util.HashMap" resultClass="WMSCommonVO">
             SELECT a1.* FROM
             (SELECT 
             	 ROW_NUMBER() OVER (ORDER BY T.CTRT_NO ASC) as ROWNUM,
             	 T.CTRT_NO,
	             T.CTRT_NM,
	             T.EFF_FR_DT,
	             T.EFF_TO_DT,
	             T.CTRT_CUST_CD,
	             dbo.TL_GET_CUST_NM(T.CTRT_CUST_CD) AS CTRT_CUST_NM,
	             T.SALES_OFC_CD,
	             dbo.TL_GET_ORG_NM(T.SALES_OFC_CD) AS SALES_OFC_NM,
	             T.SALES_PIC_ID,
	             dbo.TL_GET_PIC_NM(T.SALES_PIC_ID) AS SALES_PIC_NM,
                    T.RTP_NO,
                    T.PNL_SVC_TP_CD    
                   ,CASE WHEN (SELECT COUNT(*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
		                   (SELECT MAX(L.LOC_CD) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#)
		              ELSE ''
		         END LOC_CD
		        ,CASE WHEN (SELECT COUNT(*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
		                   (SELECT MAX(L.LOC_ADDR) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#)
		              ELSE ''
		         END LOC_ADDR  
		        ,CASE T.CTRT_USE_FLG WHEN 'Y' THEN 'Active' ELSE 'Inactive' END AS CTRT_USE_FLG		        
	        FROM ( SELECT C.*, '' as RTP_NO, '' as PNL_SVC_TP_CD
<!--                              R.RTP_NO, -->
<!--                              O.PNL_SVC_TP_CD	 -->
                            ,ROW_NUMBER() OVER(PARTITION BY C.CTRT_NO ORDER BY C.CTRT_NO) RNUM
                        FROM TL_CTRT C
<!--                             ,TL_RTP R -->
<!--                             ,TL_CTRT_ORD_TP O -->
                       WHERE 1 = 1
<!--                        	 AND C.CTRT_NO = R.CTRT_NO -->
<!--                          AND R.CTRT_NO = O.CTRT_NO -->
<!--                          AND R.ORD_TP_CD = O.ORD_TP_CD -->
                         	 AND C.CTRT_USE_FLG   = 'Y'
<!-- 	                         AND R.RTP_USE_FLG    = 'Y' -->
<!-- 	                         AND O.ORD_TP_USE_FLG = 'Y' -->
                         <isNotEmpty property="ctrt_no">
                         	AND C.CTRT_NO LIKE #ctrt_no#+'%'
                         </isNotEmpty>
                         <isNotEmpty property="ctrt_nm">
			                  AND UPPER(C.CTRT_NM) LIKE '%'+#ctrt_nm#+'%'
                         </isNotEmpty>
                         <isNotEmpty property="ctrt_cust_cd">
			                  AND C.CTRT_CUST_CD = #ctrt_cust_cd#
                         </isNotEmpty>
                         <isNotEmpty property="ord_tp_lvl1_cd">
<!-- 	  				          AND O.ORD_TP_LVL1_CD IN (#ord_tp_lvl1_cd#) -->
                         </isNotEmpty>
                         <isNotEmpty property="ord_tp_lvl2_cd">
<!-- 	  				          AND O.ORD_TP_LVL2_CD IN (#ord_tp_lvl2_cd#) -->
                         </isNotEmpty>
                    ) T    
	      WHERE T.RNUM = 1) a1
	      <![CDATA[ where a1.ROWNUM > #beginIdx# AND a1.ROWNUM <= #topCnt#	]]> 
	    <!--   ORDER BY T.CTRT_NO -->
	</select>
	<!-- Bao.Huynh (S) -->
	<!-- OB Complete Search -->
	<select id="searchWHOCPopup" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.whoutbooking.dto.WHOutbkListVO">
		/* WHOutbk.searchWHOCPopup */
		  SELECT Z.WOB_OUT_NO,
		         Z.WHOC_FLAG
		    FROM (SELECT DISTINCT I.WOB_OUT_NO,
                         'BK' AS WHOC_FLAG		    
		            FROM TL_WH_ALLC A,
		                 TL_WH_ISSU I
		           WHERE A.WALC_NO = I.WALC_NO
		             AND A.WOB_BK_NO = #wob_bk_no#
		          UNION
		          SELECT DISTINCT LP.LP_NO AS WOB_OUT_NO,
                         'LP' AS WHOC_FLAG
		            FROM TL_WH_OB B,
		                 TL_WH_ALLC A,
		                 TL_WH_ALLC_ITEM AI,
		                 TL_WH_LOAD_PLAN LP,
		                 TL_WH_LOAD_PLAN_ITEM LPI
		           WHERE B.WOB_BK_NO = A.WOB_BK_NO
		             AND A.WALC_NO = AI.WALC_NO
		             AND LP.LP_NO = LPI.LP_NO
		             AND AI.WOB_BK_NO = LPI.WOB_BK_NO
		             AND AI.SAO_SYS_NO = LPI.SAO_SYS_NO
		             AND AI.PO_SYS_NO = LPI.PO_SYS_NO
		             AND AI.ITEM_SYS_NO = LPI.ITEM_SYS_NO
		             AND AI.LOT_ID = LPI.LOT_ID
		             AND AI.WH_LOC_CD = LPI.WH_LOC_CD
		             AND AI.ITEM_SEQ = LPI.ITEM_SEQ
		             AND B.WOB_BK_NO = #wob_bk_no#) Z
		ORDER BY Z.WOB_OUT_NO ASC
	</select>
	
	<!-- Inventory Adjustment Detail Popup Search -->		
	<select id="searchInvAdjustInfo" parameterClass="java.util.HashMap" resultClass="InvAdjustVO">
		/* WHItemInv.searchInvAdjustInfo */
		  SELECT V.PO_SYS_NO,
		         V.ITEM_SYS_NO,
                 V.WH_CD,
                 V.CTRT_NO,		         
		         V.SO_NO,
		         V.PO_NO,		         
		         '' AS ADJUST_NO,
		         '' AS ADJUST_DT,
		         V.WIB_BK_NO,
						 CASE WHEN L.LOT_ATTRIB_01 IS NOT NULL THEN CONVERT(VARCHAR(10), L.LOT_ATTRIB_01, 20) ELSE L.LOT_ATTRIB_01 END AS INBOUND_DT,
		         V.WH_LOC_CD,
		         dbo.TL_GET_WH_LOC_NM (V.WH_CD, V.WH_LOC_CD) AS WH_LOC_NM,
		         V.ITEM_CD,
		         V.ITEM_NM,
		         L.LOT_ATTRIB_02 AS LOT_NO,
		         V.LOT_ID,
 		         <![CDATA[ 
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_CBM, 0)     - ISNULL(V.ALLC_CBM, 0)     < 0 THEN 0 ELSE ISNULL(V.IN_CBM, 0)     - ISNULL(V.ALLC_CBM, 0)     END)))) AS FR_CBM,
                 LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_CBF, 0)     - ISNULL(V.ALLC_CBF, 0)     < 0 THEN 0 ELSE ISNULL(V.IN_CBF, 0)     - ISNULL(V.ALLC_CBF, 0)     END)))) AS FR_CBF,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_GRS_KGS, 0) - ISNULL(V.ALLC_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_GRS_KGS, 0) - ISNULL(V.ALLC_GRS_KGS, 0) END)))) AS FR_GRS_KGS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_GRS_LBS, 0) - ISNULL(V.ALLC_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_GRS_LBS, 0) - ISNULL(V.ALLC_GRS_LBS, 0) END)))) AS FR_GRS_LBS,		         
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_NET_KGS, 0) - ISNULL(V.ALLC_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_NET_KGS, 0) - ISNULL(V.ALLC_NET_KGS, 0) END)))) AS FR_NET_KGS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_NET_LBS, 0) - ISNULL(V.ALLC_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_NET_LBS, 0) - ISNULL(V.ALLC_NET_LBS, 0) END)))) AS FR_NET_LBS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_CBM, 0)     - ISNULL(V.ALLC_CBM, 0)     < 0 THEN 0 ELSE ISNULL(V.IN_CBM, 0)     - ISNULL(V.ALLC_CBM, 0)     END)))) AS TO_CBM,
                 LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_CBF, 0)     - ISNULL(V.ALLC_CBF, 0)     < 0 THEN 0 ELSE ISNULL(V.IN_CBF, 0)     - ISNULL(V.ALLC_CBF, 0)     END)))) AS TO_CBF,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_GRS_KGS, 0) - ISNULL(V.ALLC_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_GRS_KGS, 0) - ISNULL(V.ALLC_GRS_KGS, 0) END)))) AS TO_GRS_KGS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_GRS_LBS, 0) - ISNULL(V.ALLC_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_GRS_LBS, 0) - ISNULL(V.ALLC_GRS_LBS, 0) END)))) AS TO_GRS_LBS,		         
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_NET_KGS, 0) - ISNULL(V.ALLC_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_NET_KGS, 0) - ISNULL(V.ALLC_NET_KGS, 0) END)))) AS TO_NET_KGS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),(CASE WHEN ISNULL(V.IN_NET_LBS, 0) - ISNULL(V.ALLC_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(V.IN_NET_LBS, 0) - ISNULL(V.ALLC_NET_LBS, 0) END)))) AS TO_NET_LBS,
 		         ]]>
		         '' AS REASON_CD,                  
		         LTRIM(RTRIM (CONVERT (decimal(18,3),V.IN_QTY - ISNULL (V.ALLC_QTY, 0)))) AS FR_EA_QTY,
		         LTRIM(RTRIM (CONVERT (decimal(18,3),V.IN_QTY - ISNULL (V.ALLC_QTY, 0)))) AS TO_EA_QTY,        
		         '' AS WH_PIC_NM,
		         '' AS OWNER_PIC_NM,
		         '' AS RMK,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_CBM,0)))) AS LV1_CBM,
                 LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_CBF,0)))) AS LV1_CBF,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_GRS_KGS,0)))) AS LV1_GRS_KGS, 
		         LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_GRS_LBS,0)))) AS LV1_GRS_LBS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_NET_KGS,0)))) AS LV1_NET_KGS,
		         LTRIM(RTRIM(CONVERT(decimal(15,3),ISNULL(CI.LV1_NET_LBS,0)))) AS LV1_NET_LBS
		    FROM TL_WH_INV_LOC V,
		         TL_CTRT_CUST_ITEM_LOT L,
		         TL_CTRT_CUST_ITEM CI
		   WHERE V.CTRT_NO = L.CTRT_NO
		     AND V.ITEM_SYS_NO = L.ITEM_SYS_NO
		     AND V.LOT_ID = L.LOT_ID
		     AND V.CTRT_NO = CI.CTRT_NO
		     AND V.ITEM_SYS_NO = CI.ITEM_SYS_NO
		     AND V.WIB_BK_NO = #c_wib_bk_no#
		     AND V.PO_SYS_NO = #c_po_sys_no#
		     AND V.ITEM_SYS_NO = #c_item_sys_no#
		     AND V.LOT_ID = #c_lot_id# 
		     AND V.WH_LOC_CD = #c_wh_loc_cd#
	</select>
	
	<!-- Inventory Adjustment 처리내역 정보 Search -->
	<select id="searchInvAdjustResultInfo" parameterClass="java.util.HashMap" resultClass="InvAdjustVO">
		/* WHItemInv.searchInvAdjustResultInfo */
			SELECT A.ADJUST_NO,
			       CONVERT (VARCHAR(10),A.RGST_LOC_DT, 20) AS ADJUST_DT,
			       V.WIB_BK_NO,
			       CONVERT (VARCHAR(10),L.LOT_ATTRIB_01, 20) AS INBOUND_DT,
			       V.WH_LOC_CD,
			       dbo.TL_GET_WH_LOC_NM (V.WH_CD, V.WH_LOC_CD) AS WH_LOC_NM,
			       V.ITEM_CD,
			       V.ITEM_NM,
			       L.LOT_ATTRIB_02 AS LOT_NO,
			       V.LOT_ID,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_CBM,0)))) AS FR_CBM,
                   LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_CBF,0)))) AS FR_CBF,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_GRS_KGS,0)))) AS FR_GRS_KGS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_GRS_LBS,0) ))) AS FR_GRS_LBS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_NET_KGS,0) ))) AS FR_NET_KGS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.FR_NET_LBS,0) ))) AS FR_NET_LBS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_CBM,0) ))) AS TO_CBM,
                   LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_CBF,0) ))) AS TO_CBF,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_GRS_KGS,0) ))) AS TO_GRS_KGS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_GRS_LBS,0) ))) AS TO_GRS_LBS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_NET_KGS,0) ))) AS TO_NET_KGS,
			       LTRIM(RTRIM(CONVERT (decimal(15,3),ISNULL(A.TO_NET_LBS,0) ))) AS TO_NET_LBS,
			       A.REASON_CD,
			       dbo.TL_GET_COMM_NM('WAR', A.REASON_CD) AS REASON_NM,
			       LTRIM(RTRIM(CONVERT (decimal(18,3),A.FR_EA_QTY ))) AS FR_EA_QTY,
			       LTRIM(RTRIM(CONVERT (decimal(18,3),A.TO_EA_QTY ))) AS TO_EA_QTY,
			       A.WH_PIC_NM,
			       A.OWNER_PIC_NM,
			       A.RMK
			  FROM TL_WH_INV_ADJUST A,
			       TL_WH_INV_LOC V,
			       TL_CTRT_CUST_ITEM_LOT L,
			       TL_CTRT_CUST_ITEM CI
			 WHERE A.WIB_BK_NO = V.WIB_BK_NO
			   AND A.PO_SYS_NO = V.PO_SYS_NO
			   AND A.ITEM_SYS_NO = V.ITEM_SYS_NO
			   AND A.LOT_ID = V.LOT_ID
			   AND A.WH_LOC_CD = V.WH_LOC_CD
			   AND V.CTRT_NO = L.CTRT_NO
			   AND V.ITEM_SYS_NO = L.ITEM_SYS_NO
			   AND V.LOT_ID = L.LOT_ID
			   AND V.CTRT_NO = CI.CTRT_NO
			   AND V.ITEM_SYS_NO = CI.ITEM_SYS_NO
			   AND A.ADJUST_NO = #c_adjust_no#                  /* ADJUSTMENT NO */		
	</select>
	
	<!-- Inventory Adjustment Information Save -->
	<insert id="addInvAdjustInfo">
	/* WHItemInv.addInvAdjustInfo */
		INSERT INTO TL_WH_INV_ADJUST
		(
		     ADJUST_NO
		    ,PO_SYS_NO
		    ,ITEM_SYS_NO
		    ,LOT_ID
		    ,WH_LOC_CD
		    ,CTRT_NO
		    ,WH_CD
		    ,ITEM_CD
		    ,ITEM_NM
		    ,REASON_CD
		    ,WH_PIC_NM
		    ,OWNER_PIC_NM
		    ,FR_EA_QTY
		    ,TO_EA_QTY
		    ,RMK
		    ,SO_NO
		    ,WIB_BK_NO
		    ,PO_NO
		    ,FR_CBM
		    ,FR_CBF
	        ,FR_GRS_KGS
	        ,FR_GRS_LBS
	        ,FR_NET_KGS
	        ,FR_NET_LBS	
	        ,TO_CBM
	        ,TO_CBF
	        ,TO_GRS_KGS
	        ,TO_GRS_LBS
	        ,TO_NET_KGS
	        ,TO_NET_LBS	 
		    ,RGST_ID
		    ,RGST_OFC_CD
		    ,RGST_SYS_DT
		    ,RGST_LOC_DT
		)
		VALUES
		(
		     #adjust_no#
		    ,#po_sys_no#
		    ,#item_sys_no#
		    ,#lot_id#
		    ,#wh_loc_cd#
		    ,#ctrt_no#
		    ,#wh_cd#
		    ,#item_cd#
		    ,#item_nm#
		    ,#reason_cd#
		    ,#wh_pic_nm#
		    ,#owner_pic_nm#
		    ,REPLACE (#fr_ea_qty#, ',', '')
		    ,REPLACE (#to_ea_qty#, ',', '')
		    ,#rmk#
		    ,#so_no#
		    ,#wib_bk_no#
		    ,#po_no#
		    ,REPLACE (#fr_cbm#, ',', '')           
	        ,REPLACE (#fr_cbf#, ',', '')           
	        ,REPLACE (#fr_grs_kgs#, ',', '') 
	        ,REPLACE (#fr_grs_lbs#, ',', '')      
	        ,REPLACE (#fr_net_kgs#, ',', '')         
	        ,REPLACE (#fr_net_lbs#, ',', '') 
	        ,REPLACE (#to_cbm#, ',', '')      
	        ,REPLACE (#to_cbf#, ',', '')         
	        ,REPLACE (#to_grs_kgs#, ',', '')               
	        ,REPLACE (#to_grs_lbs#, ',', '')             
	        ,REPLACE (#to_net_kgs#, ',', '')         
	        ,REPLACE (#to_net_lbs#, ',', '')
		    ,#user_id#
		    ,#org_cd#
		    ,GETDATE()
		    ,CONVERT(VARCHAR(30),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#), 120)	
		)	
	</insert>
	
	<select id="searchUserList" parameterClass="java.util.HashMap" resultClass="UsersVO">
			SELECT ROW_NUMBER() OVER (ORDER BY USER_ID DESC, USER_ID ASC) as seq,
				   USER_ID AS PICCD,
				   ISNULL(USER_ENG_NM,'') PICNM,
				   ISNULL(TEL,'') TEL,
				   ISNULL(FAX,'') FAX,
				   ISNULL(ADDR,'') ADDR,
				   ISNULL(EMAIL,'') EMAIL,
				   ORG_CD,
				   dbo.TL_GET_ORG_NM(ORG_CD) ORG_NM,
				   DEF_WH_CTRT_NO,
				   DEF_WH_CD,
				   SA_AUG_CD,
				   SA_LBG_CD
			  FROM TL_USER
			 WHERE 1=1
			   AND USE_FLG = 'Y'
			<isNotEmpty property="picCd">
			   AND UPPER(USER_ID) = UPPER(LTRIM(RTRIM(#picCd#)))
			</isNotEmpty>			   
			<isNotEmpty property="picNm">
			   AND UPPER(USER_ENG_NM) LIKE '%' + upper(LTRIM(RTRIM(#picNm#))) + '%'
			</isNotEmpty>				   
			<isNotEmpty property="org_cd">
			   AND ORG_CD = LTRIM(RTRIM(#org_cd#))
			</isNotEmpty>
			</select>
			
			<select id="searchMDMCommonCodeList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CommonCodeInfoVO">
		SELECT COMN_CD AS CODE_CD
		      ,CD_NM AS CODE_NM
		      ,OPT_ITEM1 AS OPT_ITM1
		      ,OPT_ITEM2 AS OPT_ITM2
		      ,OPT_ITEM3 AS OPT_ITM3
		      ,OPT_ITEM4 AS OPT_ITM4
		      ,OPT_ITEM5 AS OPT_ITM5
		      ,OPT_ITEM6 AS OPT_ITM6
		      ,OPT_ITEM7 AS OPT_ITM7
		      ,OPT_ITEM8 AS OPT_ITM8
		      ,OPT_ITEM9 AS OPT_ITM9
		      ,OPT_ITEM10 AS OPT_ITM10
		 FROM T_MDM201
		WHERE 1=1
		  AND GRP_CD = #grp_cd#
		<isNotEmpty property="code_cd">
		  AND COMN_CD = #code_cd#
		</isNotEmpty>
		<isNotEmpty property="code_nm">
		  AND CD_NM = #code_nm#
		</isNotEmpty>		
		<isNotEmpty property="opt_itm1">
		  AND OPT_ITEM1 = #opt_itm1#
		</isNotEmpty>
		<isNotEmpty property="opt_itm2">
		  AND OPT_ITEM2 = #opt_itm2#
		</isNotEmpty>
		<isNotEmpty property="opt_itm3">
		  AND OPT_ITEM3 = #opt_itm3#
		</isNotEmpty>
		<isNotEmpty property="opt_itm4">
		  AND OPT_ITEM4 = #opt_itm4#
		</isNotEmpty>
		<isNotEmpty property="opt_itm5">
		  AND OPT_ITEM5 = #opt_itm5#
		</isNotEmpty>
		<isNotEmpty property="opt_itm6">
		  AND OPT_ITEM6 = #opt_itm6#
		</isNotEmpty>
		<isNotEmpty property="opt_itm7">
		  AND OPT_ITEM7 = #opt_itm7#
		</isNotEmpty>
		<isNotEmpty property="opt_itm8">
		  AND OPT_ITEM8 = #opt_itm8#
		</isNotEmpty>
		<isNotEmpty property="opt_itm9">
		  AND OPT_ITEM9 = #opt_itm9#
		</isNotEmpty>
		<isNotEmpty property="opt_itm10">
		  AND OPT_ITEM10 = #opt_itm10#
		</isNotEmpty>
	</select>
	
	<select id="searchFreightCAIssuePopupList" parameterClass="java.util.HashMap" resultClass = "Grd01FreightCAListVO">	
		SELECT T.CA_NO
		      ,T.CA_SEQ
		      ,CASE T.CA_STATUS
								WHEN 'H' THEN 'Hold'
								WHEN 'A' THEN 'Approval' 
								WHEN 'R' THEN 'Reject' 
					END AS CA_STATUS_NM
		      ,T.RMK
		      ,T.INS_USR
		      ,CONVERT(VARCHAR(8),T.INS_DATE,112) AS INS_DATE 
		      ,(SELECT M.CD_NM
                  FROM T_MDM201 M
                 WHERE M.GRP_CD = 'S24'
                   AND M.COMN_CD = T.CA_REASON) AS CA_REASON_NM
		  FROM T_FRT_CA_MST T
		 WHERE T.BRANCH = #org_cd#
		   AND T.MNGT_NO = #frt_doc_no#
		   AND T.DOC_CLS = (CASE #doc_cls_cd#
														WHEN 'S' THEN 'V'
														ELSE #doc_cls_cd#
											END)
		 ORDER BY T.INS_DATE DESC 
	</select>	
	
	<select id="searchTdGrpCd" parameterClass="java.util.HashMap" resultClass="CommodityVO">
    /*searchTdGrpCd*/
    SELECT A.TD_GRP_CD AS CODE, 
           MAX(A.TD_GRP_DESCR) AS CD_NM
      FROM T_MDM112 A
     WHERE A.USE_YN = #use_yn#
       AND A.TD_GRP_DESCR IS NOT NULL
     GROUP BY A.TD_GRP_CD
     ORDER BY CODE
    </select> 
    <select id="searchFdGrpCd" parameterClass="java.util.HashMap" resultClass="CommodityVO">
    /*searchFdGrpCd*/
    SELECT A.FD_GRP_CD AS CODE, 
           MAX(A.FD_GRP_DESCR) AS CD_NM
      FROM T_MDM112 A
     WHERE A.USE_YN = #use_yn#
       AND A.FD_GRP_DESCR IS NOT NULL
     GROUP BY A.FD_GRP_CD
     ORDER BY CODE
    </select> 
    <select id="searchTdGrpCdLoc" parameterClass="java.util.HashMap" resultClass="CommodityVO">
    /*searchTdGrpCdLoc*/
    SELECT A.TD_GRP_CD AS CODE, 
           MAX(B.TD_GRP_DESCR) AS CD_NM
      FROM T_MDM112 A, T_MDM112_DTL B
     WHERE A.HTS_CD = B.HTS_CD
       AND B.TD_GRP_DESCR IS NOT NULL
       AND B.BRANCH = #ofc_cd#
     GROUP BY A.TD_GRP_CD
     ORDER BY CODE
    </select>  
    <select id="searchFdGrpCdLoc" parameterClass="java.util.HashMap" resultClass="CommodityVO">
    /*searchFdGrpCdLoc*/
    SELECT A.FD_GRP_CD AS CODE, 
           MAX(B.FD_GRP_DESCR) AS CD_NM
      FROM T_MDM112 A, T_MDM112_DTL B
     WHERE A.HTS_CD = B.HTS_CD
       AND A.USE_YN = #use_yn#
       AND B.FD_GRP_DESCR IS NOT NULL
       AND B.BRANCH = #ofc_cd#
     GROUP BY A.FD_GRP_CD
     ORDER BY CODE		    
    </select>
    <select id="searchHTSList" parameterClass="java.util.HashMap" resultClass="CommodityVO">
		SELECT A.HTS_CD,
		       A.DESCR AS HTS_DESC_ENG,
		       B.DESCR AS HTS_DESC_LOC,
		       A.USE_YN,
		
		       A.TD_GRP_CD,
		       A.TD_GRP_DESCR AS TD_GRP_DESC_ENG,
		       B.TD_GRP_DESCR AS TD_GRP_DESC_LOC,
		
		       A.FD_GRP_CD,
		       A.FD_GRP_DESCR AS FD_GRP_DESC_ENG,
		       B.FD_GRP_DESCR AS FD_GRP_DESC_LOC,
		
		       B.BRANCH AS BRANCH,
		       dbo.TL_GET_ORG_NM(B.BRANCH) AS BRANCH_NM
		  FROM T_MDM112_DTL B LEFT JOIN T_MDM112 A ON  A.HTS_CD = B.HTS_CD
		 WHERE  A.USE_YN = 'Y'
		   AND B.BRANCH = #ofc_cd# /*지점코드*/  
		   <isNotEmpty property="hts_cd">
		   		<isEqual property="search_tp" compareValue="Q">AND A.HTS_CD = #hts_cd# /*HTS Code*/</isEqual>
		   		<isNotEqual property="search_tp" compareValue="Q">AND A.HTS_CD LIKE '%'+ #hts_cd# + '%' /*HTS Code*/</isNotEqual>
		   </isNotEmpty>
		   <isNotEqual property="td_grp_cd" compareValue="ALL">
		   AND A.TD_GRP_CD = #td_grp_cd# /*Two Digit Group Code*/
		   </isNotEqual>
		   <isNotEqual property="fd_grp_cd" compareValue="ALL">
		   AND A.FD_GRP_CD = #fd_grp_cd# /*Four Digit Group Code*/
		   </isNotEqual>
		   <isNotEqual property="td_grp_cd_loc" compareValue="ALL">
		   AND A.TD_GRP_CD = #td_grp_cd_loc# /*Two Digit Group local Code*/
		   </isNotEqual>
		   <isNotEqual property="fd_grp_cd_loc" compareValue="ALL">
		   AND A.FD_GRP_CD = #fd_grp_cd_loc# /*Four Digit Group local Code*/
		   </isNotEqual>
		   <isNotEmpty property="hts_desc_eng">
		   AND (UPPER(A.DESCR) LIKE '%' + UPPER(#hts_desc_eng#) + '%' OR UPPER(A.TD_GRP_DESCR) LIKE '%' + UPPER(#hts_desc_eng#) + '%' OR UPPER(A.FD_GRP_DESCR) LIKE '%' + UPPER(#hts_desc_eng#) + '%' )  /*Description*/
		   </isNotEmpty>
		   <isNotEmpty property="hts_desc_loc">
		   AND (UPPER(B.DESCR) LIKE '%' + UPPER(#hts_desc_loc#) + '%' OR UPPER(B.TD_GRP_DESCR) LIKE '%' + UPPER(#hts_desc_loc#) + '%' OR UPPER(B.FD_GRP_DESCR) LIKE '%' + UPPER(#hts_desc_loc#) + '%' ) /*Local Description*/
		   </isNotEmpty>
		 ORDER BY A.HTS_CD
	 </select>
	 
	 <select id="searchCntrTrTp" parameterClass="java.util.HashMap" resultClass="TlEqVO">
		SELECT C.CNTR_TPSZ_CD AS EQ_UNIT
		      ,'C' AS TYPE
		      ,C.DESCR
		  FROM TB_CNTR_TPSZ C
		 WHERE C.CNTR_TPSZ_CD = #cntr_tp#
		UNION ALL
		SELECT T.TRK_TP_CT AS EQ_UNIT 
		      ,'T' AS TYPE
		      ,T.DESCR
		FROM TL_TRK_TP_CD T
		WHERE T.TRK_TP_CT = #cntr_tp#
		AND T.USE_YN = 'Y'
	</select>
	
	<select id="searchFreightIndirectCostPopupList" parameterClass="java.util.HashMap" resultClass="Grd05FreightMgmtFrtMstVO">	
		/*searchFreightIndirectCostPopupList*/
		SELECT T.FARE_SEQ AS FRT_SEQ
		      ,T.INDIRECT_REV
		      ,T.FARE_CD AS FRT_CD
		      ,T.FARE_NM AS FRT_NM
		      ,T.BRANCH AS FRT_BR_CD
		      ,T.CTRT_NO
		      ,T.CTRT_NM
		      ,T.CURR_CD
		      ,T.EX_RATE AS EXRATE
		      ,T.FARE_AMT AS AMT
		      ,T.FARE_LOC_AMT AS LOC_AMT
		      ,T.ACCT_USD_AMT AS INV_ACCT_USD_AMT
		  FROM T_INDIRECT_COST T
		 WHERE T.MNGT_NO = #doc_no#
		   AND T.SYS_CD = 'OMS'
		   AND T.DOC_CLS = (CASE #doc_cls_cd# 
													WHEN 'S' THEN 'V'
													ELSE #doc_cls_cd#
														END)
		   AND T.SELL_BUY_CLS = 'B'
	</select>
	
	<select id="searchCommonCodeInfo" parameterClass="java.util.HashMap" resultClass="CommonCodeInfoVO">
	/* WmsCommonSQL.xml > searchCommonCodeList */ 
			 SELECT G.PRNT_COM_CD AS grp_cd,
	        		D.CD_VAL AS code_cd,
	        		D.CD_NM AS code_nm,
			        '' AS opt_itm1,
			        '' AS opt_itm2,
			        '' AS opt_itm3,
			        '' AS opt_itm4,
			        '' AS opt_itm5,
			        '' AS opt_itm6,
			        '' AS opt_itm7,
			        '' AS opt_itm8,
			        '' AS opt_itm9,
			        '' AS opt_itm10
			          
			FROM TB_COM_CD G
                   ,TB_COM_CD_DTL D
			WHERE  G.USE_FLG = 'Y'	
			AND G.COM_CD = D.COM_CD											
			<isNotEmpty property="code_cd">
				AND D.CD_VAL = #code_cd#
			</isNotEmpty>
			
			<isNotEmpty property="code_nm">
				AND UPPER(D.CD_NM) = UPPER(#code_nm#)
			</isNotEmpty>
			
			<isNotEmpty property="grp_cd">
				AND G.COM_CD = #grp_cd#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm1">
				AND OPT_ITM1 = #opt_itm1#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm2">
				AND OPT_ITM2 = #opt_itm2#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm3">
				AND OPT_ITM3 = #opt_itm3#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm4">
				AND OPT_ITM4 = #opt_itm4#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm5">
				AND OPT_ITM5 = #opt_itm5#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm6">
				AND OPT_ITM6 = #opt_itm6#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm7">
				AND OPT_ITM7 = #opt_itm7#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm8">
				AND OPT_ITM8 = #opt_itm8#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm9">
				AND OPT_ITM9 = #opt_itm9#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm10">
				AND OPT_ITM10 = #opt_itm10#
			</isNotEmpty>
			
			<isEqual property="wh_flag" compareValue="Y">
				AND EXISTS (SELECT 'X'
					        FROM TL_CTRT_CUST_ITEM I
					       WHERE I.CTRT_NO = #ctrt_no#
					         AND I.ITEM_SYS_NO = #item_sys_no#
					         AND I.ITEM_USE_FLG = 'Y'
					         AND D.CD_VAL IN (I.PKG_LV1_UNIT_CD, I.ITEM_PKGUNIT,I.PKG_LV3_UNIT_CD, I.PKG_LV4_UNIT_CD))
			</isEqual>
			
			ORDER BY  G.PRNT_COM_CD, D.CD_VAL
	</select>		
		
	<select id="searchFrtCd" parameterClass="java.util.HashMap" resultClass="TlFreightVO">
	   SELECT T.FARE_CD AS CODE
		      ,T.FARE_ENGNM AS NAME
		      ,T.FARE_AREANM AS FRT_LOCNM
		      ,T.FARE_GRP_CD AS FRT_GRP_CD
		      ,T.FCUR_WCUR_CLS AS FRT_CURR_CLS
		      ,'NIL' AS SELL_VAT_CD
		      ,'NIL' AS BUY_VAT_CD
		  FROM T_MDM106 T
		 WHERE 1 = 1
		   AND T.USE_YN = 'Y'
		   AND T.FARE_CD NOT IN ('ORND')
		   <isNotEqual property="wfg_use_yn" compareValue="Y">
	       AND T.FARE_CD NOT IN ('OWFG')
	       </isNotEqual>
	       <isEqual property="wfg_use_yn" compareValue="Y">
		       <isEqual property="code" compareValue="OWFG">
		       AND EXISTS ( SELECT 'X'
			                  FROM HJLLIS.dbo.TL_CUST C
			                 WHERE C.CUST_CD = #cust_cd#
			                   AND C.WFG_YN = 'Y' )
			   AND 'KRSELLB' = #org_cd#                   
		       </isEqual>
	       </isEqual>
		   AND T.FARE_CD = #code#
		   AND 0=(SELECT COUNT(*)
		            FROM TC_TAX_CODE TC
		           WHERE TC.BRANCH = #org_cd#)          
		UNION 
		SELECT T.FARE_CD AS CODE
		      ,T.FARE_ENGNM AS NAME
		      ,T.FARE_AREANM AS FRT_LOCNM
		      ,T.FARE_GRP_CD AS FRT_GRP_CD
		      ,T.FCUR_WCUR_CLS AS FRT_CURR_CLS
		      ,ISNULL((SELECT MAX(V.SELL_VAT_CD)
		              FROM T_MDM206 V
		             WHERE V.FARE_CD = T.FARE_CD
		               AND V.BRANCH = #org_cd#), 'NIL') AS SELL_VAT_CD
		      ,ISNULL((SELECT MAX(V.BUY_VAT_CD)
		              FROM T_MDM206 V
		             WHERE V.FARE_CD = T.FARE_CD
		               AND V.BRANCH = #org_cd#), 'NIL') AS BUY_VAT_CD
		  FROM T_MDM106 T
		 WHERE 1 = 1
		   AND T.USE_YN = 'Y'
		   AND T.FARE_CD NOT IN ('ORND')
		   <isNotEqual property="wfg_use_yn" compareValue="Y">
	       AND T.FARE_CD NOT IN ('OWFG')
	       </isNotEqual>
	       <isEqual property="wfg_use_yn" compareValue="Y">
		       <isEqual property="code" compareValue="OWFG">
	       AND EXISTS ( SELECT 'X'
		                  FROM TL_CUST C
		                 WHERE C.CUST_CD = #cust_cd#
		                   AND C.WFG_YN = 'Y' )
		   AND 'KRSELLB' = #org_cd#
		   		</isEqual>
	       </isEqual>           
		   AND T.FARE_CD = #code#
	       AND EXISTS ( SELECT 'X'
		                  FROM T_MDM206 TM
		                 WHERE TM.FARE_CD = T.FARE_CD
		                   AND TM.BRANCH = #org_cd#
		              )
		   AND 0!=(SELECT COUNT(*)
		             FROM TC_TAX_CODE TC
		            WHERE TC.BRANCH = #org_cd#)  
		<isNotEmpty property="ex_in_cd">              
        UNION
        SELECT A.COMN_CD    AS CODE
              ,A.CD_NM      AS NAME
              ,''           AS FRT_LOCNM
              ,''           AS FRT_GRP_CD
              ,''           AS FRT_CURR_CLS
              ,'NIL'        AS SELL_VAT_CD
              ,'NIL'        AS BUY_VAT_CD
          FROM T_MDM201 A
             , T_MDM104 B
         WHERE A.GRP_CD = 'S36'
           AND B.USE_YN = 'Y'
           AND A.COMN_CD = #code#
           AND B.OFFICE_CD = #org_cd#          
        </isNotEmpty>           
	</select>
	
	<select id="searchCtrtInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.TlCtrtVO">
		SELECT TL_CTRT.CTRT_NO CTRT_NO,
		       TL_CTRT.CTRT_NM CTRT_NM,
		       TL_CTRT.CTRT_CUST_CD CTRT_CUST_CD
		FROM TL_CTRT
		 WHERE 1=1
		  AND TL_CTRT.CTRT_NO = #ctrt_no#
		  <isEmpty property="ctrt_use_flg">
		  AND TL_CTRT.CTRT_USE_FLG = 'Y' 	
		  </isEmpty>	
	</select>
	<!-- Bao.Huynh (E) -->
	
		<!-- Khang.Dong (S) -->
	<select id="searchWHUnloadShtInfo" parameterClass="java.util.HashMap" resultClass="WHUnloadShtVO">
		/* WHInbk.searchWHUnloadShtInfo */
		SELECT SUPV_NM
		      ,CASE WHEN UNLOAD_DT  IS NOT NULL THEN CONVERT(VARCHAR(10),UNLOAD_DT, 120) ELSE UNLOAD_DT END AS UNLOAD_DT
		      ,CASE WHEN UNLOAD_HM_FR IS NOT NULL THEN CONVERT(VARCHAR(10),UNLOAD_HM_FR,108) ELSE UNLOAD_HM_FR END AS UNLOAD_HM_FR
		      ,CASE WHEN UNLOAD_HM_TO IS NOT NULL THEN CONVERT(VARCHAR(10),UNLOAD_HM_TO, 108) ELSE UNLOAD_HM_TO END AS UNLOAD_HM_TO
		      ,UNLOAD_BY
		      ,MSG_TO_WK
		      ,INSP_BY		      
		      ,CASE WHEN INSP_HM_FR IS NOT NULL THEN CONVERT(VARCHAR(10),INSP_HM_FR, 108) ELSE INSP_HM_FR END AS INSP_HM_FR
		      ,CASE WHEN INSP_HM_TO IS NOT NULL THEN CONVERT(VARCHAR(10),INSP_HM_TO, 108) ELSE INSP_HM_TO END AS INSP_HM_TO
		      ,MSG_TO_INSP
		  FROM TL_WH_UNLOAD_SHT
		 WHERE WIB_BK_NO = #wib_bk_no#	
	</select>
	
	<select id="searchWHUnloadShtItemList" parameterClass="java.util.HashMap" resultClass="WHInbkItemVO">
		/* WHInbk.searchWHUnloadShtItemList */	
		  SELECT T.WIB_BK_NO,
		         T.PO_SYS_NO,
		         T.ITEM_SYS_NO,
		         T.ITEM_SEQ,
		         T.ITEM_CD,
		         T.LOT_NO,
		         T.ITEM_PKGQTY,
		         T.ITEM_PKGUNIT,
		         T.EQ_TP_CD,
		         T.EQ_TPSZ_CD,
		         T.EQ_NO,
		         T.SEAL_NO,
		         T.UNLOAD_GATE_NO,
		         T.UNLOAD_INBOUND_LOC_CD,
		         dbo.TL_GET_WH_LOC_NM (T.WH_CD, T.UNLOAD_INBOUND_LOC_CD) AS UNLOAD_INBOUND_LOC_NM,
		         CIW.FIX_LOC_CD,
		         dbo.TL_GET_WH_LOC_NM (T.WH_CD, CIW.FIX_LOC_CD) AS FIX_LOC_NM,
		         CASE
		            WHEN CI.PKG_LV1_UNIT_CD = T.ITEM_PKGUNIT THEN CI.PKG_LV1_PUT_TP_CD
		            WHEN CI.ITEM_PKGUNIT = T.ITEM_PKGUNIT THEN CI.PKG_LV2_PUT_TP_CD
		            WHEN CI.PKG_LV3_UNIT_CD = T.ITEM_PKGUNIT THEN CI.PKG_LV3_PUT_TP_CD
		            WHEN CI.PKG_LV4_UNIT_CD = T.ITEM_PKGUNIT THEN CI.PKG_LV4_PUT_TP_CD
		         END PUT_TP_CD
		    FROM (SELECT I.WIB_BK_NO,
		                 I.PO_SYS_NO,
		                 I.ITEM_SYS_NO,
		                 I.ITEM_SEQ,
		                 I.ITEM_CD,
		                 I.LOT_NO,
		                 I.ITEM_PKGQTY,
		                 I.ITEM_PKGUNIT,
		                 I.EQ_TP_CD,
		                 I.EQ_TPSZ_CD,
		                 I.EQ_NO,
		                 I.SEAL_NO,
		                 I.UNLOAD_GATE_NO,
		                 I.UNLOAD_INBOUND_LOC_CD,
		                 dbo.TL_GET_WH_LOC_NM (B.WH_CD, I.UNLOAD_INBOUND_LOC_CD) AS UNLOAD_INBOUND_LOC_NM,
		                 B.CTRT_NO,
		                 B.WH_CD
		            FROM TL_WH_IB B, TL_WH_IB_ITEM I
		           WHERE 1 = 1
		             AND I.WIB_BK_NO = #wib_bk_no#
		             AND B.WIB_BK_NO = I.WIB_BK_NO) T
		   LEFT JOIN  TL_CTRT_CUST_ITEM_WH CIW
   				 ON T.CTRT_NO = CIW.CTRT_NO
			     AND T.ITEM_SYS_NO = CIW.ITEM_SYS_NO
			     AND T.WH_CD = CIW.WH_CD
           LEFT JOIN  TL_CTRT_CUST_ITEM CI		         
	             ON T.CTRT_NO = CI.CTRT_NO
	             AND T.ITEM_SYS_NO = CI.ITEM_SYS_NO	     
		ORDER BY T.PO_SYS_NO, T.ITEM_CD, T.LOT_NO		
	</select>
	<insert id="addWHUnloadShtInfo" parameterClass="java.util.HashMap">
	/* WHInbk.addWHUnloadShtInfo */
		INSERT INTO TL_WH_UNLOAD_SHT (
		    WIB_BK_NO
		   ,SUPV_NM
		   ,UNLOAD_DT
		   ,UNLOAD_HM_FR
		   ,UNLOAD_HM_TO
		   ,UNLOAD_BY
		   ,MSG_TO_WK
		   ,INSP_BY
		   ,INSP_HM_FR
		   ,INSP_HM_TO
		   ,MSG_TO_INSP
		   ,RGST_ID
		   ,RGST_OFC_CD
		   ,RGST_SYS_DT
		   ,RGST_LOC_DT
		   ,MODI_ID
		   ,MODI_OFC_CD
		   ,MODI_SYS_DT
		   ,MODI_LOC_DT
		) VALUES (
		    #wib_bk_no#
		   ,#supv_nm#
		   ,REPLACE (#unload_dt#, '-', '')
		   ,REPLACE (#unload_hm_fr#, ':', '')
		   ,REPLACE (#unload_hm_to#, ':', '')
		   ,#unload_by#
		   ,#msg_to_wk#
		   ,#insp_by#
		   ,REPLACE (#insp_hm_fr#, ':', '')
		   ,REPLACE (#insp_hm_to#, ':', '')
		   ,#msg_to_insp#
		   ,#user_id#
		   ,#org_cd#
		   ,GETDATE()
		   ,CONVERT (VARCHAR(19), dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#), 120)  
		   ,#user_id#
		   ,#org_cd#
		   ,GETDATE()
		   ,CONVERT (VARCHAR(19), dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#), 120)
		)	
	</insert>	
	<insert id="addExpressTemp" parameterClass="java.util.HashMap">
		INSERT INTO TL_PSUDO_CLP_XLS
			    (XLS_NO,
			     DOC_NO,
			     CNTR_TPSZ_CD,
			     CNTR_NO,
			     PO_SYS_NO,
			     ITEM_SYS_NO,
			     DOC_TP_CD,
			     PO_NO,
			     ITEM_CD,
			     LOT_NO,
			     ITEM_NM,
			     ITEM_QTY,
			     ITEM_CBM,
			     ITEM_KGS,
			     ITEM_NET_WGT,
			     ITEM_PKGQTY,
			     ITEM_PKGUNIT,
			     RGST_ID,
			     RGST_SYS_DT,
			     MODI_ID,
			     MODI_SYS_DT,
			     CLR_DT,
				 SEAL_NO1,
				 SEAL_NO2)
			VALUES
			    (#xls_no#,
			     #doc_no#,
			     #cntr_tpsz_cd#,
			     #cntr_no#,
			     #po_sys_no#,
			     #item_sys_no#,
			     #doc_tp_cd#,
			     #po_no#,
			     #item_cd#,
			     #lot_no#,
			     #item_nm#,
			     #item_qty#,
			     #item_cbm#,
			     #item_kgs#,
			     #item_net_wgt#,
			     #item_pkgqty#,
			     #item_pkgunit#,
			     #user_id#,
			     GETDATE(),
			     #user_id#,
			     GETDATE(),
			     #loaded_dt#,
			     #seal_no1#,
			     #seal_no1#)
	</insert>
	<update id="modifyWHUnloadShtInfo" parameterClass="java.util.HashMap">
	/* WHInbk.modifyWHUnloadShtInfo */
		UPDATE TL_WH_UNLOAD_SHT
		SET    SUPV_NM      = #supv_nm#
		      ,UNLOAD_DT    = REPLACE (#unload_dt#, '-', '')
		      ,UNLOAD_HM_FR = REPLACE (#unload_hm_fr#, ':', '')
		      ,UNLOAD_HM_TO = REPLACE (#unload_hm_to#, ':', '')
		      ,UNLOAD_BY    = #unload_by#
		      ,MSG_TO_WK    = #msg_to_wk#
		      ,INSP_BY      = #insp_by#
		      ,INSP_HM_FR   = REPLACE (#insp_hm_fr#, ':', '')
		      ,INSP_HM_TO   = REPLACE (#insp_hm_to#, ':', '')
		      ,MSG_TO_INSP  = #msg_to_insp#
		      ,MODI_ID      = #user_id#
		      ,MODI_OFC_CD  = #org_cd#
		      ,MODI_SYS_DT  = GETDATE()
		      ,MODI_LOC_DT  = CONVERT (VARCHAR(19), dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#), 120)
		WHERE  WIB_BK_NO    = #wib_bk_no#	
	</update>
	
	<update id="modifyWHUnloadShtItemList">
	/* WHInbk.modifyWHUnloadShtItemList */
		UPDATE TL_WH_IB_ITEM
		SET    EQ_TP_CD              = #eq_tp_cd#
		      ,EQ_TPSZ_CD            = #eq_tpsz_cd#
		      ,EQ_NO                 = #eq_no#
		      ,SEAL_NO               = #seal_no#
		      ,UNLOAD_GATE_NO        = #unload_gate_no#
		      ,UNLOAD_INBOUND_LOC_CD = #unload_inbound_loc_cd#
		      ,MODI_ID               = #user_id#
		      ,MODI_OFC_CD           = #org_cd#
		      ,MODI_SYS_DT           = GETDATE()
		      ,MODI_LOC_DT           = CONVERT (VARCHAR(19), dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#), 120)
		WHERE  WIB_BK_NO             = #wib_bk_no#
		AND    PO_SYS_NO             = #po_sys_no#
		AND    ITEM_SYS_NO           = #item_sys_no#
		AND    ITEM_SEQ              = #item_seq#
	</update>
	<delete id="removeWHUnloadShtInfo" parameterClass="java.util.HashMap">
		DELETE FROM TL_WH_UNLOAD_SHT
		      WHERE WIB_BK_NO = #wib_bk_no# 
    </delete>	
	<select id="searchManualAllcPopupList" parameterClass="java.util.HashMap" resultClass="ManualAllcPopupListVO">
	/*WHOutAllcation.searchManualAllcPopupList*/
	SELECT * FROM (
SELECT LOT.LOT_ATTRIB_01 AS INBOUND_DT
	 , LOT.LOT_ATTRIB_02 AS LOT_NO
	 , LOT.LOT_ATTRIB_03 AS EXP_DT
	 , LOT.LOT_ATTRIB_04 AS LOT_04
	 , LOT.LOT_ATTRIB_05 AS LOT_05
	 , T.WH_LOC_CD
	 , dbo.TL_GET_WH_LOC_NM(T.WH_CD, T.WH_LOC_CD) AS  WH_LOC_CD_NM
	 , T.WIB_BK_NO
	 , LOC.KIT_FLG
     , (SELECT FWD_DIR FROM TL_WH_IB WHERE WIB_BK_NO = T.WIB_BK_NO) AS FWD_DIR
	 , T.PO_NO
	 , T.LOT_ID
	 , ISNULL(LOC.IN_QTY, 0) AS INV_IN_QTY
	 , ISNULL(LOC.ALLC_QTY, 0 ) AS INV_ALLC_QTY
	 , ISNULL(LOC.IN_QTY, 0) - ISNULL(LOC.ALLC_QTY, 0 ) + T.PICK_ITEM_EA_QTY AS STOCK
	 , T.PICK_ITEM_EA_QTY AS ALLOC
	 , T.PICK_ITEM_EA_QTY AS ALLOC_ORG
	 , T.ITEM_SYS_NO
	 , T.ITEM_SEQ
	 , T.PO_SYS_NO
	 , (SELECT COUNT(1)
          FROM TL_WH_ISSU_ITEM ISSU
         WHERE ISSU.WALC_NO = T.WALC_NO
           AND ISSU.WOB_BK_NO = T.WOB_BK_NO
           AND ISSU.SAO_SYS_NO = T.SAO_SYS_NO
           AND ISSU.WIB_BK_NO = T.WIB_BK_NO
           AND ISSU.PO_SYS_NO = T.PO_SYS_NO
           AND ISSU.ITEM_SYS_NO = T.ITEM_SYS_NO
           AND ISSU.LOT_ID = T.LOT_ID
           AND ISSU.WH_LOC_CD = T.WH_LOC_CD
           AND ISSU.ITEM_SEQ = T.ITEM_SEQ) AS ISSU_CNT /*issu된건 체크. 0보다 크면 alloc수정불가능 */
     , ISNULL((SELECT SUM(CASE WHEN LP_STS_CD = 'L' THEN 0 ELSE 1 END) AS LP_STS_CD_P_CNT     
          FROM TL_WH_LOAD_PLAN_ITEM LOAD_PLAN_ITEM
             , TL_WH_LOAD_PLAN LOAD_PLAN
         WHERE LOAD_PLAN_ITEM.WOB_BK_NO = T.WOB_BK_NO
           AND LOAD_PLAN_ITEM.SAO_SYS_NO = T.SAO_SYS_NO
           AND LOAD_PLAN_ITEM.WIB_BK_NO = T.WIB_BK_NO
           AND LOAD_PLAN_ITEM.PO_SYS_NO = T.PO_SYS_NO
           AND LOAD_PLAN_ITEM.ITEM_SYS_NO = T.ITEM_SYS_NO
           AND LOAD_PLAN_ITEM.LOT_ID = T.LOT_ID
           AND LOAD_PLAN_ITEM.WH_LOC_CD = T.WH_LOC_CD
           AND LOAD_PLAN_ITEM.ITEM_SEQ = T.ITEM_SEQ
           AND LOAD_PLAN_ITEM.LP_NO = LOAD_PLAN.LP_NO
       ),-1) AS LOAD_PLAN_CNT /* LP_STS_CD = 'P'(Partial 건수체크)건. 0보다 크면 P가 존재하므로 alloc수정가능하나, 최소수량 체크
                                                                     0건은 L만존재하므로 alloc수정불가능
                                                                     0보다작은경우 (ISNULL -1처리) loadplan이 되지않았으므로 최소수량체크없음*/
     , ISNULL((SELECT SUM(LP_ITEM_EA_QTY)   
          FROM TL_WH_PSUDO_LP_SHIP SHIP
         WHERE SHIP.WOB_BK_NO = T.WOB_BK_NO
           AND SHIP.SAO_SYS_NO = T.SAO_SYS_NO
           AND SHIP.WIB_BK_NO = T.WIB_BK_NO
           AND SHIP.PO_SYS_NO = T.PO_SYS_NO
           AND SHIP.ITEM_SYS_NO = T.ITEM_SYS_NO
           AND SHIP.LOT_ID = T.LOT_ID
           AND SHIP.WH_LOC_CD = T.WH_LOC_CD
           AND SHIP.ITEM_SEQ = T.ITEM_SEQ
           AND SHIP.LP_STATUS = 'G'
       ),0) AS LOAD_ITEM_EA_QTY_MIN_CHECK
	 , '1' AS DIV
  FROM (
        SELECT OB.WH_CD
             , OB.CTRT_NO
             , ITEM.*
          FROM TL_WH_ALLC_ITEM ITEM
             , TL_WH_OB OB
         WHERE ITEM.WOB_BK_NO   = OB.WOB_BK_NO
           AND ITEM.WOB_BK_NO   = #s_wob_bk_no#
           AND ITEM.SAO_SYS_NO  = #sao_sys_no#
           AND ITEM.ITEM_SYS_NO = #item_sys_no#
           AND ITEM.ITEM_SEQ    = #item_seq#
       ) T left join TL_CTRT_CUST_ITEM_LOT LOT on T.CTRT_NO     = LOT.CTRT_NO and T.ITEM_SYS_NO = LOT.ITEM_SYS_NO and T.LOT_ID      = LOT.LOT_ID
     , TL_WH_INV_LOC LOC 
     
 WHERE T.WIB_BK_NO   = LOC.WIB_BK_NO
   AND T.PO_SYS_NO   = LOC.PO_SYS_NO
   AND T.ITEM_SYS_NO = LOC.ITEM_SYS_NO
   AND T.LOT_ID      = LOC.LOT_ID
   AND T.WH_LOC_CD   = LOC.WH_LOC_CD
   
UNION ALL
SELECT T.*
  FROM (
	SELECT CUST_LOT.LOT_ATTRIB_01
	     , CUST_LOT.LOT_ATTRIB_02
	     , CUST_LOT.LOT_ATTRIB_03
	     , CUST_LOT.LOT_ATTRIB_04
	     , CUST_LOT.LOT_ATTRIB_05
	     , LOC.WH_LOC_CD
	     , dbo.TL_GET_WH_LOC_NM(LOC.WH_CD, LOC.WH_LOC_CD) AS  WH_LOC_CD_NM
	     , LOC.WIB_BK_NO
	     , LOC.KIT_FLG
         , (SELECT FWD_DIR FROM TL_WH_IB WHERE WIB_BK_NO = LOC.WIB_BK_NO) AS FWD_DIR
	     , LOC.PO_NO
	     , LOC.LOT_ID
	     , ISNULL(LOC.IN_QTY, 0) AS INV_IN_QTY
		 , ISNULL(LOC.ALLC_QTY, 0 ) AS INV_ALLC_QTY
	     , ISNULL(LOC.IN_QTY, 0) - ISNULL(LOC.ALLC_QTY, 0 ) AS STOCK
	     , 0 AS ALLOC
	     , 0 AS ALLOC_ORG
	     , LOC.ITEM_SYS_NO
	     , 1 AS ITEM_SEQ
		 , LOC.PO_SYS_NO
		 , 0 AS ISSU_CNT
		 , -1 AS LOAD_PLAN_CNT
		 , 0 AS LOAD_ITEM_EA_QTY_MIN_CHECK
		 , '2' AS DIV
	  FROM TL_WH_INV_LOC LOC              /*inv*/
	     , TL_CTRT_CUST_ITEM_LOT CUST_LOT /*lot*/
	 WHERE LOC.ITEM_SYS_NO      = CUST_LOT.ITEM_SYS_NO
	   AND LOC.LOT_ID           = CUST_LOT.LOT_ID 
	   AND LOC.CTRT_NO          = CUST_LOT.CTRT_NO 
	   AND LOC.WH_CD            = CUST_LOT.WH_CD 
	   AND LOC.CTRT_NO          = (SELECT CTRT_NO FROM TL_WH_OB WHERE WOB_BK_NO = #s_wob_bk_no#)
	   AND LOC.WH_CD            = (SELECT WH_CD FROM TL_WH_OB WHERE WOB_BK_NO = #s_wob_bk_no#)
	   AND LOC.ITEM_SYS_NO      = #item_sys_no#
	   <![CDATA[ AND LOC.IN_QTY - ISNULL(LOC.ALLC_QTY,0) > 0 ]]>  	    
	   AND NOT EXISTS 
	        (SELECT WIB_BK_NO, PO_SYS_NO, ITEM_SYS_NO, LOT_ID, WH_LOC_CD 
	           FROM TL_WH_ALLC_ITEM
	          WHERE WOB_BK_NO   = #s_wob_bk_no#
	            AND SAO_SYS_NO  = #sao_sys_no#
	            AND ITEM_SYS_NO = #item_sys_no#
	            AND ITEM_SEQ    = #item_seq#
	            
	        )
	  AND EXISTS /*할당 가능한 LOCATION*/
	      (SELECT 'X'
	               FROM TL_WH_LOC WL, TL_WH_PROP WP
	              WHERE WL.LOC_CD = WP.LOC_CD
	                AND WL.WH_LOC_CD = LOC.WH_LOC_CD
	                AND WL.USE_FLG = 'Y'
	                AND WL.PROP_CD = WP.PROP_CD
	                /*AND WP.PROP_CD IN ('NON', 'STR')*/
	                AND WP.ALLOC_FLG = 'Y'
	                AND WP.USE_FLG = 'Y')
		<isNotEmpty property="fm_in_date">
				   AND CUST_LOT.LOT_ATTRIB_01 BETWEEN REPLACE(#fm_in_date#, '-', '')  AND REPLACE(#to_in_date#, '-','')
				</isNotEmpty> 
				<isNotEmpty property="fix_lot_id">
				   AND CUST_LOT.LOT_ID = #fix_lot_id#
				</isNotEmpty>
				<isNotEmpty property="lot_no">
				   AND CUST_LOT.LOT_ATTRIB_02 = #lot_no#
				</isNotEmpty>
				<isNotEmpty property="exp_dt">
				   AND CUST_LOT.LOT_ATTRIB_03 = REPLACE(#exp_dt#, '-', '')
				</isNotEmpty>
				<isNotEmpty property="lot_04">
				   AND CUST_LOT.LOT_ATTRIB_04 = #lot_04#
				</isNotEmpty>
				<isNotEmpty property="lot_05">
				   AND CUST_LOT.LOT_ATTRIB_05 = #lot_05#
				</isNotEmpty>
				<isNotEmpty property="wh_loc_cd">
				   AND LOC.WH_LOC_CD = #wh_loc_cd#
				</isNotEmpty>
	) T
	WHERE 1=1 	
		/*AND ( FWD_DIR상관없이 할당되어야하므로 주석처리
		          아래 소문자 s_wob_bk_no는 조건파라미터임.
                   주석치면서 샵대괄호 뺐음.
	          EXISTS (
	                    SELECT 'X'
	                    FROM TL_WH_OB OB
	                    WHERE ISNULL(OB.FWD_DIR, ' ') = ISNULL(T.FWD_DIR, ' ')
	                      AND OB.WOB_BK_NO = s_wob_bk_no ) 
	          OR T.KIT_FLG = 'Y')*/	
) TAB
ORDER BY TAB.DIV ASC, TAB.INBOUND_DT ASC, TAB.STOCK ASC, TAB.ITEM_SYS_NO ASC, TAB.ITEM_SEQ ASC, TAB.PO_SYS_NO ASC , TAB.LOT_ID ASC, TAB.WH_LOC_CD ASC
			</select>	
			
			<select id="searchLPShipment" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.LoadPlanPopupListVO">
				/*searchLPShipment*/
					SELECT '' AS CEHCK
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') AS TREE_VALUE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') AS TREE_NAME
					      ,'1' AS TREE_NODETYPE
					      ,'0' AS TREE_PVALUE
					      ,'' AS TREE_PNAME
					      ,'0' AS TREE_PNODETYPE
					      ,'' AS CONSOL_NO
					      ,'' AS SHIP_NO
					      ,0 AS SHIPNO_SEQ
					      ,'' AS SO_NO
					      ,'' AS WOB_BK_NO
					      ,'' AS WIB_BK_NO
					      ,'' AS SAO_SYS_NO
					      ,'' AS PO_SYS_NO
					      ,'' AS ITEM_SYS_NO
					      ,'' AS LOT_ID
					      ,'' AS WH_LOC_CD
					      ,0 AS ITEM_SEQ
					      ,'' AS SAO_NO
					      ,'' AS PO_NO
					      ,'' AS ITEM_CD
					      ,'' AS ITEM_NM
					      ,MAX(AC.BK_DATE) AS BK_DATE
					      ,SUM(AC.ITEM_EA_QTY) AS ORD_ITEM_QTY
					      ,SUM(AC.PICK_ITEM_EA_QTY) AS LP_ITEM_EA_QTY
					      ,SUM(AC.PICK_ITEM_CBM) AS LP_ITEM_CBM
					      ,SUM(AC.PICK_ITEM_CBF) AS LP_ITEM_CBF
					      ,SUM(AC.PICK_ITEM_GRS_KGS) AS LP_ITEM_GRS_KGS
					      ,SUM(AC.PICK_ITEM_GRS_LBS) AS LP_ITEM_GRS_LBS
					      ,SUM(AC.PICK_ITEM_NET_KGS) AS LP_ITEM_NET_KGS
					      ,SUM(AC.PICK_ITEM_NET_LBS) AS LP_ITEM_NET_LBS
					      ,MAX(AC.CUST_ORD_NO) AS CUST_ORD_NO
					      ,MAX(AC.CTRT_NO) AS CTRT_NO
					      ,MAX(AC.EST_OUT_DT) AS EST_OUT_DT
					      ,dbo.TL_GET_CTRT_NM(MAX(AC.CTRT_NO)) AS CTRT_NM
					      ,MAX(AC.WH_CD) AS WH_CD
					      ,MAX(dbo.TL_GET_LOC_NM(AC.WH_CD)) AS WH_NM
					      ,MAX(CASE WHEN L.LP_STS_CD = 'P' THEN 'Planed'
					                ELSE 'Allocated'
					           END) AS LP_STS_CD
					  	FROM 
				        (SELECT
				            S.WALC_NO                    ,
				            S.WOB_BK_NO                    ,
				            SI.WIB_BK_NO                    ,
				            SI.SAO_SYS_NO                    ,
				            SI.PO_SYS_NO                    ,
				            SI.ITEM_SYS_NO                    ,
				            SI.ITEM_SEQ                    ,
				            SI.ITEM_CD                    ,
				            SI.ITEM_NM                    ,
				            SI.LOT_ID                    ,
				            SI.WH_LOC_CD                    ,
				            SI.SAO_NO                    ,
				            WO.BK_DATE                    ,
				            OI.ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBM AS PICK_ITEM_CBM                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBF AS PICK_ITEM_CBF                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_KGS AS PICK_ITEM_GRS_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_LBS AS PICK_ITEM_GRS_LBS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_KGS AS PICK_ITEM_NET_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_LBS AS PICK_ITEM_NET_LBS                    ,
				            SI.PO_NO                    ,
				            WO.EST_OUT_DT                    ,
				            WO.CUST_ORD_NO                    ,
				            WO.CTRT_NO                    ,
				            WO.WH_CD                    ,
				            WO.SO_NO                
				        FROM
						TL_WH_ALLC S LEFT JOIN TL_WH_ALLC_ITEM SI ON S.WALC_NO = SI.WALC_NO                   ,
				            
				            TL_WH_OB_ITEM   OI                    ,
				            TL_WH_OB        WO                    ,
				            TL_CTRT_CUST_ITEM CI               
				        WHERE           
				            SI.WOB_BK_NO = OI.WOB_BK_NO                 
				            AND SI.SAO_SYS_NO = OI.SAO_SYS_NO                 
				            AND SI.ITEM_SYS_NO = OI.ITEM_SYS_NO                 
				            AND SI.ITEM_SEQ = OI.ITEM_SEQ                 
				            AND OI.WOB_BK_NO = WO.WOB_BK_NO                 
				            AND WO.CTRT_NO = CI.CTRT_NO                 
				            AND SI.ITEM_SYS_NO = CI.ITEM_SYS_NO                 
				            AND NOT EXISTS (
				                SELECT
				                    'X'                                          
				                FROM
				                    TL_WH_ISSU ISU                                         
				                WHERE
				                    ISU.WALC_NO = S.WALC_NO 
				            )
				        ) AC LEFT JOIN TL_WH_PSUDO_LP_SHIP P ON AC.WOB_BK_NO = P.WOB_BK_NO AND AC.SAO_SYS_NO = P.SAO_SYS_NO        
				        AND AC.ITEM_SYS_NO = P.ITEM_SYS_NO         
				        AND AC.ITEM_SEQ = P.ITEM_SEQ  
				        LEFT JOIN TL_WH_PSUDO_LP_GRP G ON P.CONSOL_NO = G.CONSOL_NO LEFT JOIN TL_WH_LOAD_PLAN L ON G.CONSOL_NO = L.CONSOL_NO    
				        AND G.LP_ID = L.LP_ID        
				        AND G.LP_SEQ = L.LP_SEQ   
				    WHERE
				        1 = 1          
						
						<isNotEmpty property="consol_no">
							AND P.CONSOL_NO = '$consol_no$'
						</isNotEmpty>
						<isNotEmpty property="wh_cd">
						 	AND AC.WH_CD = '$wh_cd$'
						</isNotEmpty> 
						<isNotEmpty property="ctrt_no">
						 	AND AC.CTRT_NO = '$ctrt_no$'
						</isNotEmpty>    
						<isNotEqual property="lp_sts_cd" compareValue="ALL">
							<isEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'P'
							</isEqual>
							<isNotEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'L'
							</isNotEqual>
						</isNotEqual>
						
						<isNotEmpty property="wob_bk_no">
						 	AND AC.WOB_BK_NO = '$wob_bk_no$'
						</isNotEmpty>
						<isNotEmpty property="cust_ord_no">
						 	AND AC.CUST_ORD_NO = '$cust_ord_no$'
						</isNotEmpty>
						<isNotEmpty property="fm_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE >= replace('$fm_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE <= replace('$to_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						
						<isNotEmpty property="item_cd">
							AND AC.ITEM_CD = '$item_cd$'
						</isNotEmpty>
						<isNotEmpty property="lot_id">
						 	AND AC.LOT_ID = '$lot_id$'
						</isNotEmpty>    
						<isNotEmpty property="fm_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT >= replace('$fm_est_date$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT <= replace('$to_est_date$','-', '') ]]>
						</isNotEmpty> 
					GROUP BY P.CONSOL_NO
					
					UNION
					
					SELECT '' CEHCK
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') AS TREE_VALUE
					      ,ISNULL(AC.WOB_BK_NO,'') AS TREE_NAME
					      ,'2' AS TREE_NODETYPE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') AS TREE_PVALUE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') AS TREE_PNAME
					      ,'1' AS TREE_PNODETYPE
					      ,'' AS CONSOL_NO
					      ,'' AS SHIP_NO
					      ,0 AS SHIPNO_SEQ
					      ,'' AS SO_NO
					      ,'' AS WOB_BK_NO
					      ,'' AS WIB_BK_NO
					      ,'' AS SAO_SYS_NO
					      ,'' AS PO_SYS_NO
					      ,'' AS ITEM_SYS_NO
					      ,'' AS LOT_ID
					      ,'' AS WH_LOC_CD
					      ,0 AS ITEM_SEQ
					      ,'' AS SAO_NO
					      ,'' AS PO_NO
					      ,'' AS ITEM_CD
					      ,'' AS ITEM_NM
					      ,MAX(AC.BK_DATE) AS BK_DATE
					      ,SUM(AC.ITEM_EA_QTY) AS ORD_ITEM_QTY
					      ,SUM(AC.PICK_ITEM_EA_QTY) AS ITEM_QTY
					      ,SUM(AC.PICK_ITEM_CBM) AS ITEM_CBM
					      ,SUM(AC.PICK_ITEM_CBF) AS ITEM_CBF
					      ,SUM(AC.PICK_ITEM_GRS_KGS) AS ITEM_GRS_KGS
					      ,SUM(AC.PICK_ITEM_GRS_LBS) AS ITEM_GRS_LBS
					      ,SUM(AC.PICK_ITEM_NET_KGS) AS ITEM_NET_KGS
					      ,SUM(AC.PICK_ITEM_NET_LBS) AS ITEM_NET_LBS
					      ,MAX(AC.CUST_ORD_NO) AS CUST_ORD_NO
					      ,MAX(AC.CTRT_NO) AS CTRT_NO
					      ,MAX(AC.EST_OUT_DT) AS EST_OUT_DT
					      ,dbo.TL_GET_CTRT_NM(MAX(AC.CTRT_NO)) AS CTRT_NM
					      ,MAX(AC.WH_CD) AS WH_CD
					      ,MAX(dbo.TL_GET_LOC_NM(AC.WH_CD)) AS WH_NM
					      ,MAX(CASE WHEN L.LP_STS_CD = 'P' THEN 'Planed'
					                ELSE 'Allocated'
					           END) AS LP_STS_CD
					  		FROM 
				        (SELECT
				            S.WALC_NO                    ,
				            S.WOB_BK_NO                    ,
				            SI.WIB_BK_NO                    ,
				            SI.SAO_SYS_NO                    ,
				            SI.PO_SYS_NO                    ,
				            SI.ITEM_SYS_NO                    ,
				            SI.ITEM_SEQ                    ,
				            SI.ITEM_CD                    ,
				            SI.ITEM_NM                    ,
				            SI.LOT_ID                    ,
				            SI.WH_LOC_CD                    ,
				            SI.SAO_NO                    ,
				            WO.BK_DATE                    ,
				            OI.ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBM AS PICK_ITEM_CBM                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBF AS PICK_ITEM_CBF                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_KGS AS PICK_ITEM_GRS_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_LBS AS PICK_ITEM_GRS_LBS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_KGS AS PICK_ITEM_NET_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_LBS AS PICK_ITEM_NET_LBS                    ,
				            SI.PO_NO                    ,
				            WO.EST_OUT_DT                    ,
				            WO.CUST_ORD_NO                    ,
				            WO.CTRT_NO                    ,
				            WO.WH_CD                    ,
				            WO.SO_NO                
				        FROM
						TL_WH_ALLC S LEFT JOIN TL_WH_ALLC_ITEM SI ON S.WALC_NO = SI.WALC_NO                   ,
				            
				            TL_WH_OB_ITEM   OI                    ,
				            TL_WH_OB        WO                    ,
				            TL_CTRT_CUST_ITEM CI               
				        WHERE           
				            SI.WOB_BK_NO = OI.WOB_BK_NO                 
				            AND SI.SAO_SYS_NO = OI.SAO_SYS_NO                 
				            AND SI.ITEM_SYS_NO = OI.ITEM_SYS_NO                 
				            AND SI.ITEM_SEQ = OI.ITEM_SEQ                 
				            AND OI.WOB_BK_NO = WO.WOB_BK_NO                 
				            AND WO.CTRT_NO = CI.CTRT_NO                 
				            AND SI.ITEM_SYS_NO = CI.ITEM_SYS_NO                 
				            AND NOT EXISTS (
				                SELECT
				                    'X'                                          
				                FROM
				                    TL_WH_ISSU ISU                                         
				                WHERE
				                    ISU.WALC_NO = S.WALC_NO 
				            )
				        ) AC LEFT JOIN TL_WH_PSUDO_LP_SHIP P ON AC.WOB_BK_NO = P.WOB_BK_NO AND AC.SAO_SYS_NO = P.SAO_SYS_NO        
				        AND AC.ITEM_SYS_NO = P.ITEM_SYS_NO         
				        AND AC.ITEM_SEQ = P.ITEM_SEQ  
				        LEFT JOIN TL_WH_PSUDO_LP_GRP G ON P.CONSOL_NO = G.CONSOL_NO LEFT JOIN TL_WH_LOAD_PLAN L ON G.CONSOL_NO = L.CONSOL_NO    
				        AND G.LP_ID = L.LP_ID        
				        AND G.LP_SEQ = L.LP_SEQ   
				    WHERE
				        1 = 1   
						
						<isNotEmpty property="consol_no">
							AND P.CONSOL_NO = '$consol_no$'
						</isNotEmpty>
						<isNotEmpty property="wh_cd">
						 	AND AC.WH_CD = '$wh_cd$'
						</isNotEmpty> 
						<isNotEmpty property="ctrt_no">
						 	AND AC.CTRT_NO = '$ctrt_no$'
						</isNotEmpty>    
						<isNotEqual property="lp_sts_cd" compareValue="ALL">
							<isEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'P'
							</isEqual>
							<isNotEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'L'
							</isNotEqual>
						</isNotEqual>
						
						<isNotEmpty property="wob_bk_no">
						 	AND AC.WOB_BK_NO = '$wob_bk_no$'
						</isNotEmpty>
						<isNotEmpty property="cust_ord_no">
						 	AND AC.CUST_ORD_NO = '$cust_ord_no$'
						</isNotEmpty>
						<isNotEmpty property="fm_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE >= replace('$fm_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE <= replace('$to_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						
						<isNotEmpty property="item_cd">
							AND AC.ITEM_CD = '$item_cd$'
						</isNotEmpty>
						<isNotEmpty property="lot_id">
						 	AND AC.LOT_ID = '$lot_id$'
						</isNotEmpty>    
						<isNotEmpty property="fm_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT >= replace('$fm_est_date$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT <= replace('$to_est_date$','-', '') ]]>
						</isNotEmpty>
					
					 GROUP BY P.CONSOL_NO,  AC.WOB_BK_NO
					 
					 
					UNION
				 
					SELECT '' CEHCK
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') + ISNULL(AC.ITEM_SYS_NO,'') AS TREE_VALUE
					      ,ISNULL(AC.ITEM_CD,'') AS TREE_NAME
					      ,'3' AS TREE_NODETYPE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') AS TREE_PVALUE
					      ,ISNULL(AC.WOB_BK_NO,'') AS TREE_PNAME
					      ,'2' AS TREE_PNODETYPE
					      ,'' AS CONSOL_NO
					      ,'' AS SHIP_NO
					      ,0 AS SHIPNO_SEQ
					      ,'' AS SO_NO
					      ,'' AS WOB_BK_NO
					      ,'' AS WIB_BK_NO
					      ,'' AS SAO_SYS_NO
					      ,'' AS PO_SYS_NO
					      ,'' AS ITEM_SYS_NO
					      ,'' AS LOT_ID
					      ,'' AS WH_LOC_CD
					      ,0 AS ITEM_SEQ
					      ,'' AS SAO_NO
					      ,'' AS PO_NO
					      ,'' AS ITEM_CD
					      ,'' AS ITEM_NM
					      ,MAX(AC.BK_DATE) AS BK_DATE
					      ,SUM(AC.ITEM_EA_QTY) AS ORD_ITEM_QTY
					      ,SUM(AC.PICK_ITEM_EA_QTY) AS ITEM_QTY
					      ,SUM(AC.PICK_ITEM_CBM) AS ITEM_CBM
					      ,SUM(AC.PICK_ITEM_CBF) AS ITEM_CBF
					      ,SUM(AC.PICK_ITEM_GRS_KGS) AS ITEM_GRS_KGS
					      ,SUM(AC.PICK_ITEM_GRS_LBS) AS ITEM_GRS_LBS
					      ,SUM(AC.PICK_ITEM_NET_KGS) AS ITEM_NET_KGS
					      ,SUM(AC.PICK_ITEM_NET_LBS) AS ITEM_NET_LBS
					      ,MAX(AC.CUST_ORD_NO) AS CUST_ORD_NO
					      ,MAX(AC.CTRT_NO) AS CTRT_NO
					      ,MAX(AC.EST_OUT_DT) AS EST_OUT_DT
					      ,dbo.TL_GET_CTRT_NM(MAX(AC.CTRT_NO)) AS CTRT_NM
					      ,MAX(AC.WH_CD) AS WH_CD
					      ,MAX(dbo.TL_GET_LOC_NM(AC.WH_CD)) AS WH_NM
					      ,MAX(CASE WHEN L.LP_STS_CD = 'P' THEN 'Planed'
					                ELSE 'Allocated'
					           END) AS LP_STS_CD
					  		FROM 
				        (SELECT
				            S.WALC_NO                    ,
				            S.WOB_BK_NO                    ,
				            SI.WIB_BK_NO                    ,
				            SI.SAO_SYS_NO                    ,
				            SI.PO_SYS_NO                    ,
				            SI.ITEM_SYS_NO                    ,
				            SI.ITEM_SEQ                    ,
				            SI.ITEM_CD                    ,
				            SI.ITEM_NM                    ,
				            SI.LOT_ID                    ,
				            SI.WH_LOC_CD                    ,
				            SI.SAO_NO                    ,
				            WO.BK_DATE                    ,
				            OI.ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBM AS PICK_ITEM_CBM                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBF AS PICK_ITEM_CBF                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_KGS AS PICK_ITEM_GRS_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_LBS AS PICK_ITEM_GRS_LBS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_KGS AS PICK_ITEM_NET_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_LBS AS PICK_ITEM_NET_LBS                    ,
				            SI.PO_NO                    ,
				            WO.EST_OUT_DT                    ,
				            WO.CUST_ORD_NO                    ,
				            WO.CTRT_NO                    ,
				            WO.WH_CD                    ,
				            WO.SO_NO                
				        FROM
						TL_WH_ALLC S LEFT JOIN TL_WH_ALLC_ITEM SI ON S.WALC_NO = SI.WALC_NO                   ,
				            
				            TL_WH_OB_ITEM   OI                    ,
				            TL_WH_OB        WO                    ,
				            TL_CTRT_CUST_ITEM CI               
				        WHERE           
				            SI.WOB_BK_NO = OI.WOB_BK_NO                 
				            AND SI.SAO_SYS_NO = OI.SAO_SYS_NO                 
				            AND SI.ITEM_SYS_NO = OI.ITEM_SYS_NO                 
				            AND SI.ITEM_SEQ = OI.ITEM_SEQ                 
				            AND OI.WOB_BK_NO = WO.WOB_BK_NO                 
				            AND WO.CTRT_NO = CI.CTRT_NO                 
				            AND SI.ITEM_SYS_NO = CI.ITEM_SYS_NO                 
				            AND NOT EXISTS (
				                SELECT
				                    'X'                                          
				                FROM
				                    TL_WH_ISSU ISU                                         
				                WHERE
				                    ISU.WALC_NO = S.WALC_NO 
				            )
				        ) AC LEFT JOIN TL_WH_PSUDO_LP_SHIP P ON AC.WOB_BK_NO = P.WOB_BK_NO AND AC.SAO_SYS_NO = P.SAO_SYS_NO        
				        AND AC.ITEM_SYS_NO = P.ITEM_SYS_NO         
				        AND AC.ITEM_SEQ = P.ITEM_SEQ  
				        LEFT JOIN TL_WH_PSUDO_LP_GRP G ON P.CONSOL_NO = G.CONSOL_NO LEFT JOIN TL_WH_LOAD_PLAN L ON G.CONSOL_NO = L.CONSOL_NO    
				        AND G.LP_ID = L.LP_ID        
				        AND G.LP_SEQ = L.LP_SEQ   
				   		WHERE
				        1 = 1   
						
						<isNotEmpty property="consol_no">
							AND P.CONSOL_NO = '$consol_no$'
						</isNotEmpty>
						<isNotEmpty property="wh_cd">
						 	AND AC.WH_CD = '$wh_cd$'
						</isNotEmpty> 
						<isNotEmpty property="ctrt_no">
						 	AND AC.CTRT_NO = '$ctrt_no$'
						</isNotEmpty>    
						<isNotEqual property="lp_sts_cd" compareValue="ALL">
							<isEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'P'
							</isEqual>
							<isNotEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'L'
							</isNotEqual>
						</isNotEqual>
						
						<isNotEmpty property="wob_bk_no">
						 	AND AC.WOB_BK_NO = '$wob_bk_no$'
						</isNotEmpty>
						<isNotEmpty property="cust_ord_no">
						 	AND AC.CUST_ORD_NO = '$cust_ord_no$'
						</isNotEmpty>
						<isNotEmpty property="fm_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE >= replace('$fm_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE <= replace('$to_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						
						<isNotEmpty property="item_cd">
							AND AC.ITEM_CD = '$item_cd$'
						</isNotEmpty>
						<isNotEmpty property="lot_id">
						 	AND AC.LOT_ID = '$lot_id$'
						</isNotEmpty>    
						<isNotEmpty property="fm_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT >= replace('$fm_est_date$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT <= replace('$to_est_date$','-', '') ]]>
						</isNotEmpty>
					   
					 GROUP BY P.CONSOL_NO
					         ,AC.WOB_BK_NO
					         ,AC.ITEM_SYS_NO
					         ,AC.ITEM_CD
			
					 
					 
					 UNION
			    
					SELECT '' CEHCK
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') + ISNULL(AC.ITEM_SYS_NO,'') + ISNULL(AC.LOT_ID,'') + '(' +
					       ISNULL(dbo.TL_GET_WH_LOC_NM(MAX(AC.WH_CD), AC.WH_LOC_CD),'') + ')' AS TREE_VALUE
					      ,ISNULL(AC.LOT_ID,'') + '(' + ISNULL(dbo.TL_GET_WH_LOC_NM(MAX(AC.WH_CD), AC.WH_LOC_CD),'') + ')' AS TREE_NAME
					      ,'4' AS TREE_NODETYPE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') + ISNULL(AC.ITEM_SYS_NO,'') AS TREE_PVALUE
					      ,AC.ITEM_CD AS TREE_PNAME
					      ,'3' AS TREE_PNODETYPE
					      ,'' AS CONSOL_NO
					      ,'' AS SHIP_NO
					      ,0 AS SHIPNO_SEQ
					      ,'' AS SO_NO
					      ,'' AS WOB_BK_NO
					      ,'' AS WIB_BK_NO
					      ,'' AS SAO_SYS_NO
					      ,'' AS PO_SYS_NO
					      ,'' AS ITEM_SYS_NO
					      ,'' AS LOT_ID
					      ,'' AS WH_LOC_CD
					      ,0 AS ITEM_SEQ
					      ,'' AS SAO_NO
					      ,'' AS PO_NO
					      ,'' AS ITEM_CD
					      ,'' AS ITEM_NM
					      ,MAX(AC.BK_DATE) AS BK_DATE
					      ,SUM(AC.ITEM_EA_QTY) AS ORD_ITEM_QTY
					      ,SUM(AC.PICK_ITEM_EA_QTY) AS ITEM_QTY
					      ,SUM(AC.PICK_ITEM_CBM) AS ITEM_CBM
					      ,SUM(AC.PICK_ITEM_CBF) AS ITEM_CBF
					      ,SUM(AC.PICK_ITEM_GRS_KGS) AS ITEM_GRS_KGS
					      ,SUM(AC.PICK_ITEM_GRS_LBS) AS ITEM_GRS_LBS
					      ,SUM(AC.PICK_ITEM_NET_KGS) AS ITEM_NET_KGS
					      ,SUM(AC.PICK_ITEM_NET_LBS) AS ITEM_NET_LBS
					      ,MAX(AC.CUST_ORD_NO) AS CUST_ORD_NO
					      ,MAX(AC.CTRT_NO) AS CTRT_NO
					      ,MAX(AC.EST_OUT_DT) AS EST_OUT_DT
					      ,dbo.TL_GET_CTRT_NM(MAX(AC.CTRT_NO)) AS CTRT_NM
					      ,MAX(AC.WH_CD) AS WH_CD
					      ,MAX(dbo.TL_GET_LOC_NM(AC.WH_CD)) AS WH_NM
					      ,MAX(CASE WHEN L.LP_STS_CD = 'P' THEN 'Planed'
					                ELSE 'Allocated'
					           END) AS LP_STS_CD
					  	FROM 
				        (SELECT
				            S.WALC_NO                    ,
				            S.WOB_BK_NO                    ,
				            SI.WIB_BK_NO                    ,
				            SI.SAO_SYS_NO                    ,
				            SI.PO_SYS_NO                    ,
				            SI.ITEM_SYS_NO                    ,
				            SI.ITEM_SEQ                    ,
				            SI.ITEM_CD                    ,
				            SI.ITEM_NM                    ,
				            SI.LOT_ID                    ,
				            SI.WH_LOC_CD                    ,
				            SI.SAO_NO                    ,
				            WO.BK_DATE                    ,
				            OI.ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBM AS PICK_ITEM_CBM                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBF AS PICK_ITEM_CBF                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_KGS AS PICK_ITEM_GRS_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_LBS AS PICK_ITEM_GRS_LBS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_KGS AS PICK_ITEM_NET_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_LBS AS PICK_ITEM_NET_LBS                    ,
				            SI.PO_NO                    ,
				            WO.EST_OUT_DT                    ,
				            WO.CUST_ORD_NO                    ,
				            WO.CTRT_NO                    ,
				            WO.WH_CD                    ,
				            WO.SO_NO                
				        FROM
						TL_WH_ALLC S LEFT JOIN TL_WH_ALLC_ITEM SI ON S.WALC_NO = SI.WALC_NO                   ,
				            
				            TL_WH_OB_ITEM   OI                    ,
				            TL_WH_OB        WO                    ,
				            TL_CTRT_CUST_ITEM CI               
				        WHERE           
				            SI.WOB_BK_NO = OI.WOB_BK_NO                 
				            AND SI.SAO_SYS_NO = OI.SAO_SYS_NO                 
				            AND SI.ITEM_SYS_NO = OI.ITEM_SYS_NO                 
				            AND SI.ITEM_SEQ = OI.ITEM_SEQ                 
				            AND OI.WOB_BK_NO = WO.WOB_BK_NO                 
				            AND WO.CTRT_NO = CI.CTRT_NO                 
				            AND SI.ITEM_SYS_NO = CI.ITEM_SYS_NO                 
				            AND NOT EXISTS (
				                SELECT
				                    'X'                                          
				                FROM
				                    TL_WH_ISSU ISU                                         
				                WHERE
				                    ISU.WALC_NO = S.WALC_NO 
				            )
				        ) AC LEFT JOIN TL_WH_PSUDO_LP_SHIP P ON AC.WOB_BK_NO = P.WOB_BK_NO AND AC.SAO_SYS_NO = P.SAO_SYS_NO        
				        AND AC.ITEM_SYS_NO = P.ITEM_SYS_NO         
				        AND AC.ITEM_SEQ = P.ITEM_SEQ  
				        LEFT JOIN TL_WH_PSUDO_LP_GRP G ON P.CONSOL_NO = G.CONSOL_NO LEFT JOIN TL_WH_LOAD_PLAN L ON G.CONSOL_NO = L.CONSOL_NO    
				        AND G.LP_ID = L.LP_ID        
				        AND G.LP_SEQ = L.LP_SEQ   
				    	WHERE
				        1 = 1   
						
					    <isNotEmpty property="consol_no">
							AND P.CONSOL_NO = '$consol_no$'
						</isNotEmpty>
						<isNotEmpty property="wh_cd">
						 	AND AC.WH_CD = '$wh_cd$'
						</isNotEmpty> 
						<isNotEmpty property="ctrt_no">
						 	AND AC.CTRT_NO = '$ctrt_no$'
						</isNotEmpty>    
						<isNotEqual property="lp_sts_cd" compareValue="ALL">
							<isEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'P'
							</isEqual>
							<isNotEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'L'
							</isNotEqual>
						</isNotEqual>
						
						<isNotEmpty property="wob_bk_no">
						 	AND AC.WOB_BK_NO = '$wob_bk_no$'
						</isNotEmpty>
						<isNotEmpty property="cust_ord_no">
						 	AND AC.CUST_ORD_NO = '$cust_ord_no$'
						</isNotEmpty>
						<isNotEmpty property="fm_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE >= replace('$fm_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE <= replace('$to_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						
						<isNotEmpty property="item_cd">
							AND AC.ITEM_CD = '$item_cd$'
						</isNotEmpty>
						<isNotEmpty property="lot_id">
						 	AND AC.LOT_ID = '$lot_id$'
						</isNotEmpty>    
						<isNotEmpty property="fm_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT >= replace('$fm_est_date$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT <= replace('$to_est_date$','-', '') ]]>
						</isNotEmpty>
						
					 GROUP BY P.CONSOL_NO
					         ,AC.WOB_BK_NO
					         ,AC.ITEM_SYS_NO
					         ,AC.ITEM_CD
					         ,AC.LOT_ID
					         ,AC.WH_LOC_CD
			
					 
					 
					 UNION
					 
					SELECT '' CEHCK
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') + ISNULL(AC.ITEM_SYS_NO,'') + ISNULL(AC.LOT_ID,'') + '(' +
					       ISNULL(dbo.TL_GET_WH_LOC_NM(AC.WH_CD, AC.WH_LOC_CD),'') + ')' + ISNULL(AC.WIB_BK_NO,'') AS TREE_VALUE
					      ,ISNULL(AC.WIB_BK_NO,'') AS TREE_NAME
					      ,'5' AS TREE_NODETYPE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') + ISNULL(AC.WOB_BK_NO,'') + ISNULL(AC.ITEM_SYS_NO,'') + ISNULL(AC.LOT_ID,'') + '(' +
					       ISNULL(dbo.TL_GET_WH_LOC_NM(AC.WH_CD, AC.WH_LOC_CD),'') + ')' AS TREE_PVALUE
					      ,ISNULL(AC.LOT_ID,'') + '(' + ISNULL(dbo.TL_GET_WH_LOC_NM(AC.WH_CD, AC.WH_LOC_CD),'') + ')' AS TREE_PNAME
					      ,'4' AS TREE_PNODETYPE
					      ,ISNULL(P.CONSOL_NO, 'EMPTY') AS CONSOL_NO
					      ,P.SHIPNO
					      ,P.SHIPNO_SEQ
					      ,AC.SO_NO
					      ,AC.WOB_BK_NO
					      ,AC.WIB_BK_NO
					      ,AC.SAO_SYS_NO
					      ,AC.PO_SYS_NO
					      ,AC.ITEM_SYS_NO
					      ,AC.LOT_ID
					      ,AC.WH_LOC_CD
					      ,AC.ITEM_SEQ
					      ,AC.SAO_NO
					      ,AC.PO_NO
					      ,AC.ITEM_CD
					      ,AC.ITEM_NM
					      ,AC.BK_DATE AS BK_DATE
					      ,AC.ITEM_EA_QTY AS ORD_ITEM_QTY
					      ,AC.PICK_ITEM_EA_QTY AS ITEM_QTY
					      ,AC.PICK_ITEM_CBM AS ITEM_CBM
					      ,AC.PICK_ITEM_CBF AS ITEM_CBF
					      ,AC.PICK_ITEM_GRS_KGS AS ITEM_GRS_KGS
					      ,AC.PICK_ITEM_GRS_LBS AS ITEM_GRS_LBS
					      ,AC.PICK_ITEM_NET_KGS AS ITEM_NET_KGS
					      ,AC.PICK_ITEM_NET_LBS AS ITEM_NET_LBS
					      ,AC.CUST_ORD_NO AS CUST_ORD_NO
					      ,AC.CTRT_NO AS CTRT_NO
					      ,AC.EST_OUT_DT AS EST_OUT_DT
					      ,dbo.TL_GET_CTRT_NM(AC.CTRT_NO) AS CTRT_NM
					      ,AC.WH_CD AS WH_CD
					      ,dbo.TL_GET_LOC_NM(AC.WH_CD) AS WH_NM
					      ,CASE WHEN L.LP_STS_CD = 'P' THEN 'Planed'
					            ELSE 'Allocated'
					       END AS LP_STS_CD
					  	FROM 
				        (SELECT
				            S.WALC_NO                    ,
				            S.WOB_BK_NO                    ,
				            SI.WIB_BK_NO                    ,
				            SI.SAO_SYS_NO                    ,
				            SI.PO_SYS_NO                    ,
				            SI.ITEM_SYS_NO                    ,
				            SI.ITEM_SEQ                    ,
				            SI.ITEM_CD                    ,
				            SI.ITEM_NM                    ,
				            SI.LOT_ID                    ,
				            SI.WH_LOC_CD                    ,
				            SI.SAO_NO                    ,
				            WO.BK_DATE                    ,
				            OI.ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBM AS PICK_ITEM_CBM                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_CBF AS PICK_ITEM_CBF                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_KGS AS PICK_ITEM_GRS_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_GRS_LBS AS PICK_ITEM_GRS_LBS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_KGS AS PICK_ITEM_NET_KGS                    ,
				            SI.PICK_ITEM_EA_QTY*CI.PKG_LV1_QTY*CI.LV1_NET_LBS AS PICK_ITEM_NET_LBS                    ,
				            SI.PO_NO                    ,
				            WO.EST_OUT_DT                    ,
				            WO.CUST_ORD_NO                    ,
				            WO.CTRT_NO                    ,
				            WO.WH_CD                    ,
				            WO.SO_NO                
				        FROM
						TL_WH_ALLC S LEFT JOIN TL_WH_ALLC_ITEM SI ON S.WALC_NO = SI.WALC_NO                   ,
				            
				            TL_WH_OB_ITEM   OI                    ,
				            TL_WH_OB        WO                    ,
				            TL_CTRT_CUST_ITEM CI               
				        WHERE           
				            SI.WOB_BK_NO = OI.WOB_BK_NO                 
				            AND SI.SAO_SYS_NO = OI.SAO_SYS_NO                 
				            AND SI.ITEM_SYS_NO = OI.ITEM_SYS_NO                 
				            AND SI.ITEM_SEQ = OI.ITEM_SEQ                 
				            AND OI.WOB_BK_NO = WO.WOB_BK_NO                 
				            AND WO.CTRT_NO = CI.CTRT_NO                 
				            AND SI.ITEM_SYS_NO = CI.ITEM_SYS_NO                 
				            AND NOT EXISTS (
				                SELECT
				                    'X'                                          
				                FROM
				                    TL_WH_ISSU ISU                                         
				                WHERE
				                    ISU.WALC_NO = S.WALC_NO 
				            )
				        ) AC LEFT JOIN TL_WH_PSUDO_LP_SHIP P ON AC.WOB_BK_NO = P.WOB_BK_NO AND AC.SAO_SYS_NO = P.SAO_SYS_NO        
				        AND AC.ITEM_SYS_NO = P.ITEM_SYS_NO         
				        AND AC.ITEM_SEQ = P.ITEM_SEQ  
				        LEFT JOIN TL_WH_PSUDO_LP_GRP G ON P.CONSOL_NO = G.CONSOL_NO LEFT JOIN TL_WH_LOAD_PLAN L ON G.CONSOL_NO = L.CONSOL_NO    
				        AND G.LP_ID = L.LP_ID        
				        AND G.LP_SEQ = L.LP_SEQ   
				    	WHERE
				        1 = 1   
						
						<isNotEmpty property="consol_no">
							AND P.CONSOL_NO = '$consol_no$'
						</isNotEmpty>
						<isNotEmpty property="wh_cd">
						 	AND AC.WH_CD = '$wh_cd$'
						</isNotEmpty> 
						<isNotEmpty property="ctrt_no">
						 	AND AC.CTRT_NO = '$ctrt_no$'
						</isNotEmpty>    
						<isNotEqual property="lp_sts_cd" compareValue="ALL">
							<isEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'P'
							</isEqual>
							<isNotEqual property="lp_sts_cd" compareValue="P">
								AND L.LP_STS_CD = 'L'
							</isNotEqual>
						</isNotEqual>
						
						<isNotEmpty property="wob_bk_no">
						 	AND AC.WOB_BK_NO = '$wob_bk_no$'
						</isNotEmpty>
						<isNotEmpty property="cust_ord_no">
						 	AND AC.CUST_ORD_NO = '$cust_ord_no$'
						</isNotEmpty>
						<isNotEmpty property="fm_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE >= replace('$fm_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_bk_dt">
						 	<![CDATA[ AND AC.BK_DATE <= replace('$to_bk_dt$','-', '') ]]>
						</isNotEmpty> 
						
						<isNotEmpty property="item_cd">
							AND AC.ITEM_CD = '$item_cd$'
						</isNotEmpty>
						<isNotEmpty property="lot_id">
						 	AND AC.LOT_ID = '$lot_id$'
						</isNotEmpty>    
						<isNotEmpty property="fm_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT >= replace('$fm_est_date$','-', '') ]]>
						</isNotEmpty> 
						<isNotEmpty property="to_est_date">
						 	<![CDATA[ AND AC.EST_OUT_DT <= replace('$to_est_date$','-', '') ]]>
						</isNotEmpty>
						ORDER by tree_value, tree_nodetype
	</select>	
	<select id="searchPoItemSysNo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.MCLPExpressListVO">
		<isEqual property="bk_tp" compareValue="WB">
			SELECT COUNT(*) AS CNT
			      ,MAX(I.ITEM_SYS_NO) AS ITEM_SYS_NO
			      ,MAX((SELECT Y.PO_SYS_NO
			              FROM TL_WB X
			                  ,TL_WB_ITEM Y
			             WHERE X.WB_NO = Y.WB_NO
			               AND X.BK_MODE = 'R'
			               AND X.BK_STS_CD = 'I'
			               AND Y.PO_SYS_NO = I.PO_SYS_NO
			               AND Y.ITEM_SYS_NO = I.ITEM_SYS_NO
			               AND X.WB_NO = #in_wb_no# )) AS PO_SYS_NO
			  FROM TL_WB W
			      ,TL_WB_ITEM I
			 WHERE W.WB_NO = I.WB_NO
			   AND W.BK_MODE = 'I'
			   AND W.BK_STS_CD = 'I'
			   AND I.PO_NO IS NOT NULL
			   AND I.WB_NO = #out_wb_no#
			   AND I.PO_NO = #po_no#
			   AND I.ITEM_CD = #item_cd#
		</isEqual>
		<isEqual property="bk_tp" compareValue="SB">
			SELECT COUNT(*) AS CNT
              ,MAX(I.ITEM_SYS_NO) AS ITEM_SYS_NO
              ,MAX(I.PO_SYS_NO) AS PO_SYS_NO
          FROM TL_SB S
              ,TL_SB_ITEM I
         WHERE S.SB_NO = I.SB_NO
           AND S.BK_STS_CD = 'I'
		   AND I.SB_NO = #wb_no#
		   AND I.PO_NO = #po_no#
		   AND I.ITEM_CD = #item_cd#
		</isEqual>
	</select>	
	<select id="searchWOLoadSeaList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.WOLoadListVO"> 
		<isEqual property="check_item" compareValue="on">
	        SELECT F.HBL_NO AS HBL_NO
                  ,F.MBL_NO AS MBL_NO
                  ,SO.CTRT_NO
                  ,dbo.TL_GET_CTRT_NM(SO.CTRT_NO) AS CTRT_NM
                  ,ISNULL(F.POL,C.POL) AS POL
                  ,dbo.TL_GET_LOC_NM(ISNULL(F.POL,C.POL)) AS POL_NM
                  ,ISNULL(F.ETD,C.POL_ETD) AS ETD
                  ,ISNULL(F.POD,C.POD) AS POD
                  ,dbo.TL_GET_LOC_NM(ISNULL(F.POD,C.POD)) AS POD_NM
                  ,ISNULL(F.ETA,C.POD_ETA) AS ETA
                  ,ISNULL(F.DEL,C.DEL) AS DEL
                  ,dbo.TL_GET_LOC_NM(ISNULL(F.DEL,C.DEL)) AS DEL_NM
                  ,C.CNTR_NO
                  ,P.PO_NO
                  ,P.ITEM_CD
                  ,P.ITEM_NM
                  ,P.LOT_NO
                  ,P.PALLET_NO
                  ,ISNULL(C.ITEM_QTY,P.ITEM_QTY) AS ITEM_QTY
                  ,ISNULL(C.ITEM_PKGQTY,P.ITEM_PKGQTY) AS ITEM_PKGQTY
                  ,ISNULL(C.ITEM_CBM,P.ITEM_CBM) AS ITEM_CBM
                  ,ISNULL(C.ITEM_KGS,P.ITEM_KGS) AS ITEM_KGS
                  ,ISNULL(C.ITEM_NET_WGT,P.ITEM_NET_WGT) AS ITEM_NET_WGT
                  ,ISNULL(C.ITEM_PKGUNIT,P.ITEM_PKGUNIT) AS ITEM_PKGUNIT
                  ,F.SHP_CD
                  ,dbo.TL_GET_CUST_NM(F.SHP_CD) AS SHP_NM
                  ,F.CNE_CD
                  ,dbo.TL_GET_CUST_NM(F.CNE_CD) AS CNE_NM
                  ,F.LINE_CD AS CARRIER_CD
                  ,dbo.TL_GET_CUST_NM(F.LINE_CD) AS CARRIER_NM
                  ,ISNULL(F.MVSL_CD,C.VSL_CD) AS VSL_CD
                  ,ISNULL(F.MVSL_NM,C.VSL_NM) AS VSL_NM
                  ,ISNULL(F.VOY,C.VOY) AS VOY
                  ,SO.RTP_NO
                  ,SO.SO_NO
                  ,F.PNL_SVC_TP_CD AS PNL_SVC_TP_CD
                  ,P.ITEM_SYS_NO
                  ,P.PO_SYS_NO
                  ,C.CNTR_TPSZ_CD
                  ,F.LINER_BKG_NO AS LINER_BKG_NO
                  ,'' AS FLIGHT_NO
                  ,CASE WHEN F.ORI_BR_CD = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
                        WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
                        ELSE ''
                   END AS EST_CMPL_DT
                  ,SO.SALES_OFC_CD
                  ,SO.SALES_PIC_ID
                  ,ISNULL(F.POR,C.POR) AS POR
                  ,dbo.TL_GET_LOC_NM(ISNULL(F.POR,C.POR)) AS POR_NM
                  ,F.AN_YMD
                  ,F.FINAL_FREEDAY_YMD
                  ,F.CNTR_YARD_CD
                  ,C.SEAL_NO1 AS CNTR_SEAL1
                  ,(SELECT MAX(J.JOB_NO)
			          FROM TL_SO_JOB J
			         WHERE J.SO_NO = F.SO_NO
			           AND J.OFC_CD = #org_cd# ) AS LOC_JOB_NO
			      ,(SELECT MAX(J.JOB_FLG)
	                  FROM TL_SO_JOB J
	                 WHERE J.SO_NO = F.SO_NO
	                   AND J.OFC_CD = #org_cd# ) AS LOC_JOB_FLG     
			      ,dbo.TL_GET_COMM_NM('J01',(SELECT MAX(J.JOB_FLG)
			                               FROM TL_SO_JOB J
			                              WHERE J.SO_NO = F.SO_NO
			                                AND J.OFC_CD = #org_cd# )) AS LOC_JOB_FLG_NM
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
			                 WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
			                 WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT_HM  
			      ,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') AS FRT_CLOSING_DT    
	              ,CASE WHEN dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') IS NULL THEN ''
	                    WHEN <![CDATA[ CONVERT(DATETIME,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S')) >= ]]> CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_BY_ORG(#org_cd#)) THEN 'Open'
	                    ELSE 'Close'
	               END AS FRT_CLOSING_FLG_NM             
              FROM (SELECT EP.SO_NO
                          ,EP.PO_NO
                          ,EP.CTRT_NO
                          ,EP.CUST_CD
                          ,EP.ORI_LOC_CD
                          ,EP.DEST_LOC_CD
                          ,EP.PO_DT
                          ,EP.FWD_IF_FLG
                          ,EPI.PO_SYS_NO
                          ,EPI.ITEM_SYS_NO
                          ,EPI.ITEM_CD
                          ,EPI.ITEM_NM
                          ,EPI.ITEM_CBM
                          ,EPI.ITEM_KGS 
                          ,EPI.ITEM_PKGQTY
                          ,EPI.ITEM_PKGUNIT
                          ,EPI.ITEM_NET_WGT
                          ,EPI.ITEM_QTY
                          ,EP.PO_DM_FLG
                          ,EPI.ITEM_DM_FLG
                          ,EPI.LOT_NO
                          ,EPI.PALLET_NO
                      FROM TL_EO_PO EP
                          ,TL_EO_PO_ITEM EPI
                     WHERE EP.EO_PO_NO = EPI.EO_PO_NO
                   ) P LEFT JOIN 
                  (SELECT EC.SO_NO
                          ,EC.CLP_NO
                          ,EC.CNTR_NO
                          ,EC.CNTR_STS_CD
                          ,EC.CNTR_TPSZ_CD
                          ,EC.SEAL_NO1
                          ,EC.SEAL_NO2
                          ,EC.VSL_CD
                          ,EC.VSL_NM
                          ,EC.VOY
                          ,EC.LINER_BK_NO
                          ,EC.MBL_NO
                          ,EC.POR
                          ,EC.POL
                          ,EC.POD
                          ,EC.DEL
                          ,EC.POL_ETD
                          ,EC.POD_ETA
                          ,EI.ITEM_QTY AS ITEM_QTY
                          ,EI.ITEM_CBM AS ITEM_CBM
                          ,EI.ITEM_KGS AS ITEM_KGS
                          ,EI.ITEM_PKGQTY AS ITEM_PKGQTY
                          ,EI.ITEM_PKGUNIT AS ITEM_PKGUNIT
                          ,EI.ITEM_NET_WGT AS ITEM_NET_WGT
                          ,EC.CLP_FLG
                          ,EC.EO_CNTR_NO
                          ,EI.PO_SYS_NO
                          ,EI.ITEM_SYS_NO
                          ,EI.SB_NO
                          ,EI.LOT_NO
                      FROM TL_EO_CNTR EC
                          ,TL_EO_CNTR_ITEM EI
                     WHERE EC.EO_CNTR_NO = EI.EO_CNTR_NO
                   ) C ON P.SO_NO = C.SO_NO
                  ,TL_EO_SFWD F
                  ,TL_SO SO 
             WHERE 1=1
               AND P.PO_SYS_NO = C.PO_SYS_NO
               AND P.ITEM_SYS_NO = C.ITEM_SYS_NO
               
               AND P.SO_NO = F.SO_NO
               AND F.SFWD_STS_CD != 'I'
               AND P.SO_NO = SO.SO_NO               
               <isNotEmpty property="mbl_no">
               AND F.MBL_NO = #mbl_no#
               </isNotEmpty>
               <isNotEmpty property="hbl_no">
               AND F.HBL_NO = #hbl_no#
               </isNotEmpty>
               <isNotEmpty property="ctrt_no">
               AND F.CTRT_NO = #ctrt_no#
               </isNotEmpty>               
               <isNotEmpty property="fm_etd">
               AND F.ETD &gt;= replace(#fm_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_etd">
               AND F.ETD &lt;= replace(#to_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="fm_eta">
               AND F.ETA &gt;= replace(#fm_eta#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_eta">
               AND F.ETA &lt;= replace(#to_eta#,'-','')
               </isNotEmpty>
			   <isNotEmpty property="pol">
               AND F.POL = #pol#
               </isNotEmpty>
               <isNotEmpty property="pod">
               AND F.POD = #pod#
               </isNotEmpty>
               <isNotEmpty property="del">
               AND F.DEL = #del#
               </isNotEmpty>
               <isNotEmpty property="carrier_cd">
               AND F.LINE_CD = #carrier_cd#
               </isNotEmpty>
               <isNotEmpty property="mvsl_cd">
               AND F.MVSL_CD = #mvsl_cd#
               </isNotEmpty>
               <isNotEmpty property="mvsl_nm">
               AND F.MVSL_NM = #mvsl_nm#
               </isNotEmpty>
               <isNotEmpty property="voy">
               AND F.VOY = #voy#
               </isNotEmpty>
               <isNotEmpty property="flight_no">
               AND SO.RTP_NO = #flight_no#
               </isNotEmpty>
               <isNotEmpty property="shp_cd">
               AND F.SHP_CD = #shp_cd#
               </isNotEmpty>
               <isNotEmpty property="cne_cd">
               AND F.CNE_CD = #cne_cd#
               </isNotEmpty>
		</isEqual>
		<isNotEqual property="check_item" compareValue="on">
			SELECT F.HBL_NO AS HBL_NO
			      ,F.MBL_NO AS MBL_NO
			      ,SO.CTRT_NO
			      ,dbo.TL_GET_CTRT_NM(SO.CTRT_NO) AS CTRT_NM
			      ,ISNULL(F.POL, C.POL) AS POL
			      ,dbo.TL_GET_LOC_NM(ISNULL(F.POL, C.POL)) AS POL_NM
			      ,ISNULL(F.ETD, C.POL_ETD) AS ETD
			      ,ISNULL(F.POD, C.POD) AS POD
			      ,dbo.TL_GET_LOC_NM(ISNULL(F.POD, C.POD)) AS POD_NM
			      ,ISNULL(F.ETA, C.POD_ETA) AS ETA
			      ,ISNULL(F.DEL, C.DEL) AS DEL
			      ,dbo.TL_GET_LOC_NM(ISNULL(F.DEL, C.DEL)) AS DEL_NM
			      ,C.CNTR_NO
			      ,'' AS PO_NO
			      ,'' AS ITEM_CD
			      ,'' AS ITEM_NM
			      ,'' AS LOT_NO
			      ,'' AS PALLET_NO
			      ,C.ITEM_QTY AS ITEM_QTY
			      ,ISNULL(C.ITEM_PKGQTY, F.PKGQTY) AS ITEM_PKGQTY
			      ,ISNULL(C.ITEM_CBM, F.CBM) AS ITEM_CBM
			      ,ISNULL(C.ITEM_KGS, F.KGS) AS ITEM_KGS
			      ,C.ITEM_NET_WGT AS ITEM_NET_WGT
			      ,ISNULL(C.ITEM_PKGUNIT, F.PKGUNIT) AS ITEM_PKGUNIT
			      ,F.SHP_CD
			      ,dbo.TL_GET_CUST_NM(F.SHP_CD) AS SHP_NM
			      ,F.CNE_CD
			      ,dbo.TL_GET_CUST_NM(F.CNE_CD) AS CNE_NM
			      ,F.LINE_CD AS CARRIER_CD
			      ,dbo.TL_GET_CUST_NM(F.LINE_CD) AS CARRIER_NM
			      ,ISNULL(F.MVSL_CD, C.VSL_CD) AS VSL_CD
			      ,ISNULL(F.MVSL_NM, C.VSL_NM) AS VSL_NM
			      ,ISNULL(F.VOY, C.VOY) AS VOY
			      ,SO.RTP_NO
			      ,SO.SO_NO
			      ,F.PNL_SVC_TP_CD AS PNL_SVC_TP_CD
			      ,'' AS ITEM_SYS_NO
			      ,'' AS PO_SYS_NO
			      ,C.CNTR_TPSZ_CD
			      ,F.LINER_BKG_NO AS LINER_BKG_NO
			      ,'' AS FLIGHT_NO
			      ,CASE
			         WHEN F.ORI_BR_CD = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN
			          F.ETD
			         WHEN F.DEST_BR_CD = #org_cd# THEN
			          F.ETA
			         ELSE
			          ''
			       END AS EST_CMPL_DT
			      ,SO.SALES_OFC_CD
			      ,SO.SALES_PIC_ID
			      ,ISNULL(F.POR, C.POR) AS POR
			      ,dbo.TL_GET_LOC_NM(ISNULL(F.POR, C.POR)) AS POR_NM
                  ,F.AN_YMD
                  ,F.FINAL_FREEDAY_YMD
                  ,F.CNTR_YARD_CD
                  ,C.SEAL_NO1 AS CNTR_SEAL1
                  ,(SELECT MAX(J.JOB_NO)
			          FROM TL_SO_JOB J
			         WHERE J.SO_NO = F.SO_NO
			           AND J.OFC_CD = #org_cd# ) AS LOC_JOB_NO
			      ,(SELECT MAX(J.JOB_FLG)
	                  FROM TL_SO_JOB J
	                 WHERE J.SO_NO = F.SO_NO
	                   AND J.OFC_CD = #org_cd# ) AS LOC_JOB_FLG     
			      ,TL_GET_COMM_NM('J01',(SELECT MAX(J.JOB_FLG)
			                               FROM TL_SO_JOB J
			                              WHERE J.SO_NO = F.SO_NO
			                                AND J.OFC_CD = #org_cd# )) AS LOC_JOB_FLG_NM
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
			                 WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
							WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT_HM
			      ,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') AS FRT_CLOSING_DT    
	              ,CASE WHEN dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') IS NULL THEN ''
	                    WHEN <![CDATA[ CONVERT(DATETIME,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S')) >= ]]> CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_BY_ORG(#org_cd#)) THEN 'Open'
	                    ELSE 'Close'
	               END AS FRT_CLOSING_FLG_NM                   
			  FROM (SELECT EC.SO_NO
			              ,EC.CLP_NO
			              ,EC.CNTR_NO
			              ,EC.CNTR_STS_CD
			              ,EC.CNTR_TPSZ_CD
			              ,EC.SEAL_NO1
			              ,EC.SEAL_NO2
			              ,EC.VSL_CD
			              ,EC.VSL_NM
			              ,EC.VOY
			              ,EC.LINER_BK_NO
			              ,EC.MBL_NO
			              ,EC.POR
			              ,EC.POL
			              ,EC.POD
			              ,EC.DEL
			              ,EC.POL_ETD
			              ,EC.POD_ETA
			              ,EC.CNTR_QTY     AS ITEM_QTY
			              ,EC.CNTR_CBM     AS ITEM_CBM
			              ,EC.CNTR_KGS     AS ITEM_KGS
			              ,EC.CNTR_PKGQTY  AS ITEM_PKGQTY
			              ,EC.CNTR_PKGUNIT AS ITEM_PKGUNIT
			              ,EC.CNTR_NET_WGT AS ITEM_NET_WGT
			              ,EC.CLP_FLG
			              ,EC.EO_CNTR_NO
			          FROM TL_EO_CNTR      EC ) C LEFT JOIN TL_EO_SFWD F ON F.SO_NO = C.SO_NO
			      ,TL_SO SO
			 WHERE 1 = 1
			   AND F.SO_NO = SO.SO_NO
			   AND F.SFWD_STS_CD != 'I'          
               <isNotEmpty property="mbl_no">
               AND F.MBL_NO = #mbl_no#
               </isNotEmpty>
               <isNotEmpty property="hbl_no">
               AND F.HBL_NO = #hbl_no#
               </isNotEmpty>
               <isNotEmpty property="ctrt_no">
               AND F.CTRT_NO = #ctrt_no#
               </isNotEmpty>               
               <isNotEmpty property="fm_etd">
               AND F.ETD &gt;= replace(#fm_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_etd">
               AND F.ETD &lt;= replace(#to_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="fm_eta">
               AND F.ETA &gt;= replace(#fm_eta#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_eta">
               AND F.ETA &lt;= replace(#to_eta#,'-','')
               </isNotEmpty>
			   <isNotEmpty property="pol">
               AND F.POL = #pol#
               </isNotEmpty>
               <isNotEmpty property="pod">
               AND F.POD = #pod#
               </isNotEmpty>
               <isNotEmpty property="del">
               AND F.DEL = #del#
               </isNotEmpty>
               <isNotEmpty property="carrier_cd">
               AND F.LINE_CD = #carrier_cd#
               </isNotEmpty>
               <isNotEmpty property="mvsl_cd">
               AND F.MVSL_CD = #mvsl_cd#
               </isNotEmpty>
               <isNotEmpty property="mvsl_nm">
               AND F.MVSL_NM = #mvsl_nm#
               </isNotEmpty>
               <isNotEmpty property="voy">
               AND F.VOY = #voy#
               </isNotEmpty>
               <isNotEmpty property="flight_no">
               AND SO.RTP_NO = #flight_no#
               </isNotEmpty>
               <isNotEmpty property="shp_cd">
               AND F.SHP_CD = #shp_cd#
               </isNotEmpty>
               <isNotEmpty property="cne_cd">
               AND F.CNE_CD = #cne_cd#
               </isNotEmpty>
		</isNotEqual>
	</select>	
	<select id="searchWOLoadAirList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.WOLoadListVO">
            SELECT F.HAWB_NO AS HBL_NO
                  ,F.MAWB_NO AS MBL_NO
                  ,SO.CTRT_NO
                  ,dbo.TL_GET_CTRT_NM(SO.CTRT_NO) AS CTRT_NM
                  ,F.ORI_LOC_CD AS POL
                  ,dbo.TL_GET_LOC_NM(F.ORI_LOC_CD) AS POL_NM
                  ,F.ONBOARD_YMD AS ETD
                  ,F.DEST_LOC_CD AS POD
                  ,dbo.TL_GET_LOC_NM(F.DEST_LOC_CD) AS POD_NM
                  ,F.ARRIVAL_YMD AS ETA
                  ,'' AS DEL
                  ,'' AS DEL_NM
                  ,'' AS CNTR_NO
                  ,P.PO_NO
                  ,P.ITEM_CD
                  ,P.ITEM_NM
                  ,P.LOT_NO
                  ,P.PALLET_NO
                  ,P.ITEM_QTY AS ITEM_QTY
                  ,P.ITEM_PKGQTY AS ITEM_PKGQTY
                  ,P.ITEM_CBM AS ITEM_CBM
                  ,P.ITEM_KGS AS ITEM_KGS
                  ,P.ITEM_NET_WGT AS ITEM_NET_WGT
                  ,P.ITEM_PKGUNIT AS ITEM_PKGUNIT
                  ,F.SHP_CD
                  ,dbo.TL_GET_CUST_NM(F.SHP_CD) AS SHP_NM
                  ,F.CNE_CD
                  ,dbo.TL_GET_CUST_NM(F.CNE_CD) AS CNE_NM
                  ,F.CARR_CUST_CD AS CARRIER_CD
                  ,dbo.TL_GET_CUST_NM(F.CARR_CUST_CD) AS CARRIER_NM
                  ,'' AS VSL_CD
                  ,'' AS VSL_NM
                  ,'' AS VOY
                  ,SO.RTP_NO
                  ,SO.SO_NO
                  ,F.PNL_SVC_TP_CD AS PNL_SVC_TP_CD
                  ,P.ITEM_SYS_NO
                  ,P.PO_SYS_NO
                  ,'' AS CNTR_TPSZ_CD
                  ,'' AS LINER_BKG_NO
                  ,F.FLIGHT_NO AS FLIGHT_NO
                  ,CASE WHEN F.ORI_BR_CD = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ONBOARD_YMD
                            WHEN F.DEST_BR_CD = #org_cd# THEN F.ARRIVAL_YMD
                            ELSE ''
                       END AS EST_CMPL_DT
			      ,SO.SALES_OFC_CD
			      ,SO.SALES_PIC_ID
			      ,(SELECT MAX(J.JOB_NO)
			          FROM TL_SO_JOB J
			         WHERE J.SO_NO = F.SO_NO
			           AND J.OFC_CD = #org_cd# ) AS LOC_JOB_NO
			      ,(SELECT MAX(J.JOB_FLG)
	                  FROM TL_SO_JOB J
	                 WHERE J.SO_NO = F.SO_NO
	                   AND J.OFC_CD = #org_cd# ) AS LOC_JOB_FLG     
			      ,dbo.TL_GET_COMM_NM('J01',(SELECT MAX(J.JOB_FLG)
			                               FROM TL_SO_JOB J
			                              WHERE J.SO_NO = F.SO_NO
			                                AND J.OFC_CD = #org_cd# )) AS LOC_JOB_FLG_NM
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
			                 WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT
			      ,CONVERT(VARCHAR(10),(SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                  FROM TL_SO_JOB J
			                 WHERE J.SO_NO = F.SO_NO
			                   AND J.OFC_CD = #org_cd# )) AS LOC_JOB_CLOSE_DT_HM   
			      ,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') AS FRT_CLOSING_DT    
	              ,CASE WHEN dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S') IS NULL THEN ''
	                    WHEN <![CDATA[ CONVERT(DATETIME,dbo.TL_GET_FRT_CLOSE_DT(F.SO_NO,#org_cd#,'','S')) >= ]]> CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_BY_ORG(#org_cd#)) THEN 'Open'
	                    ELSE 'Close'
	               END AS FRT_CLOSING_FLG_NM  
              FROM (SELECT EP.SO_NO
                          ,EP.PO_NO
                          ,EP.CTRT_NO
                          ,EP.CUST_CD
                          ,EP.ORI_LOC_CD
                          ,EP.DEST_LOC_CD
                          ,EP.PO_DT
                          ,EP.FWD_IF_FLG
                          ,EPI.PO_SYS_NO
                          ,EPI.ITEM_SYS_NO
                          ,EPI.ITEM_CD
                          ,EPI.ITEM_NM
                          ,EPI.ITEM_CBM
                          ,EPI.ITEM_KGS 
                          ,EPI.ITEM_PKGQTY
                          ,EPI.ITEM_PKGUNIT
                          ,EPI.ITEM_NET_WGT
                          ,EPI.ITEM_QTY
                          ,EP.PO_DM_FLG
                          ,EPI.ITEM_DM_FLG
                          ,EPI.LOT_NO
                          ,EPI.PALLET_NO
                      FROM TL_EO_PO EP
                          ,TL_EO_PO_ITEM EPI
                     WHERE EP.EO_PO_NO = EPI.EO_PO_NO
                   ) P
                  ,TL_EO_AFWD F
                  ,TL_SO SO 
             WHERE 1=1
               AND P.SO_NO = F.SO_NO
               AND P.SO_NO = SO.SO_NO            
               <isNotEmpty property="mbl_no">
               AND F.MAWB_NO = #mbl_no#
               </isNotEmpty>
               <isNotEmpty property="hbl_no">
               AND F.HAWB_NO = #hbl_no#
               </isNotEmpty>
               <isNotEmpty property="ctrt_no">
               AND F.CTRT_NO = #ctrt_no#
               </isNotEmpty>
               <isNotEmpty property="fm_etd">
               AND F.ONBOARD_YMD &gt;= replace(#fm_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_etd">
               AND F.ONBOARD_YMD &lt; replace(#to_etd#,'-','')
               </isNotEmpty>
               <isNotEmpty property="fm_eta">
               AND F.ARRIVAL_YMD &gt;= replace(#fm_eta#,'-','')
               </isNotEmpty>
               <isNotEmpty property="to_eta">
               AND F.ARRIVAL_YMD &lt; replace(#to_eta#,'-','')
               </isNotEmpty>
               <isNotEmpty property="pol">
               AND F.ORI_LOC_CD = #pol#
               </isNotEmpty>
               <isNotEmpty property="pod">
               AND F.DEST_LOC_CD = #pod#
               </isNotEmpty>
               <isNotEmpty property="carrier_cd">
               AND F.CARRIER_CD = #carrier_cd#
               </isNotEmpty>
               <isNotEmpty property="shp_cd">
               AND F.SHP_CD = #shp_cd#
               </isNotEmpty>
               <isNotEmpty property="cne_cd">
               AND F.CNE_CD = #cne_cd#
               </isNotEmpty>
               <isNotEmpty property="flight_no">
               AND F.FLIGHT_NO = #flight_no#
               </isNotEmpty>
	</select>
	
	<select id="searchManualAllcPopupHeaderInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.ManualAllcPopupHeaderInOutVO">
	/*WHOutAllcation.searchManualAllcPopupHeaderInfo*/
SELECT TAB.*
  FROM ( 
		SELECT T.CURR_RUM - 1 AS PREV_RUM
		     , T.CURR_RUM
		     , CASE WHEN MAX(T.CURR_RUM) OVER() = T.CURR_RUM THEN 9999999999 ELSE T.CURR_RUM + 1 END AS NEXT_RUM
		     , T.SAO_SYS_NO
		     , T.ITEM_SYS_NO
		     , T.ITEM_SEQ
		     , T.ITEM_CD
		     , T.ITEM_NM
		     , T.INBOUND_DT
		     , T.FIX_LOT_ID
		     , T.LOT_NO
		     , T.EXP_DT
		     , T.LOT_04
		     , T.LOT_05
		     , T.ITEM_EA_QTY
		     , ISNULL((SELECT SUM(PICK_ITEM_EA_QTY)
		         FROM TL_WH_ALLC_ITEM A
		        WHERE A.WOB_BK_NO = T.WOB_BK_NO
		          AND A.SAO_SYS_NO = T.SAO_SYS_NO
		          AND A.ITEM_SYS_NO = T.ITEM_SYS_NO
		          AND A.ITEM_SEQ = T.ITEM_SEQ
		       ),0) AS ALLOC_EA_QTY
		     , (SELECT WALC_NO
		          FROM TL_WH_ALLC A
		         WHERE A.WOB_BK_NO = T.WOB_BK_NO
		       ) AS WALC_NO
		     , ITEM_WH.FIX_LOC_CD
		     , dbo.TL_GET_WH_LOC_NM(T.WH_CD, ITEM_WH.FIX_LOC_CD) AS  FIX_LOC_CD_NM 
		     , T.WOB_BK_NO AS S_WOB_BK_NO
		  FROM (
		        SELECT ROW_NUMBER() OVER(ORDER BY TT.WOB_BK_NO ASC, TT.SAO_SYS_NO ASC, TT.ITEM_SYS_NO ASC, TT.ITEM_SEQ ASC) AS CURR_RUM
		             , TT.*
		         FROM (
			          SELECT OB_ITEM.*
			               , OB.CTRT_NO
			               , OB.WH_CD  
		                   , (SELECT SUM(ISNULL(PICK_ITEM_EA_QTY,0))
						        FROM TL_WH_ALLC_ITEM AL
						       WHERE AL.WOB_BK_NO = OB_ITEM.WOB_BK_NO
							     AND AL.SAO_SYS_NO  = OB_ITEM.SAO_SYS_NO
							     AND AL.ITEM_SYS_NO = OB_ITEM.ITEM_SYS_NO
							     AND AL.ITEM_SEQ    = OB_ITEM.ITEM_SEQ) AS PICK_ITEM_EA_QTY            
			            FROM TL_WH_OB_ITEM OB_ITEM
			               , TL_WH_OB OB           
			           WHERE OB_ITEM.WOB_BK_NO = OB.WOB_BK_NO
			           <isEqual property="div" compareValue="ALLC">	
			            AND OB_ITEM.WOB_BK_NO = #wob_bk_no#
			           </isEqual>
			           <isEqual property="div" compareValue="WAVE">
			            AND OB_ITEM.WOB_BK_NO IN (SELECT WOB_BK_NO
			                                        FROM TL_WH_WAVE_OB
			                                       WHERE WAVE_NO =  #wave_no#
			                                      )
			           </isEqual>
			           ) TT
			           <isEqual property="cond_div" compareValue="UN">
					    /* UnAllocated */	
					    <![CDATA[ 
				        WHERE ISNULL(TT.ITEM_EA_QTY,0) - ISNULL(TT.PICK_ITEM_EA_QTY,0) > 0
				        ]]>
				        </isEqual>
		       ) T LEFT JOIN TL_CTRT_CUST_ITEM_WH ITEM_WH ON T.CTRT_NO = ITEM_WH.CTRT_NO
		AND T.ITEM_SYS_NO = ITEM_WH.ITEM_SYS_NO
		   AND T.WH_CD = ITEM_WH.WH_CD
     	) TAB
 		WHERE TAB.CURR_RUM = #rum#
	</select>	
	<!-- Khang.Dong (E) -->
	
	<!-- Nam Tran (S) -->
	<select id="searchTlCtrtInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.TlCtrtVO">
	SELECT C.*
	FROM
	(
		SELECT DISTINCT C.CTRT_NO,
				C.CTRT_NM,
				C.SALES_OFC_CD                       ,
	            dbo.TL_GET_ORG_NM(C.SALES_OFC_CD) AS SALES_OFC_NM                       ,
	            C.SALES_PIC_ID                       ,
	            dbo.TL_GET_PIC_NM(C.SALES_PIC_ID) AS SALES_PIC_NM             ,
	            C.CTRT_CUST_CD, 
				'' RTP_NO,
				'' MAIN_SVC_TYPE,
				'' ORD_TP_NM                       ,
	            '' ORD_TP_LVL1_CD                       ,
	            '' ORD_TP_LVL2_CD                       ,
	            '' ORD_TP_LVL3_CD                       ,
	            '' ORD_TP_LVL4_CD                       ,
	            ROW_NUMBER() OVER(PARTITION BY C.CTRT_NO ORDER BY C.CTRT_NO) RNUM
	    FROM TL_CTRT C
	    WHERE 1 = 1
	    	AND C.CTRT_NO = #ctrt_no#
	    	<isNotNull property="ctrt_use_flg">
				<isEmpty property="ctrt_use_flg">
	               	AND C.CTRT_USE_FLG = 'Y'
	            </isEmpty>
			</isNotNull>
	) C
	WHERE 1 = 1
	AND RNUM = 1
	
	<!-- 
	SELECT
        A.*               ,
        CO.COSALES_OFC_CD               ,
        CO.COSALES_PIC_ID               ,
        CO.COSALES_PIC_NM           
    FROM
        (                     SELECT
            DISTINCT C.CTRT_NO                       ,
            C.CTRT_NM            ,
            CASE T.RTP_CNT 
                WHEN '1' THEN T.RTP_NO 
                ELSE '' 
            END AS RTP_NO                       ,
            C.SALES_OFC_CD                       ,
            dbo.TL_GET_ORG_NM(C.SALES_OFC_CD) AS SALES_OFC_NM                       ,
            C.SALES_PIC_ID                       ,
            dbo.TL_GET_PIC_NM(C.SALES_PIC_ID) AS SALES_PIC_NM             ,
            CASE T.RTP_CNT 
                WHEN '1' THEN T.PNL_SVC_TP_CD 
                ELSE '' 
            END AS MAIN_SVC_TYPE                       ,
            dbo.TL_GET_COMM_NM('FG',
            CASE T.RTP_CNT 
                WHEN '1' THEN T.PNL_SVC_TP_CD 
                ELSE '' 
            END) AS MAIN_SVC_TP_NM                       ,
            T.ORD_TP_NM                       ,
            T.ORD_TP_LVL1_CD                       ,
            T.ORD_TP_LVL2_CD                       ,
            T.ORD_TP_LVL3_CD                       ,
            T.ORD_TP_LVL4_CD                       ,
            C.CTRT_CUST_CD                       ,
            (SELECT
                COUNT(*)                           
            FROM
                TL_RTP R,
                TL_CTRT_ORD_TP TP                          
            WHERE
                R.RTP_USE_FLG = 'Y'                            
                AND TP.ORD_TP_USE_FLG = 'Y'                            
                AND R.CTRT_NO = TP.CTRT_NO                            
                AND R.ORD_TP_CD = TP.ORD_TP_CD                            
                AND TP.CTRT_NO = C.CTRT_NO
                           AND R.CTRT_NO = #ctrt_no#
 
                        <isNotNull property="rtp_no">
                        	<isNotEmpty property="rtp_no">
                        		AND R.RTP_NO = #rtp_no#
                        	</isNotEmpty>
                        </isNotNull>
                        
                        <isNotNull property="ord_tp_lvl1_cd">
                        	<isNotEmpty property="ord_tp_lvl1_cd">
                        		AND TP.ORD_TP_LVL1_CD IN (#ord_tp_lvl1_cd#)
                        	</isNotEmpty>
                        </isNotNull>
                        
                        <isNotNull property="ord_tp_lvl2_cd">
                        	<isNotEmpty property="ord_tp_lvl2_cd">
	                        	AND TP.ORD_TP_LVL2_CD IN (#ord_tp_lvl2_cd#)
	                        </isNotEmpty>
                        </isNotNull>
                          
                          AND TP.PNL_SVC_TP_CD IS NOT NULL ) AS PNL_SVC_TP_CD_CNT    
                      ,CASE WHEN (SELECT COUNT(*) FROM dbo.TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
                                 (SELECT MAX(L.LOC_CD) FROM dbo.TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd#)
                            ELSE ''
                       END LOC_CD
                      ,CASE WHEN (SELECT COUNT(*) FROM dbo.TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
                                 dbo.TL_GET_LOC_NM((SELECT MAX(L.LOC_CD) FROM dbo.TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd#))
                            ELSE ''
                       END LOC_ADDR           
                  FROM dbo.TL_CTRT C
                      ,(SELECT R.RTP_NO
                              ,R.CTRT_NO
                              ,R.ORD_TP_CD
                              ,TP.ORD_TP_NM
                              ,COUNT(*) OVER (PARTITION BY R.CTRT_NO) AS RTP_CNT
															,ROW_NUMBER() OVER(PARTITION BY R.CTRT_NO ORDER BY R.CTRT_NO) AS ROWNUM
                              ,TP.ORD_TP_LVL1_CD
                              ,TP.ORD_TP_LVL2_CD
                              ,TP.ORD_TP_LVL3_CD
                              ,TP.ORD_TP_LVL4_CD
                              ,TP.PNL_SVC_TP_CD
                          FROM dbo.TL_RTP R, dbo.TL_CTRT_ORD_TP TP
                         WHERE R.CTRT_NO = TP.CTRT_NO
                           AND R.ORD_TP_CD = TP.ORD_TP_CD
                           <isNotNull property="ctrt_use_flg">
                           	<isEmpty property="ctrt_use_flg">
                        		AND R.RTP_USE_FLG = 'Y'
                           		AND TP.ORD_TP_USE_FLG = 'Y'
                        	</isEmpty>
                           </isNotNull>  
                           AND R.CTRT_NO = #ctrt_no#
 
 						<isNotNull property="rtp_no">
 							<isNotEmpty property="rtp_no">
	                        	AND R.RTP_NO = #rtp_no#
	                        </isNotEmpty>
 						</isNotNull>
                        
                        <isNotNull property="ord_tp_lvl1_cd">
                        	<isNotEmpty property="ord_tp_lvl1_cd">
	                        	AND TP.ORD_TP_LVL1_CD IN (#ord_tp_lvl1_cd#)
	                        </isNotEmpty>
                        </isNotNull>
                        
                        <isNotNull property="ord_tp_lvl2_cd">
                        	<isNotEmpty property="ord_tp_lvl2_cd">
	                        	AND TP.ORD_TP_LVL2_CD IN (#ord_tp_lvl2_cd#)
	                        </isNotEmpty>
                        </isNotNull>  
                       )T
                 WHERE C.CTRT_NO = T.CTRT_NO
                   AND C.CTRT_NO = #ctrt_no#
                   
 					<isNotNull property="ctrt_use_flg">
 						<isEmpty property="ctrt_use_flg">
	                       	AND C.CTRT_USE_FLG = 'Y'
	                    </isEmpty>
 					</isNotNull> 
                    
                    <isNotNull property="ex_in_cd">
                    	<isEmpty property="ex_in_cd">
	                       	AND C.EX_IN_CD = #ex_in_cd#
	                    </isEmpty>
                    </isNotNull>
                   AND T.ROWNUM = 1
               ) A LEFT JOIN  
              (SELECT A.*
                      ,dbo.TL_GET_PIC_NM(A.COSALES_PIC_ID) AS COSALES_PIC_NM
                  FROM (SELECT R.CTRT_NO
                              ,R.RTP_NO
                              ,CO.COSALES_OFC_CD
                              ,CO.COSALES_PIC_ID
                              ,ROW_NUMBER() OVER(PARTITION BY CO.CTRT_NO, CO.ORD_TP_CD ORDER BY CO.COSALES_SEQ) RNUM
                          FROM TL_RTP R
                              ,TL_CTRT_COSALES CO
                              ,TL_USER U
                         WHERE R.CTRT_NO = CO.CTRT_NO
                           AND R.ORD_TP_CD = CO.ORD_TP_CD
                           AND CO.COSALES_USE_FLG = 'Y'     
                           AND CO.COSALES_PIC_ID = U.SALES_PIC_ID
                           AND U.USE_FLG = 'Y'
                           AND R.CTRT_NO = #ctrt_no#
                       ) A
                 WHERE A.RNUM = 1                  
               ) CO ON A.CTRT_NO = CO.CTRT_NO AND A.RTP_NO = CO.RTP_NO -->
	</select>
	
	<select id="searchGrpCodeList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CodeInfoVO">
	/* WmsCommonSQL.xml > searchGrpCodeList */
	
      SELECT (100000 +(ROW_NUMBER() OVER (ORDER BY A.CODE_CD) * 10)) AS SORTKEY
            ,A.CODE_CD AS CODE
            ,A.CODE_NM AS NAME
        FROM (
    <isEqual property="sortKey" compareValue="9">
    	<!-- SELECT GRP_CD,
                    GRP_CD CODE_CD,
                    GRP_NM CODE_NM
             FROM   TL_CODE_GRP
             WHERE 1 = 1  
             AND GRP_USE_FLG = 'Y' -->
             
             SELECT PRNT_COM_CD GRP_CD, COM_CD CODE_CD, COM_CD_NM CODE_NM 
            FROM TB_COM_CD 
			WHERE 1 = 1 
			AND USE_FLG = 'Y' 
			AND DELT_FLG = 'N'
    </isEqual>
    
    <isNotEqual property="sortKey" compareValue="9">
    	<!-- SELECT G.GRP_CD
                    ,D.CODE_CD
                    ,D.CODE_NM
                    ,D.DISP_SEQ
                FROM TL_CODE_GRP G
                    ,TL_CODE_DTL D
               WHERE G.GRP_CD = D.GRP_CD
                 AND G.GRP_USE_FLG = 'Y'
                 AND D.CODE_USE_FLG = 'Y' 
                 AND D.GRP_CD = #grp_cd# -->
         SELECT G.PRNT_COM_CD GRP_CD
                    ,D.CD_VAL CODE_CD
                    ,D.CD_NM CODE_NM
                    ,G.CD_SPC_QTY DISP_SEQ
                    ,D.SRT_SEQ SRT_SEQ
                FROM TB_COM_CD G
                    ,TB_COM_CD_DTL D
               WHERE G.COM_CD = D.COM_CD
                  AND G.USE_FLG = 'Y'
				  AND D.USE_FLG  = 'Y' 
				  AND D.COM_CD = #grp_cd# 
                 
    </isNotEqual>
    ) AS A 
    <isEqual property="sortKey" compareValue="0">
    	ORDER BY A.SRT_SEQ
    </isEqual>
    
    <isEqual property="sortKey" compareValue="1">
    	ORDER BY A.CODE_NM
    </isEqual>
    
    <isEqual property="sortKey" compareValue="2">
    	ORDER BY A.CODE_CD
    </isEqual>      
	</select>
	
	<select id="searchTlCustInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.TlCustVO">
	/**wms.common.all.searchTlCustInfo*/
      SELECT CUST_CD, ISNULL(CUST_NM, '') AS CUST_NM, ISNULL(BL_ADDR1, '') AS ADDR1, ISNULL(BL_ADDR2, '') AS ADDR2, ISNULL(BL_ADDR3, '') AS ADDR3, ISNULL(BL_ADDR4, '') AS ADDR4, ISNULL(BL_ADDR5, '') AS ADDR5, ISNULL(TEL, '') AS TEL, ISNULL(FAX, '') AS FAX, ORG_FLG, ISNULL(CUST_LOC_NM, '') AS CUST_LOC_NM
        FROM dbo.TL_CUST
       WHERE CUST_CD = #cust_cd#
         AND USE_FLG = 'Y'
	</select>
	
	<select id="searchServiceOrderList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.ServiceOrderVO">
      SELECT DISTINCT S.CTRT_NO,
                      S.RTP_NO,
                      S.SO_NO,
                      S.SALES_OFC_CD,
                      S.SALES_PIC_ID,
                      S.CTRT_CUST_CD,
                      A.HBL_NO,
                      A.MBL_NO,
                      A.HAWB_NO,
                      A.MAWB_NO,
                      A.LINER_BKG_NO,
                      A.POL,
                      A.POD,
                      A.ETD AS POL_ETD,
                      A.ETA AS POD_ETA,
                      A.ONBOARD_DT,
                      A.VSL_CD,
                      A.VSL_NM,
                      A.VOY,
                      A.CARRIER_CD,
                      A.SVC_TP_CD,
                      A.CNE_CD,
                      A.SHP_CD,
                      A.POR,
                      A.DEL,
                      dbo.TL_GET_CTRT_NM(S.CTRT_NO) AS CTRT_NM,
                      dbo.TL_GET_CUST_NM(S.CTRT_CUST_CD) AS CTRT_CUST_NM,
                      dbo.TL_GET_CUST_NM(A.CNE_CD) AS CNE_NM,
                      (SELECT B.BL_ADDR1 FROM TL_CUST B WHERE B.CUST_CD = A.CNE_CD) AS CNE_ADDR1,
                      (SELECT B.BL_ADDR2 FROM TL_CUST B WHERE B.CUST_CD = A.CNE_CD) AS CNE_ADDR2,
                      (SELECT B.BL_ADDR3 FROM TL_CUST B WHERE B.CUST_CD = A.CNE_CD) AS CNE_ADDR3,
                      (SELECT B.BL_ADDR4 FROM TL_CUST B WHERE B.CUST_CD = A.CNE_CD) AS CNE_ADDR4,
                      (SELECT B.BL_ADDR5 FROM TL_CUST B WHERE B.CUST_CD = A.CNE_CD) AS CNE_ADDR5,
                      dbo.TL_GET_CUST_NM(A.SHP_CD) AS SHP_NM,
                      (SELECT B.BL_ADDR1 FROM TL_CUST B WHERE B.CUST_CD = A.SHP_CD) AS SHP_ADDR1,
                      (SELECT B.BL_ADDR2 FROM TL_CUST B WHERE B.CUST_CD = A.SHP_CD) AS SHP_ADDR2,
                      (SELECT B.BL_ADDR3 FROM TL_CUST B WHERE B.CUST_CD = A.SHP_CD) AS SHP_ADDR3,
                      (SELECT B.BL_ADDR4 FROM TL_CUST B WHERE B.CUST_CD = A.SHP_CD) AS SHP_ADDR4,
                      (SELECT B.BL_ADDR5 FROM TL_CUST B WHERE B.CUST_CD = A.SHP_CD) AS SHP_ADDR5,
                      dbo.TL_GET_CUST_NM(A.CARRIER_CD) AS CARRIER_NM,
                      dbo.TL_GET_ORG_NM(S.SALES_OFC_CD) AS SALES_OFC_NM,
                      dbo.TL_GET_PIC_NM(S.SALES_PIC_ID) AS SALES_PIC_NM,
                      dbo.TL_GET_LOC_NM(A.POL) AS POL_NM,
                      dbo.TL_GET_LOC_NM(A.POD) AS POD_NM,
                      dbo.TL_GET_LOC_NM(A.POR) AS POR_NM,
                      dbo.TL_GET_LOC_NM(A.DEL) AS DEL_NM,
                      dbo.TL_GET_COMM_NM('SS4', S.SO_STS_CD) AS SO_STS_CD,
                      O.ORD_TP_CD,
                      O.ORD_TP_NM,
                      O.ORD_TP_LVL1_CD,
                      O.ORD_TP_LVL2_CD,
                      O.ORD_TP_LVL3_CD,
                      O.ORD_TP_LVL4_CD,
                      A.NTFY_CD,
                      dbo.TL_GET_CUST_NM(A.NTFY_CD) AS NTFY_NM,
                      (SELECT B.BL_ADDR1 FROM TL_CUST B WHERE B.CUST_CD = A.NTFY_CD) AS NTFY_ADDR1,
                      (SELECT B.BL_ADDR2 FROM TL_CUST B WHERE B.CUST_CD = A.NTFY_CD) AS NTFY_ADDR2,
                      (SELECT B.BL_ADDR3 FROM TL_CUST B WHERE B.CUST_CD = A.NTFY_CD) AS NTFY_ADDR3,
                      (SELECT B.BL_ADDR4 FROM TL_CUST B WHERE B.CUST_CD = A.NTFY_CD) AS NTFY_ADDR4,
                      (SELECT B.BL_ADDR5 FROM TL_CUST B WHERE B.CUST_CD = A.NTFY_CD) AS NTFY_ADDR5,
                      A.SVCTERM_FR_CD,
                      A.SVCTERM_TO_CD,
                      A.FREIGHTTERM_CD,
                      A.INCOTERMS_CD,
                      O.PNL_SVC_TP_CD,
                      dbo.TL_GET_COMM_NM('FG', O.PNL_SVC_TP_CD) AS PNL_SVC_TP_NM,
											ISNULL((SELECT CONVERT(VARCHAR(20), T.EST_CMPL_DT, 120)
		                     FROM TL_EO_WO T
		                    WHERE T.SO_NO = S.SO_NO
		                      AND (SELECT ROW_NUMBER() OVER (ORDER BY T.EST_CMPL_DT)) = 1)
		                 ,(SELECT CONVERT(VARCHAR(20), T.EST_CMPL_DT, 120)
		                     FROM TL_EO_WB T
		                    WHERE T.SO_NO = S.SO_NO
		                      AND (SELECT ROW_NUMBER() OVER (ORDER BY T.EST_CMPL_DT)) = 1)) AS EST_CMPL_DT,
		              (SELECT MAX(J.JOB_NO)
			             FROM TL_SO_JOB J
			            WHERE J.SO_NO = S.SO_NO
			              AND J.OFC_CD = 'KRSELLB' ) AS LOC_JOB_NO,
			          (SELECT MAX(J.JOB_FLG)
	                     FROM TL_SO_JOB J
	                    WHERE J.SO_NO = S.SO_NO
	                      AND J.OFC_CD = 'KRSELLB' ) AS LOC_JOB_FLG,    
			          dbo.TL_GET_COMM_NM('J01',(SELECT MAX(J.JOB_FLG)
			                                  FROM TL_SO_JOB J
			                                 WHERE J.SO_NO = S.SO_NO
			                                   AND J.OFC_CD = 'KRSELLB' )) AS LOC_JOB_FLG_NM,
								CONVERT(VARCHAR(20), (SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                     FROM TL_SO_JOB J
			                    WHERE J.SO_NO = S.SO_NO
			                      AND J.OFC_CD = 'KRSELLB' ), 120) AS LOC_JOB_CLOSE_DT,
								CONVERT(VARCHAR(20), (SELECT MAX(J.JOB_CLOSE_SYS_DT)
			                     FROM TL_SO_JOB J
			                    WHERE J.SO_NO = S.SO_NO
			                      AND J.OFC_CD = 'KRSELLB' ), 120) AS LOC_JOB_CLOSE_DT_HM,
			          dbo.TL_GET_FRT_CLOSE_DT(S.SO_NO,'KRSELLB','','S') AS FRT_CLOSING_DT,    
		              CASE WHEN dbo.TL_GET_FRT_CLOSE_DT(S.SO_NO,'KRSELLB','','S') IS NULL THEN ''
	                       <![CDATA[ WHEN CONVERT(VARCHAR(20), dbo.TL_GET_FRT_CLOSE_DT(S.SO_NO,'KRSELLB','','S'), 120) >= CONVERT(VARCHAR(20), dbo.TL_GET_TM_ZONE_DATE_BY_ORG('KRSELLB'), 120) THEN 'Open' ]]>
		                   ELSE 'Close'
		              END AS FRT_CLOSING_FLG_NM     
        FROM TL_SO S LEFT JOIN (SELECT SO.CTRT_NO,
                     SO.RTP_NO,
                     SO.SO_NO,
                     SF.POL,
                     SF.POD,
                     SF.ETD,
                     SF.ETA,
                     SF.ONBOARD_DT,
                     SF.MVSL_CD AS VSL_CD,
                     SF.MVSL_NM AS VSL_NM,
                     SF.VOY,
                     SF.LINE_CD AS CARRIER_CD,
                     SF.SVC_TP_CD,
                     SF.CNE_CD,
                     SF.SHP_CD,
                     SF.POR,
                     SF.DEL,
                     'S' AS BL_TP,
                     SF.HBL_NO,
                     SF.MBL_NO,
                     SF.LINER_BKG_NO,
                     '' AS HAWB_NO,
                     '' AS MAWB_NO,
                     SF.NTFY_CD,
                     SF.SVCTERM_FR_CD,
                     SF.SVCTERM_TO_CD,
                     SF.FREIGHTTERM_CD,
                     SF.INCOTERMS_CD,
                     SF.ORI_BR_CD,
		             SF.TRI_BR_CD,
		             SF.DEST_BR_CD
                FROM TL_SO SO, TL_EO_SFWD SF
               WHERE SO.SO_NO = SF.SO_NO
              UNION
              SELECT SO.CTRT_NO,
                     SO.RTP_NO,
                     SO.SO_NO,
                     AF.ORI_LOC_CD AS POL,
                     AF.TS1_LOC_CD AS POD,
                     AF.ONBOARD_YMD AS ETD,
                     AF.ARRIVAL_YMD AS ETA,
                     AF.ONBOARD_YMD AS ONBOARD_DT,
                     AF.FLIGHT_NO AS VSL_CD,
                     '' AS VSL_NM,
                     '' AS VOY,
                     AF.CARRIER_CD,
                     AF.SVC_TP_CD,
                     AF.CNE_CD,
                     AF.SHP_CD,
                     '' AS POR,
                     AF.DEST_LOC_CD AS DEL,
                     'A' AS BL_TP,
                     '' AS HBL_NO,
                     '' AS MBL_NO,
                     '' AS LINER_BKG_NO,
                     AF.HAWB_NO,
                     AF.MAWB_NO,
                     AF.NTFY_CD,
                     '' AS SVCTERM_FR_CD,
                     '' AS SVCTERM_TO_CD,
                     '' AS FREIGHTTERM_CD,
                     AF.INCOTERMS,
                     AF.ORI_BR_CD,
		             AF.TRI_BR_CD,
		             AF.DEST_BR_CD
                FROM TL_SO SO, TL_EO_AFWD AF
               WHERE SO.SO_NO = AF.SO_NO
                 <![CDATA[ AND AF.SVC_TP_CD <> 'SA' ]]>
                 ) A ON S.SO_NO = A.SO_NO
							LEFT JOIN TL_EO_WO T ON S.SO_NO = T.SO_NO
							LEFT JOIN TL_EO_WB WB ON S.SO_NO = WB.SO_NO,
             (SELECT  T.CTRT_NO
                     ,R.RTP_NO
                     ,T.ORD_TP_CD
                     ,T.ORD_TP_NM
                     ,T.ORD_TP_LVL1_CD
                     ,T.ORD_TP_LVL2_CD
                     ,T.ORD_TP_LVL3_CD
                     ,T.ORD_TP_LVL4_CD
                     ,T.PNL_SVC_TP_CD
               FROM TL_CTRT_ORD_TP T, TL_RTP R
              WHERE T.CTRT_NO = R.CTRT_NO
                AND T.ORD_TP_CD = R.ORD_TP_CD) O
       WHERE S.CTRT_NO = O.CTRT_NO
         AND S.RTP_NO = O.RTP_NO
	     AND T.CR_FLG = 'N'
         
         <isNotEmpty property="so_no">
         	AND S.SO_NO = #so_no#
         </isNotEmpty>
         
         <isNotEmpty property="ctrt_no">
         	AND S.CTRT_NO = #ctrt_no#
         </isNotEmpty>
         
         <isNotEmpty property="main_ord_tp_lvl1_cd">
         	AND O.ORD_TP_LVL1_CD IN (#main_ord_tp_lvl1_cd#)
         </isNotEmpty>
         
         <isNotEmpty property="main_ord_tp_lvl2_cd">
         	AND O.ORD_TP_LVL2_CD IN (#main_ord_tp_lvl2_cd#)
         </isNotEmpty>
         
         <isNotEmpty property="ord_tp_lvl1_cd">
         	AND O.ORD_TP_LVL1_CD = #ord_tp_lvl1_cd#
         </isNotEmpty>
         
         <isNotEmpty property="ord_tp_lvl2_cd">
         	AND O.ORD_TP_LVL2_CD = #ord_tp_lvl2_cd#
         </isNotEmpty>
         
         <isNotEqual property="pnl_svc_tp_cd" compareValue="ALL">
         	AND O.PNL_SVC_TP_CD = #pnl_svc_tp_cd#
         </isNotEqual>
         
         <isNotEmpty property="ctrt_cust_cd">
         	AND S.CTRT_CUST_CD = #ctrt_cust_cd#
         </isNotEmpty>
         
         <isNotEmpty property="ctrt_cust_nm">
         	AND dbo.TL_GET_CUST_NM(S.CTRT_CUST_CD) LIKE '%'+ISNULL(#ctrt_cust_nm#, '')+'%'
         </isNotEmpty>
         
         <isNotEmpty property="hbl_no">
         	AND A.HBL_NO = #hbl_no#
         </isNotEmpty>
         
         <isNotEmpty property="mbl_no">
         	AND A.MBL_NO = #mbl_no#
         </isNotEmpty>
         
         <isNotEmpty property="hawb_no">
         	AND A.HAWB_NO = #hawb_no#
         </isNotEmpty>
         
         <isNotEmpty property="mawb_no">
         	AND A.MAWB_NO = #mawb_no#
         </isNotEmpty>
         
         <isNotEmpty property="etd_fr_dt">
         	<![CDATA[ AND A.ETD >= ]]>  REPLACE(#etd_fr_dt#,'-','')
         </isNotEmpty>
         
         <isNotEmpty property="etd_to_dt">
         	<![CDATA[ AND A.ETD <= ]]>  REPLACE(#etd_to_dt#,'-','')
         </isNotEmpty>
         
         <isNotEmpty property="eta_from_dt">
         	<![CDATA[ AND A.ETA >= ]]>  REPLACE(#eta_from_dt#,'-','')
         </isNotEmpty>
         
         <isNotEmpty property="eta_to_dt">
         	<![CDATA[ AND A.ETA <= ]]>  REPLACE(#eta_to_dt#,'-','')
         </isNotEmpty>
         
         <isNotEmpty property="rgst_sys_fr_dt">
         	<![CDATA[ AND S.RGST_SYS_DT >= ]]> CONVERT(VARCHAR(20), REPLACE(#rgst_sys_fr_dt#,'-',''), 120)
         </isNotEmpty>
         
         <isNotEmpty property="rgst_sys_to_dt">
         	<![CDATA[ AND S.RGST_SYS_DT <= ]]> CONVERT(VARCHAR(20), REPLACE(#rgst_sys_to_dt#,'-',''), 120)
         </isNotEmpty>
         
         <isNotEmpty property="per_fr_dt">
         	AND (CASE WHEN T.WO_NO IS NOT NULL AND T.WO_ORD_TP_CD = 'P' THEN
                T.EST_CMPL_DT
				<![CDATA[ END >= ]]> REPLACE(#per_fr_dt#, '-', '')
				       OR
				       CASE WHEN WB.WB_NO IS NOT NULL THEN
				                T.EST_CMPL_DT
				<![CDATA[ END >= ]]> REPLACE(#per_fr_dt#, '-', '')
				       OR
				       CASE WHEN A.ORI_BR_CD = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN
				                 A.ETD
				            WHEN A.DEST_BR_CD = #org_cd# THEN
				                 A.ETA
				            ELSE
				                 ''
				<![CDATA[ END >= ]]> REPLACE(#per_fr_dt#, '-', '')
				      )
         </isNotEmpty>
         
         <isNotEmpty property="per_to_dt">
         	AND (CASE WHEN T.WO_NO IS NOT NULL AND T.WO_ORD_TP_CD = 'P' THEN
                T.EST_CMPL_DT
				<![CDATA[ END <= ]]> REPLACE(#per_to_dt#, '-', '')
				       OR
				       CASE WHEN WB.WB_NO IS NOT NULL THEN
				                T.EST_CMPL_DT
				<![CDATA[ END <= ]]> REPLACE(#per_to_dt#, '-', '')
				       OR
				       CASE WHEN A.ORI_BR_CD = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN
				                 A.ETD
				            WHEN A.DEST_BR_CD = #org_cd# THEN
				                 A.ETA
				            ELSE
				                 ''
				<![CDATA[ END <= ]]> REPLACE(#per_to_dt#, '-', '')
				      )
         </isNotEmpty>
	</select>
	
	<select id="searchTlVslInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CodeInfoVO">
		SELECT  VSL_CD  AS CODE
			   ,VSL_NM	AS NAME
		  FROM TB_VSL
		 WHERE 1= 1
		 	AND VSL_CD =	#code#
		    AND USE_FLG = 'Y'
	</select>
	
	<select id="searchCTRTHstList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CTRTHSTVO">
		/*searchCTRTHstList*/
		SELECT RGST_SYS_DT
		      ,RGST_ID
		      ,CTRT_NO
		      ,HST_SEQ
		  FROM TL_CTRT_HST
		 WHERE CTRT_NO = #ctrt_no#
	</select>
	
	<select id="searchCTRTHstDtlList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CTRTHSTDtlVO">
		/*searchCTRTHstDtlList*/
		<![CDATA[
		SELECT  CASE dm.num WHEN 1 THEN 'Contract Name'
                    WHEN 2 THEN 'Effective Date'
                    WHEN 3 THEN 'Sales PIC'
                    WHEN 4 THEN 'Contract Main Customer'
                    WHEN 5 THEN 'Customer Type'
                    WHEN 6 THEN 'Industry'
                    WHEN 7 THEN 'Required Service Type'
                    WHEN 8 THEN 'Order Planning'
                    WHEN 9 THEN 'EXT/INT Type'
                    WHEN 10 THEN 'Joint Venture Sales'
        END ITEM_NM
       ,CASE dm.num WHEN 1 THEN hst.BEFORE_CTRT_NM
                    WHEN 2 THEN hst.BEFORE_EFF_DT
                    WHEN 3 THEN hst.BEFORE_SALES_PIC_ID
                    WHEN 4 THEN hst.BEFORE_CTRT_CUST_CD
                    WHEN 5 THEN hst.BEFORE_MNG_TP_CD
                    WHEN 6 THEN hst.BEFORE_INDUSTRY 
                    WHEN 7 THEN CASE WHEN hst.BEFORE_REQ_SVC_TP IS NULL THEN NULL
                                     ELSE SUBSTRING(hst.BEFORE_REQ_SVC_TP, 1, LEN(hst.BEFORE_REQ_SVC_TP)-2)
                                END
                    WHEN 8 THEN hst.BEFORE_ORD_PLAN_RMK
                     WHEN 9 THEN hst.BEFORE_EX_IN_CD
                    WHEN 10 THEN hst.BEFORE_JV_SALES_FLG
        END PRE_VAL 
       ,CASE dm.num WHEN 1 THEN hst.CTRT_NM
                    WHEN 2 THEN hst.EFF_DT
                    WHEN 3 THEN hst.SALES_PIC_ID
                    WHEN 4 THEN hst.CTRT_CUST_CD
                    WHEN 5 THEN hst.MNG_TP_CD 
                    WHEN 6 THEN hst.INDUSTRY
                    WHEN 7 THEN CASE WHEN hst.REQ_SVC_TP IS NULL THEN NULL
                                     ELSE SUBSTRING(hst.REQ_SVC_TP, 1, LEN(hst.REQ_SVC_TP)-2)
                                END
                    WHEN 8 THEN hst.ORD_PLAN_RMK
                    WHEN 9 THEN hst.EX_IN_CD
                    WHEN 10 THEN hst.JV_SALES_FLG
        END CUR_VAL
  FROM (SELECT H1.CTRT_NO,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN CTRT_NM
               	ELSE
               		NULL
               	END) AS CTRT_NM,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN CTRT_NM
               	ELSE
               		NULL
               	END) AS BEFORE_CTRT_NM,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN SALES_PIC_ID
               	ELSE
               		NULL
               	END) AS SALES_PIC_ID,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN SALES_PIC_ID
               	ELSE
               		NULL
               	END) AS BEFORE_SALES_PIC_ID,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN EFF_FR_DT + ' ~ ' + EFF_TO_DT
               	ELSE
               		NULL
               	END) AS EFF_DT,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN EFF_FR_DT + ' ~ ' + EFF_TO_DT
               	ELSE
               		NULL
               	END) AS BEFORE_EFF_DT,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN CTRT_CUST_CD
               	ELSE
               		NULL
               	END) AS CTRT_CUST_CD,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN CTRT_CUST_CD
               	ELSE
               		NULL
               	END) AS BEFORE_CTRT_CUST_CD,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN MNG_TP_CD
               	ELSE
               		NULL
               	END) AS MNG_TP_CD,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN MNG_TP_CD
               	ELSE
               		NULL
               	END) AS BEFORE_MNG_TP_CD,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN INDUSTRY
               	ELSE
               		NULL
               	END) AS INDUSTRY,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN INDUSTRY
               	ELSE
               		NULL
               	END) AS BEFORE_INDUSTRY,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN REQ_SVC_TP
               	ELSE
               		NULL
               	END) AS REQ_SVC_TP,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN REQ_SVC_TP
               	ELSE
               		NULL
               	END) AS BEFORE_REQ_SVC_TP,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN ORD_PLAN_RMK
               	ELSE
               		NULL
               	END) AS ORD_PLAN_RMK,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN ORD_PLAN_RMK
               	ELSE
               		NULL
               	END) AS BEFORE_ORD_PLAN_RMK,
               
               MAX(
               	CASE RNUM
               		WHEN 1 THEN EX_IN_CD
               	ELSE
               		NULL
               	END) AS EX_IN_CD,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN EX_IN_CD
               	ELSE
               		NULL
               	END) AS BEFORE_EX_IN_CD,
               MAX(
               	CASE RNUM
               		WHEN 1 THEN JV_SALES_FLG
               	ELSE
               		NULL
               	END) AS JV_SALES_FLG,
               MAX(
               	CASE RNUM
               		WHEN 2 THEN JV_SALES_FLG
               	ELSE
               		NULL
               	END) AS BEFORE_JV_SALES_FLG
          FROM (SELECT H.CTRT_NO,
                       H.HST_SEQ,
                       H.CTRT_NM,
                       H.REMARK,
                       H.SALES_PIC_ID,
                       CONVERT(VARCHAR(20), H.EFF_FR_DT, 120) AS EFF_FR_DT,
                       CONVERT(VARCHAR(20), H.EFF_TO_DT, 120) AS EFF_TO_DT,
                       dbo.TL_GET_CUST_NM(H.CTRT_CUST_CD) AS CTRT_CUST_CD,
                       CASE H.MNG_TP_CD
                       	WHEN 'N' THEN 'NVO'
                       ELSE
                       	'BCO'
                       END AS MNG_TP_CD,
                       dbo.TL_GET_COMM_NM('Z10', H.INDUSTRY) AS INDUSTRY,
                       CASE H.REQ_SVC_01
                       	WHEN 'Y' THEN 'PO Management, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_02
                       	WHEN 'Y' THEN 'Vendor Management, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_03
                       	WHEN 'Y' THEN 'Origin Inland Transport, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_04
                       	WHEN 'Y' THEN 'Origin Consolidation & Warehouse, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_05
                       	WHEN 'Y' THEN 'Ocean Forwarding, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_06
                       	WHEN 'Y' THEN 'Air Forwarding, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_07
                       	WHEN 'Y' THEN 'DOC/Operation Documentation, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_08
                       	WHEN 'Y' THEN 'Origin Customs Clearance, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_09
                       	WHEN 'Y' THEN 'Destination Customs Clearance, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_10
                       	WHEN 'Y' THEN 'Destination Warehouse & Transloading, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_11
                       	WHEN 'Y' THEN 'Destination Inland Transport, '
                       ELSE
                       	NULL
                       END + 
                       CASE H.REQ_SVC_12
                       	WHEN 'Y' THEN 'Others, '
                       ELSE
                       	NULL
                       END AS REQ_SVC_TP,
                       H.ORD_PLAN_RMK,
                       CASE H.EX_IN_CD
                       	WHEN 'E' THEN 'EXTERNAL'
                       ELSE
                       	'INTERNAL'
                       END AS EX_IN_CD,
                       CASE H.JV_SALES_FLG
                       	WHEN 'Y' THEN 'Joint Venture Sales'
                       ELSE
                       	NULL
                       END AS JV_SALES_FLG,
                       ROW_NUMBER() OVER(PARTITION BY H.CTRT_NO ORDER BY H.CTRT_NO, H.HST_SEQ DESC) RNUM
                  FROM TL_CTRT_HST H
                 WHERE H.CTRT_NO = #ctrt_no#
                   AND H.HST_SEQ <= #hst_seq# ) AS H1
         WHERE RNUM < #hst_seq#
         GROUP BY H1.CTRT_NO
       ) hst
       ,(SELECT 1 AS num
				UNION SELECT 2
				UNION SELECT 3
				UNION SELECT 4
				UNION SELECT 5
				UNION SELECT 6
				UNION SELECT 7
				UNION SELECT 8
				UNION SELECT 9
				UNION SELECT 10
       ) dm
       ]]>
	</select>
	<select id="searchCommonCodeInfoA6" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CommonCodeVO">
	      	/* WmsCommonSQL.xml > searchCommonCodeListA6 */ 
			 SELECT 'A6' AS GRPCD,
	        		G.PCK_UT_CD AS CODECD,
	        		G.PCK_NM AS CODENM,
			        '' AS OPTITM1,
			        '' AS OPTITM2,
			        '' AS OPTITM3,
			        '' AS OPTITM4,
			        '' AS OPTITM5,
			        '' AS OPTITM6,
			        '' AS OPTITM7,
			        '' AS OPTITM8,
			        '' AS OPTITM9,
			        '' AS OPTITM10,
			        G.PCK_UT_CD + '-' + G.PCK_NM AS CODECDNM       
			FROM TB_PCK_UT_CD G
			WHERE  G.USE_FLG = 'Y'											
			<isNotEmpty property="c_code">
				AND G.PCK_UT_CD = #c_code#
			</isNotEmpty>
			
			<isNotEmpty property="c_desc">
				AND UPPER(G.PCK_NM) = UPPER(#c_desc#)
			</isNotEmpty>
			<isEqual property="wh_flag" compareValue="Y">
				AND EXISTS (SELECT 'X'
					        FROM TL_CTRT_CUST_ITEM I
					       WHERE I.CTRT_NO = #ctrt_no#
					         AND I.ITEM_SYS_NO = #item_sys_no#
					         AND I.ITEM_USE_FLG = 'Y'
					         AND G.PCK_UT_CD IN (I.PKG_LV1_UNIT_CD, I.ITEM_PKGUNIT,I.PKG_LV3_UNIT_CD, I.PKG_LV4_UNIT_CD))
			</isEqual>
			ORDER BY  G.PCK_NM
	</select>
	<select id="searchCommonCodeListA6" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CommonCodeVO">
	      	/* WmsCommonSQL.xml > searchCommonCodeListA6 */ 
			 SELECT 'A6' AS GRPCD,
	        		G.PCK_UT_CD AS CODECD,
	        		G.PCK_NM AS CODENM,
			        '' AS OPTITM1,
			        '' AS OPTITM2,
			        '' AS OPTITM3,
			        '' AS OPTITM4,
			        '' AS OPTITM5,
			        '' AS OPTITM6,
			        '' AS OPTITM7,
			        '' AS OPTITM8,
			        '' AS OPTITM9,
			        '' AS OPTITM10,
			        G.PCK_UT_CD + '-' + G.PCK_NM AS CODECDNM       
			FROM TB_PCK_UT_CD G
			WHERE  G.USE_FLG = 'Y'											
			<isNotEmpty property="c_code">
				AND G.PCK_UT_CD LIKE '%' + #c_code# + '%'
			</isNotEmpty>
			
			<isNotEmpty property="c_desc">
				AND UPPER(G.PCK_NM) LIKE '%' + UPPER(#c_desc#) + '%'
			</isNotEmpty>
			<isEqual property="wh_flag" compareValue="Y">
				AND EXISTS (SELECT 'X'
					        FROM TL_CTRT_CUST_ITEM I
					       WHERE I.CTRT_NO = #ctrt_no#
					         AND I.ITEM_SYS_NO = #item_sys_no#
					         AND I.ITEM_USE_FLG = 'Y'
					         AND G.PCK_UT_CD IN (I.PKG_LV1_UNIT_CD, I.ITEM_PKGUNIT,I.PKG_LV3_UNIT_CD, I.PKG_LV4_UNIT_CD))
			</isEqual>
			ORDER BY  G.PCK_NM
	</select>
	
	<select id="searchCommonCodeList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CommonCodeVO">
	      
			/* WmsCommonSQL.xml > searchCommonCodeList */ 
			 SELECT G.PRNT_COM_CD AS GRPCD,
	        		D.CD_VAL AS CODECD,
	        		D.CD_NM AS CODENM,
			        '' AS OPTITM1,
			        '' AS OPTITM2,
			        '' AS OPTITM3,
			        '' AS OPTITM4,
			        '' AS OPTITM5,
			        '' AS OPTITM6,
			        '' AS OPTITM7,
			        '' AS OPTITM8,
			        '' AS OPTITM9,
			        '' AS OPTITM10,
			        D.CD_VAL + '-' + D.CD_NM AS CODECDNM       
			FROM TB_COM_CD G
                   ,TB_COM_CD_DTL D
			WHERE  G.USE_FLG = 'Y'	
			AND G.COM_CD = D.COM_CD											
			<isNotEmpty property="c_code">
				AND D.CD_VAL LIKE '%' + #c_code# + '%'
			</isNotEmpty>
			
			<isNotEmpty property="c_desc">
				AND UPPER(D.CD_NM) LIKE '%' + UPPER(#c_desc#) + '%'
			</isNotEmpty>
			
			<isNotEmpty property="grp_cd">
				AND G.COM_CD = #grp_cd#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm1">
				AND OPT_ITM1 = #opt_itm1#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm2">
				AND OPT_ITM2 = #opt_itm2#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm3">
				AND OPT_ITM3 = #opt_itm3#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm4">
				AND OPT_ITM4 = #opt_itm4#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm5">
				AND OPT_ITM5 = #opt_itm5#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm6">
				AND OPT_ITM6 = #opt_itm6#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm7">
				AND OPT_ITM7 = #opt_itm7#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm8">
				AND OPT_ITM8 = #opt_itm8#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm9">
				AND OPT_ITM9 = #opt_itm9#
			</isNotEmpty>
			
			<isNotEmpty property="opt_itm10">
				AND OPT_ITM10 = #opt_itm10#
			</isNotEmpty>
			
			<isEqual property="wh_flag" compareValue="Y">
				AND EXISTS (SELECT 'X'
					        FROM TL_CTRT_CUST_ITEM I
					       WHERE I.CTRT_NO = #ctrt_no#
					         AND I.ITEM_SYS_NO = #item_sys_no#
					         AND I.ITEM_USE_FLG = 'Y'
					         AND D.CD_VAL IN (I.PKG_LV1_UNIT_CD, I.ITEM_PKGUNIT,I.PKG_LV3_UNIT_CD, I.PKG_LV4_UNIT_CD))
			</isEqual>
			
			ORDER BY  G.PRNT_COM_CD, D.CD_VAL
	</select>
	
	<select id="searchCustLocList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CustLocListVO">
	/*WmsCommonSQL.xml > searchCustLocList */
	         SELECT T.CUST_CD + ISNULL(T.FACIL_CD,'') AS LOC_CD,
	                 T.FACIL_NM AS LOC_NM,
	                 T.FACIL_KIND AS LOC_TYPE,
	                 dbo.TL_GET_COMM_NM('F1', T.FACIL_KIND) AS LOC_TYPE_NM,
	                 T.CITY AS CITY_CD,
	                 dbo.TL_GET_LOC_NM(T.CITY) AS CITY_NM,
	                 T.BL_ADDR1 + ISNULL(T.BL_ADDR2,'') + ISNULL(T.BL_ADDR3,'') + ISNULL(T.BL_ADDR4,'') + ISNULL(T.BL_ADDR5,'') AS ADDR,
	                 T.BL_ADDR1 AS LOC_ADDR1,
	                 T.BL_ADDR2 AS LOC_ADDR2,
	                 T.BL_ADDR3 AS LOC_ADDR3,
	                 T.BL_ADDR4 AS LOC_ADDR4,
	                 T.BL_ADDR5 AS LOC_ADDR5
	            FROM TL_CUST_FACIL T
	           WHERE 1 = 1
	           
				<isNotEmpty property="loc_cd">
					AND T.CUST_CD + ISNULL(T.FACIL_CD,'') LIKE #loc_cd#+'%'
				</isNotEmpty>
				
				<isNotEmpty property="loc_nm">
					AND UPPER(T.FACIL_NM) LIKE '%'+ISNULL(#loc_nm#,'')+'%'
				</isNotEmpty>
	</select>
	
	<select id="searchOperationAllList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CustLocListVO">
	/*WmsCommonSQL.xml > searchOperationAllList */
			SELECT T.LOC_CD,
			       T.LOC_NM,
			       CASE
			           WHEN T.PORT_YN = 'Y' THEN
			            T.SEA_AIR_CLS
			           ELSE
			            'W' 
			       END AS LOC_TYPE,
			       CASE
			           WHEN T.PORT_YN = 'Y' THEN
			            dbo.TL_GET_COMM_NM('PT0', T.SEA_AIR_CLS)
			           ELSE
			            dbo.TL_GET_COMM_NM('PF', 'W')
			       END AS LOC_TYPE_NM,
			       T.SUB_LOC_CD AS CITY_CD,
			       T.SUB_LOC_CD AS CITY_NM,
			       CASE
			           WHEN T.ENG_ADDR IS NULL THEN
			            T.LOC_NM
			           ELSE
			            T.LOC_NM + ISNULL(CHAR(13),'')+ISNULL(CHAR(10),'') + ISNULL(T.ENG_ADDR,'')
			       END AS ADDR,
			       '' AS LOC_ADDR1,
			       '' AS LOC_ADDR2,
			       '' AS LOC_ADDR3,
			       '' AS LOC_ADDR4,
			       '' AS LOC_ADDR5,
			       BRANCH,
				   CUST_CD,
				   dbo.TL_GET_CUST_NM(CUST_CD) AS CUST_NM,
				   PRIV_FLG
			  FROM TL_LOC T
			 WHERE 1 = 1
			   AND T.USE_YN = 'Y'
			   
			   <isNotEmpty property="loc_cd">
			   	AND T.LOC_CD LIKE #loc_cd# + '%'
			   </isNotEmpty>
			   
			   <isNotEmpty property="loc_nm">
			   	AND UPPER(T.LOC_NM) LIKE '%'+ISNULL(#loc_nm#,'')+'%'
			   </isNotEmpty>
			   
			   <isNotEmpty property="cust_cd">
			   	<isEqual property="cust_cd" compareValue="P">
			   		AND TERMINAL_YN IS NULL
		           AND CY_YN IS NULL
		           AND CFS_YN IS NULL
		           AND WH_YN IS NULL
		           AND RAIL_YN IS NULL
		           AND T.DOOR_YN IS NULL
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="M">
			   		AND T.TERMINAL_YN = 'Y'
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="Y">
			   		AND T.CY_YN = 'Y'
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="F">
			   		AND T.CFS_YN = 'Y'
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="W">
			   		AND T.WH_YN = 'Y'
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="R">
			   		AND T.RAIL_YN = 'Y'
			   	</isEqual>
			   	
			   	<isEqual property="cust_cd" compareValue="D">
			   		AND T.DOOR_YN = 'Y'
			   	</isEqual>
			   </isNotEmpty>
	</select>
	
	<select id="searchOperationTRList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.OperationTRListVO">
	/*WmsCommonSQL.xml > searchOperationTRList*/
			SELECT ofc_cd ,
			       origin_loc_cd,
			       origin_loc_addr,
			       origin_pic_nm,
			       origin_pic_tel,
			       origin_pic_fax,
			       origin_pic_email,
			       dest_loc_cd,
			       dest_loc_addr,
			       dest_pic_nm,
			       dest_pic_tel,
			       dest_pic_fax,
			       dest_pic_email,
			       ctrt_no
			  FROM TL_CTRT_TR_LOC T
			 WHERE 1 = 1
			 
			 <isNotEmpty property="ctrt_no">
			 	AND T.CTRT_NO = #ctrt_no#
			 </isNotEmpty>
			 
			 <isNotEmpty property="ctrt_nm">
			 	AND T.CTRT_NO IN ( SELECT C.CTRT_NO
			                         FROM TL_CTRT C
			                        WHERE C.CTRT_NM LIKE '%'+ISNULL(#ctrt_nm#,'')+'%' )
			 </isNotEmpty>
			 
			 <isNotEmpty property="org_cd">
			 	AND T.OFC_CD = #org_cd#
			 </isNotEmpty>
			 
			 <isNotEmpty property="loc_cd">
			 	AND T.ORIGIN_LOC_CD LIKE #loc_cd#+'%'
			 </isNotEmpty>
			 
			 <isNotEmpty property="loc_nm">
			 	AND UPPER(T.ORIGIN_LOC_NM) LIKE '%'+ISNULL(#loc_nm#,'')+'%'
			 </isNotEmpty>
	</select>
	
	<select id="searchOperationWHList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.OperationWHListVO">
	/*WmsCommonSQL.xml > searchOperationWHList*/
			SELECT ofc_cd,
			       loc_cd,
			       loc_addr,
			       loc_freedays,
			       CUST_CD,
				   dbo.TL_GET_CUST_NM(CUST_CD) AS CUST_NM,
				   PRIV_FLG,
			       ctrt_no
			  FROM TL_CTRT_WH_LOC T
			 WHERE 1 = 1
			 
			 <isNotEmpty property="ctrt_no">
			 	AND T.CTRT_NO = #ctrt_no#
			 </isNotEmpty>
			 
			 <isNotEmpty property="ctrt_nm">
			 	AND T.CTRT_NO IN ( SELECT C.CTRT_NO
			                         FROM TL_CTRT C
			                        WHERE C.CTRT_NM LIKE '%'+ISNULL(#ctrt_nm#,'')+'%' )
			 </isNotEmpty>
			 
			 <isNotEmpty property="org_cd">
			 	AND T.OFC_CD = #org_cd#
			 </isNotEmpty>
			 
			 <isNotEmpty property="loc_cd">
			 	AND T.LOC_CD LIKE #loc_cd#+'%'
			 </isNotEmpty>
			 
			 <isNotEmpty property="loc_nm">
			 	AND UPPER(T.LOC_ADDR) LIKE '%'+ ISNULL(#loc_nm#,'')+'%'
			 </isNotEmpty>
	</select>
	
	<select id="searchCustCntcList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.LocationContactListVO">	
		SELECT DISTINCT M.REQ_SVC
		      ,M.CUST_PIC_NM
		      ,M.TEL
		      ,M.FAX
		      ,M.EMAIL
		  FROM TL_CUST_FACIL T
		      ,T_MDM102 M
		 WHERE T.CUST_CD = M.CUST_CD
		   AND T.CUST_CD = #loc_cd#
		   AND (M.CUST_PIC_NM IS NOT NULL OR M.TEL IS NOT NULL OR M.FAX IS NOT NULL OR M.EMAIL IS NOT NULL OR M.REQ_SVC IS NOT NULL)
	</select>
	
	<select id="searchLocCntcList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.LocationContactListVO">	
		SELECT M.CUST_PIC_NM
		      ,M.TEL
		      ,M.FAX
		      ,M.EMAIL
		  FROM TL_LOC T
		      ,T_MDM124 M
		 WHERE T.LOC_CD = M.TML_CD
		   AND T.USE_YN = 'Y'
		   AND T.LOC_CD = #loc_cd#
		   
		   <isNotEmpty property="cust_cd">
		   	<isEqual property="cust_cd" compareValue="P">
		   		AND T.TERMINAL_YN IS NULL
		           AND T.CY_YN IS NULL
		           AND T.CFS_YN IS NULL
		           AND T.WH_YN IS NULL
		           AND T.RAIL_YN IS NULL
		           AND T.DOOR_YN IS NULL
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="M">
		   		AND T.TERMINAL_YN = 'Y'
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="Y">
		   		AND T.CY_YN = 'Y'
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="F">
		   		AND T.CFS_YN = 'Y'
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="W">
		   		AND T.WH_YN = 'Y'
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="R">
		   		AND T.RAIL_YN = 'Y'
		   	</isEqual>
		   	
		   	<isEqual property="cust_cd" compareValue="D">
		   		AND T.DOOR_YN = 'Y'
		   	</isEqual>
		   	
		   </isNotEmpty>
			AND (M.CUST_PIC_NM IS NOT NULL OR M.TEL IS NOT NULL OR M.FAX IS NOT NULL OR M.EMAIL IS NOT NULL)
	</select>
	
	<select id="searchCtrtTRCntcList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.LocationContactListVO">	
		SELECT C.PIC_NM AS CUST_PIC_NM
		      ,C.PIC_TEL AS TEL
		      ,C.PIC_FAX AS FAX
		      ,C.PIC_EMAIL AS EMAIL
		  FROM TL_CTRT_TR_LOC T
		      ,TL_CTRT_LOC_CNTC C
		 WHERE T.ORIGIN_LOC_CD = C.LOC_CD
		   AND C.LOC_TP_CD = 'TP'
		   AND T.CTRT_NO = #ctrt_no#
		   AND T.OFC_CD = #org_cd#
		   AND T.ORIGIN_LOC_CD = #loc_cd#
		   AND (C.PIC_NM IS NOT NULL OR C.PIC_TEL IS NOT NULL OR C.PIC_FAX IS NOT NULL OR C.PIC_EMAIL IS NOT NULL)
		UNION
		SELECT C.PIC_NM
		      ,C.PIC_TEL
		      ,C.PIC_FAX
		      ,C.PIC_EMAIL 
		  FROM TL_CTRT_TR_LOC T
		      ,TL_CTRT_LOC_CNTC C
		 WHERE T.DEST_LOC_CD = C.LOC_CD
		   AND C.LOC_TP_CD = 'TD'
		   AND T.CTRT_NO = #ctrt_no#
		   AND T.OFC_CD = #org_cd#
		   AND T.DEST_LOC_CD = #loc_cd2#
		   AND (C.PIC_NM IS NOT NULL OR C.PIC_TEL IS NOT NULL OR C.PIC_FAX IS NOT NULL OR C.PIC_EMAIL IS NOT NULL)
	</select>
	
	<select id="searchCtrtWHCntcList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.LocationContactListVO">	
		SELECT C.PIC_NM AS CUST_PIC_NM
		      ,C.PIC_TEL AS TEL
		      ,C.PIC_FAX AS FAX
		      ,C.PIC_EMAIL AS EMAIL
		  FROM TL_CTRT_WH_LOC T
		      ,TL_CTRT_LOC_CNTC C
		 WHERE T.LOC_CD = C.LOC_CD
		   AND C.LOC_TP_CD = 'WH'
		   AND T.CTRT_NO = #ctrt_no#
		   AND T.OFC_CD = #org_cd#
		   AND T.LOC_CD = #loc_cd#
		   AND (C.PIC_NM IS NOT NULL OR C.PIC_TEL IS NOT NULL OR C.PIC_FAX IS NOT NULL OR C.PIC_EMAIL IS NOT NULL)
	</select>
	
	<insert id="addFileWHICFileUpload" parameterClass="java.util.HashMap">
	/* WHIC.addFileWHICFileUpload */    
	INSERT INTO TL_WH_RCV_ITEM_FILE_REP
	     ( WIB_IN_NO      /*INBOUND COMPLETE NO : 입고번호*/
	     , WIB_BK_NO      /*BOOKING NO*/
	     , PO_SYS_NO      /*Purchase Order System Number   PO 관리 System Key*/
	     , ITEM_SYS_NO    /*Item System Number Item 관리 System Key*/
	     , ITEM_SEQ
	     , FILE_SEQ       /*Key Sequence*/
	     , FILE_PATH      /*File Path  파일 저장 디렉토리*/
	     , FILE_SYS_NM    /*File System Name*/
	     , FILE_ORG_NM    /*File Original Name*/
	     , FILE_SIZE      /*File Size*/
	     , RGST_ID        /*등록 ID*/
	     , RGST_SYS_DT    /*등록 일자*/
	     , MODI_ID        /*수정 ID*/
	     , MODI_SYS_DT    /*수정일자*/
	     )
	VALUES( #wib_in_no#
	     , #wib_bk_no#
	     , #po_sys_no#
	     , #item_sys_no#
	     , #item_seq#
	     , (SELECT ISNULL(MAX(FILE_SEQ),0) + 1 
	          FROM TL_WH_RCV_ITEM_FILE_REP
	         WHERE WIB_IN_NO   = #wib_in_no#
	           AND WIB_BK_NO   = #wib_bk_no#
	           AND PO_SYS_NO   = #po_sys_no#
	           AND ITEM_SYS_NO = #item_sys_no#
	           AND ITEM_SEQ    = #item_seq#
	       )
	     , #file_url#
	     , #file_sys_nm#
	     , #file_nm#
	     , #file_capa#
	     , #rgst_id#
	     , GETDATE()
	     , #rgst_id#
	     , GETDATE())    
    </insert>
    
    <select id="searchFileNo" resultClass="String">      
      	SELECT 
			'HJD' + SUBSTRING(CONVERT(VARCHAR(10), GETDATE(), 112), 3, 7) +
			dbo.LPAD(CONVERT(INTEGER,ISNULL(MAX(SUBSTRING(DOC_NO, 10, 6)), 0)) + 1,6, 0)
		FROM
		TL_FILE_REP
 		WHERE
 		DOC_NO LIKE 'HJD' + SUBSTRING(CONVERT(VARCHAR(10), GETDATE(), 112), 3, 7) + '%'
     </select>
     
     <select id="searchItemGroup" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.ItemGroupVO">
		SELECT ITEM_GRP_CD
		  FROM TL_CTRT_CUST_ITEM_GRP
		 WHERE 1=1
		 
		 <isNotEmpty property="in_grp_cd">
		 	AND ITEM_GRP_CD = #in_grp_cd#
		 </isNotEmpty>
		 
		 <isNotEmpty property="in_ctrt_no">
		 	AND CTRT_NO = #in_ctrt_no#
		 </isNotEmpty>
	</select>
	
	<select id="searchPutawayEaQty" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.WHPutawayCalcEaQtyVO">
		/* WHPutaway.searchPutawayEaQty */
		SELECT ISNULL(A.PKG_LV1_QTY, 0)     AS LVL1_QTY
		     , ISNULL(A.PKG_LV1_UNIT_CD, '') AS LVL1_UNIT
		     , ISNULL(A.ITEM_PKGBASEQTY, 0) AS LVL2_QTY
		     , ISNULL(A.ITEM_PKGUNIT, '')    AS LVL2_UNIT
		     , ISNULL(A.PKG_LV3_QTY, 0)     AS LVL3_QTY
		     , ISNULL(A.PKG_LV3_UNIT_CD, '') AS LVL3_UNIT
		     , ISNULL(A.PKG_LV4_QTY, 0)     AS LVL4_QTY
		     , ISNULL(A.PKG_LV4_UNIT_CD, '') AS LVL4_UNIT
		   FROM TL_CTRT_CUST_ITEM A
		  WHERE A.CTRT_NO = #ctrt_no#
		    AND A.ITEM_SYS_NO = #item_sys_no#
	</select>
	
	<!-- OB Complete 정보 Search -->		
	<select id="searchWHOCOutNoInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.whoutbooking.dto.WHOutbkListVO">
		/* WHOutbk.searchWHOCOutNoInfo */
			SELECT A.WOB_OUT_NO, A.WHOC_FLAG
			  FROM (SELECT DISTINCT S.WOB_OUT_NO AS WOB_OUT_NO, 
			               'BK' AS WHOC_FLAG
			          FROM TL_WH_OB B, TL_WH_ALLC A, TL_WH_ISSU S
			         WHERE B.WOB_BK_NO = A.WOB_BK_NO
			           AND A.WALC_NO = S.WALC_NO
			           AND B.WOB_BK_NO = #wob_bk_no#
			        UNION
			        SELECT DISTINCT LP.LP_NO AS WOB_OUT_NO, 
			               'LP' AS WHOC_FLAG
			          FROM TL_WH_OB B,
			               TL_WH_ALLC A,
			               TL_WH_ALLC_ITEM AI,
			               TL_WH_LOAD_PLAN LP,
			               TL_WH_LOAD_PLAN_ITEM LPI
			         WHERE B.WOB_BK_NO = A.WOB_BK_NO
			           AND A.WALC_NO = AI.WALC_NO
			           AND LP.LP_NO = LPI.LP_NO
			           AND LP.LP_STS_CD IN ('P', 'L')
			           AND AI.WOB_BK_NO = LPI.WOB_BK_NO
			           AND AI.SAO_SYS_NO = LPI.SAO_SYS_NO
			           AND AI.PO_SYS_NO = LPI.PO_SYS_NO
			           AND AI.ITEM_SYS_NO = LPI.ITEM_SYS_NO
			           AND AI.LOT_ID = LPI.LOT_ID
			           AND AI.WH_LOC_CD = LPI.WH_LOC_CD
			           AND AI.ITEM_SEQ = LPI.ITEM_SEQ
			           AND B.WOB_BK_NO = #wob_bk_no#) AS A		
	</select>
	
	<!-- Nam Tran (E) -->
	<!-- Tan.Pham (S) -->
	<select id="searchWHPickShtInfo" parameterClass="java.util.HashMap" resultClass="WHOutbkPrintOptionPopupVO">
    /* WHOutbk.searchWHPickShtInfo */
		SELECT WALC_NO
		      ,SUPV_NM
          ,dbo.TL_GET_WH_LOC_NM (#wh_cd#, OUTBOUND_LOC_CD) AS OUTBOUND_LOC_NM
		      ,OUTBOUND_LOC_CD              		                    		      
		      ,GATE_NO
			  ,CASE WHEN PICK_DT IS NOT NULL THEN CONVERT (VARCHAR(10),PICK_DT, 20) ELSE PICK_DT END  AS PICK_DT
			  ,CASE WHEN PICK_HM_FR IS NOT NULL THEN CONVERT (VARCHAR(5),PICK_HM_FR, 8) ELSE PICK_HM_FR END AS PICK_HM_FR
			  ,CASE WHEN PICK_HM_TO IS NOT NULL THEN CONVERT (VARCHAR(5),PICK_HM_TO, 8) ELSE PICK_HM_TO END AS PICK_HM_TO
		      ,PICK_BY
		      ,MSG_TO_PICK
		      ,INSP_BY
			  ,CASE WHEN INSP_HM_FR IS NOT NULL THEN CONVERT (VARCHAR(5),INSP_HM_FR, 8) ELSE INSP_HM_FR END AS INSP_HM_FR
			  ,CASE WHEN INSP_HM_TO IS NOT NULL THEN CONVERT (VARCHAR(5),INSP_HM_TO, 8) ELSE INSP_HM_TO END AS INSP_HM_TO
		      ,MSG_TO_INSP
		  FROM TL_WH_PICK_SHT
		WHERE WALC_NO = #walc_no#        
	</select>
	<select id="searchWHPickShtLoadPlanInfo" parameterClass="java.util.HashMap" resultClass="WHOutbkPrintOptionPopupVO">
   	/* WHOutbk.searchWHPickShtLoadPlanInfo */
		SELECT LP_NO
		      ,SUPV_NM
              ,dbo.TL_GET_WH_LOC_NM (#wh_cd#, OUTBOUND_LOC_CD) AS OUTBOUND_LOC_NM		      
		      ,OUTBOUND_LOC_CD		                    		      
		      ,GATE_NO
		      ,LOAD_BY       
			  ,CASE WHEN LOAD_HM_FR IS NOT NULL THEN CONVERT (VARCHAR(5),LOAD_HM_FR, 8) ELSE LOAD_HM_FR END AS LOAD_HM_FR
			  ,CASE WHEN LOAD_HM_TO IS NOT NULL THEN CONVERT (VARCHAR(5),LOAD_HM_TO, 8) ELSE LOAD_HM_TO END AS LOAD_HM_TO   
		      ,MSG_TO_LOAD
		  FROM TL_WH_LOAD_PLAN
		  WHERE LP_NO = #lp_no#       
	</select>
	<select id="searchWHPickShtWaveInfo" parameterClass="java.util.HashMap" resultClass="WHOutbkPrintOptionPopupVO">
   	/* WHOutbk.searchWHPickShtWaveInfo */
	
	SELECT WALC_NO
	      ,SUPV_NM
        ,dbo.TL_GET_WH_LOC_NM (#wh_cd#, OUTBOUND_LOC_CD) AS OUTBOUND_LOC_NM
	      ,OUTBOUND_LOC_CD              		                    		      
	      ,GATE_NO
	      ,CASE WHEN PICK_DT IS NOT NULL THEN CONVERT (VARCHAR(10),PICK_DT, 20) ELSE PICK_DT END  AS PICK_DT
	      ,CASE WHEN PICK_HM_FR IS NOT NULL THEN CONVERT (VARCHAR(5),PICK_HM_FR, 8) ELSE PICK_HM_FR END AS PICK_HM_FR
	      ,CASE WHEN PICK_HM_TO IS NOT NULL THEN CONVERT (VARCHAR(5),PICK_HM_TO, 8) ELSE PICK_HM_TO END AS PICK_HM_TO
	      ,PICK_BY
	      ,MSG_TO_PICK
	      ,INSP_BY
	      ,CASE WHEN INSP_HM_FR IS NOT NULL THEN CONVERT (VARCHAR(5),INSP_HM_FR, 8) ELSE INSP_HM_FR END AS INSP_HM_FR
	      ,CASE WHEN INSP_HM_TO IS NOT NULL THEN CONVERT (VARCHAR(5),INSP_HM_TO, 8) ELSE INSP_HM_TO END AS INSP_HM_TO
	      ,MSG_TO_INSP
	      ,dbo.TL_GET_ROWTOCOLL_WHOutbkPrintOption(#wave_no#,'|') AS WAVE_WOB_BK_NO
	FROM TL_WH_PICK_SHT
	WHERE WALC_NO = (  SELECT TOP 1 AL.WALC_NO
                          FROM TL_WH_WAVE_OB WO
                             , TL_WH_ALLC AL
                         WHERE WO.WOB_BK_NO = AL.WOB_BK_NO
                         AND WO.WAVE_NO = #wave_no#
                           
                       )        
	</select>
	
	<select id="searchWHBookingPopup" parameterClass="java.util.HashMap" resultClass="WHBookingInfoVO">
   	/* WHOutbk.searchWHBookingPopup */
		SELECT *
	  FROM (
	        SELECT IB.WH_CD
	             , dbo.TL_GET_LOC_NM(IB.WH_CD) AS WH_NM
	             , IB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(IB.CTRT_NO) AS CTRT_NM
	             , MAX(IB.BK_DATE) AS BK_DATE
	             , RCV.INBOUND_DT AS COMP_DATE
	             , IB.WIB_BK_NO AS BK_NO
	             ,  MAX(IB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'IN' AS BK_CLS_CD
	             , 'Inbound' AS BK_CLS_NM
	             ,  MAX(IB.ORD_TP_CD) AS ORD_TP_CD
	             ,  MAX(IB.LOAD_TP_CD) AS LOAD_TP_CD
	             ,  MAX(IB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_IB IB
	             , TL_WH_RCV RCV
	         WHERE IB.WIB_BK_NO = RCV.WIB_BK_NO
	           AND IB.IN_STS_CD IS NOT NULL           
	           AND IB.WH_CD = #wh_cd#
	           
			   <isNotEmpty property="ctrt_no">			   
	           AND IB.CTRT_NO = #ctrt_no#
	           </isNotEmpty>
			   <isEqual property="search_dt" compareValue="B">
					AND IB.BK_DATE BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
			   </isEqual>
				
				<isEqual property="search_dt" compareValue="C">
					AND RCV.INBOUND_DT BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
				</isEqual>
			 GROUP BY IB.WH_CD, IB.CTRT_NO, IB.WIB_BK_NO, RCV.INBOUND_DT
	         UNION ALL	        
	        SELECT OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , MAX(OB.BK_DATE) AS BK_DATE
	             , ISSU.OUTBOUND_DT
	             , OB.WOB_BK_NO
	             , MAX(OB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , MAX(OB.ORD_TP_CD) AS ORD_TP_CD
	             , MAX(OB.LOAD_TP_CD) AS LOAD_TP_CD
	             , MAX(OB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_ALLC ALLC
	             , TL_WH_ISSU ISSU
	         WHERE OB.WOB_BK_NO = ALLC.WOB_BK_NO
	           AND ALLC.WALC_NO = ISSU.WALC_NO      
	           AND OB.WH_CD = #wh_cd#
	           
			  <isNotEmpty property="ctrt_no">
	           AND OB.CTRT_NO = #ctrt_no#
	          </isNotEmpty>
				<isEqual property="search_dt" compareValue="B">	
					AND OB.BK_DATE BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
				</isEqual>
				<isEqual property="search_dt" compareValue="C">		
					AND ISSU.OUTBOUND_DT BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
				</isEqual>    
	         GROUP BY OB.WH_CD, OB.CTRT_NO, OB.WOB_BK_NO, ISSU.OUTBOUND_DT  
	         UNION ALL	        
	        SELECT OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , MAX(OB.BK_DATE) AS BK_DATE
	             , LP.OUTBOUND_DT
	             , LPI.WOB_BK_NO
	             , MAX(OB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , MAX(OB.ORD_TP_CD) AS ORD_TP_CD
	             , MAX(OB.LOAD_TP_CD) AS LOAD_TP_CD
	             , MAX(OB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_LOAD_PLAN_ITEM LPI
	             , TL_WH_LOAD_PLAN LP
	         WHERE OB.WOB_BK_NO = LPI.WOB_BK_NO   
	           AND LPI.LP_NO = LP.LP_NO   
	           AND OB.WH_CD = #wh_cd#
	           <isNotEmpty property="ctrt_no">	
	           AND OB.CTRT_NO = #ctrt_no#
	           </isNotEmpty>
				<isEqual property="search_dt" compareValue="B">		
					AND OB.BK_DATE BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
				</isEqual>
				<isEqual property="search_dt" compareValue="C">			
					AND LP.OUTBOUND_DT BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
				</isEqual>
	         GROUP BY OB.WH_CD, OB.CTRT_NO, LP.OUTBOUND_DT, LPI.WOB_BK_NO
	     ) T

<isNotEqual property="search_tp" compareValue="ALL">
	 WHERE T.BK_CLS_CD = #search_tp# /*IN OUT 구분*/
</isNotEqual>
	 ORDER BY T.CTRT_NO ASC, T.BK_DATE ASC, T.COMP_DATE ASC, T.BK_NO ASC     
	</select>
	
	<select id="searchTlLocInfo" parameterClass="java.util.HashMap" resultClass="WHBookingPopupVO">
   	/* WHOutbk.searchTlLocInfo */
		SELECT LOC_CD, 
		 LOC_NM, 
			 LOC_NM + char(13) + char(10) AS ENG_ADDR,
			CNT_CD,
			 (SELECT MAX(LOC_FREEDAYS)
				FROM TL_CTRT_WH_LOC
			 WHERE CTRT_NO = #ctrt_no#
		 		AND LOC_CD  = #loc_cd#
		 		AND OFC_CD  = #ofc_cd#
			) AS LOC_FREEDAYS,
		'' AS BRANCH,
		'' AS CUST_CD,
		'' AS PRIV_FLG
		FROM TB_LOC
 		WHERE 1 = 1
		AND LOC_CD = #loc_cd#
		AND DELT_FLG = 'N'
       
	  <!--  TinLuong 
	  	<isEqual property="type" compareValue="P">
		 AND TERMINAL_YN IS NULL
         AND CY_YN IS NULL
         AND CFS_YN IS NULL
         AND WH_YN IS NULL
         AND RAIL_YN IS NULL
         AND DOOR_YN IS NULL
	   </isEqual>
	   
	   <isEqual property="type" compareValue="WH">
		 AND WH_YN = 'Y'
	   </isEqual> 
	  
	    <isNotEmpty property="sea_air_cls">		
         AND SEA_AIR_CLS = #sea_air_cls#
       </isNotEmpty> -->
       UNION
       <!-- SELECT ISNULL(T.CUST_CD, '') + ISNULL(T.FACIL_CD,'') AS CODE
             ,T.FACIL_NM AS CODE_NAME
             ,ISNULL(T.BL_ADDR1,'') + ISNULL(T.BL_ADDR2,'') + ISNULL(T.BL_ADDR3,'') + ISNULL(T.BL_ADDR4, '') + ISNULL(T.BL_ADDR5,'') AS ADDR
	   	     ,''
	   	     ,0
	   	     ,''
	   	     ,''
	   	     ,''
         FROM TL_CUST_FACIL T
        WHERE T.CUST_CD = SUBSTRING(#loc_cd#, 1, 7)
	      AND T.FACIL_CD = SUBSTRING(#loc_cd#, 8, LEN(#loc_cd#)) --> 
	   SELECT
		ISNULL(T.WH_CD, '')  AS CODE,
		T.WH_NM AS CODE_NAME,
		ISNULL(T.WH_ADDR, '') AS ADDR,
		'',
		0,
		'',
		'',
		''
		FROM
			TL_WH T
		WHERE  1 = 1
		AND	T.WH_CD = #loc_cd# 
	</select>
	
	<select id="searchWHICListPopup" parameterClass="java.util.HashMap" resultClass="WHICListPopupVO">
   	/* WHOutbk.searchWHPickShtWaveInfo */
	SELECT A.WIB_IN_NO                     /*INBOUND COMPLETE NO*/
	     , A.WIB_BK_NO                     /*BOOKING NO*/
	     , CASE WHEN A.INBOUND_HM IS NULL OR A.INBOUND_HM = '' THEN CONVERT (VARCHAR(10),A.INBOUND_DT, 20)
	            ELSE CONVERT (VARCHAR(19),A.INBOUND_DT + A.INBOUND_HM, 20) END AS INBOUND_DT
	  FROM TL_WH_RCV A
	 WHERE A.WIB_BK_NO = #wib_bk_no#  
	 ORDER BY A.WIB_IN_NO ASC
	</select>
	<select id="searchFreightCodeList" parameterClass="java.util.HashMap" resultClass="FreightPopupVO">
   	/* WHOutbk.searchFreightCodeList */
	SELECT A.*
	      FROM (
				SELECT T.FARE_CD AS FRT_CD
				      ,T.FARE_ENGNM AS FRT_ENGNM
				      ,T.FARE_AREANM AS FRT_LOCNM
				      ,T.FARE_GRP_CD AS FRT_GRP_CD
				      ,T.FCUR_WCUR_CLS AS FRT_CURR_CLS
				      ,'NIL' AS SELL_VAT_CD
				      ,'NIL' AS BUY_VAT_CD
				      ,T.DIS_SORT
				      ,CASE WHEN (SELECT C.WFG_YN
				                    FROM TL_CUST C
				                   WHERE C.CUST_CD = #cust_cd# ) = 'Y' AND 'KRSELLB' = #org_cd# AND T.FARE_CD = 'OWFG' THEN 'Y'
				            WHEN T.FARE_CD != 'OWFG' THEN 'Y'       
				            ELSE 'N'
				       END AS OWFG_YN          
				  FROM T_MDM106 T
				 WHERE 1 = 1
				   AND T.USE_YN = 'Y'
				   AND T.FARE_CD NOT IN ('ORND')
				   
				   <isNotEmpty property="c_code">		
			       AND 	T.FARE_CD = #c_code#
			       </isNotEmpty>
			     
				   <isNotEmpty property="c_desc">	
			       AND 	T.FARE_ENGNM LIKE '%' + #c_desc# + '%'
			       </isNotEmpty>
				   AND 0=(SELECT COUNT(*)
				            FROM TC_TAX_CODE TC
				           WHERE TC.BRANCH = #org_cd#)          
				UNION 
				SELECT T.FARE_CD AS FRT_CD
				      ,T.FARE_ENGNM AS FRT_ENGNM
				      ,T.FARE_AREANM AS FRT_LOCNM
				      ,T.FARE_GRP_CD AS FRT_GRP_CD
				      ,T.FCUR_WCUR_CLS AS FRT_CURR_CLS
				      ,ISNULL((SELECT MAX(V.SELL_VAT_CD)
				              FROM T_MDM206 V
				             WHERE V.FARE_CD = T.FARE_CD
				               AND V.BRANCH = #org_cd#), 'NIL') AS SELL_VAT_CD
				      ,ISNULL((SELECT MAX(V.BUY_VAT_CD)
				              FROM T_MDM206 V
				             WHERE V.FARE_CD = T.FARE_CD
				               AND V.BRANCH = #org_cd#), 'NIL') AS BUY_VAT_CD
				      ,T.DIS_SORT
				      ,CASE WHEN (SELECT C.WFG_YN
				                    FROM TL_CUST C
				                   WHERE C.CUST_CD = #cust_cd# ) = 'Y' AND 'KRSELLB' = #org_cd# AND T.FARE_CD = 'OWFG' THEN 'Y'
				            WHEN T.FARE_CD != 'OWFG' THEN 'Y'       
				            ELSE 'N'
				       END AS OWFG_YN         
				  FROM T_MDM106 T
				 WHERE 1 = 1
				   AND T.USE_YN = 'Y'
				   AND T.FARE_CD NOT IN ('ORND')
				  <isNotEmpty property="c_code">	
			       AND 	T.FARE_CD = #c_code#
			      </isNotEmpty>
			      
				  <isNotEmpty property="c_desc">
			       AND 	T.FARE_ENGNM LIKE '%' || #c_desc# || '%'
			      </isNotEmpty>
				   AND EXISTS ( SELECT 'X'
				                  FROM T_MDM206 TM
				                 WHERE TM.FARE_CD = T.FARE_CD
				                   AND TM.BRANCH = #org_cd#
				              )
				   AND 0!=(SELECT COUNT(*)
				             FROM TC_TAX_CODE TC
				            WHERE TC.BRANCH = #org_cd#)
			   ) A	             
         WHERE A.OWFG_YN = 'Y'				              
		 ORDER BY DIS_SORT, FRT_CD
	</select>
	<insert id="addWHPickShtInfo" parameterClass="java.util.HashMap">
	/* WHOutbk.addWHPickShtInfo */
		INSERT INTO TL_WH_PICK_SHT
		(
		    WALC_NO
		   ,SUPV_NM
		   ,OUTBOUND_LOC_CD
		   ,GATE_NO
		   ,PICK_DT
		   ,PICK_HM_FR
		   ,PICK_HM_TO
		   ,PICK_BY
		   ,MSG_TO_PICK
		   ,INSP_BY
		   ,INSP_HM_FR
		   ,INSP_HM_TO
		   ,MSG_TO_INSP
		   ,RGST_ID
		   ,RGST_OFC_CD
		   ,RGST_SYS_DT
		   ,RGST_LOC_DT
		   ,MODI_ID
		   ,MODI_OFC_CD
		   ,MODI_SYS_DT
		   ,MODI_LOC_DT
		)
		VALUES
		(
		    #walc_no#
		   ,#supv_nm#
		   ,#outbound_loc_cd#
		   ,#gate_no#
		   ,REPLACE (#pick_dt#, '-', '')
		   ,REPLACE (#pick_hm_fr#, ':', '')
		   ,REPLACE (#pick_hm_to#, ':', '')	   
		   ,#pick_by#
		   ,#msg_to_pick#
		   ,#insp_by#
		   ,REPLACE (#insp_hm_fr#, ':', '')
		   ,REPLACE (#insp_hm_to#, ':', '')
		   ,#msg_to_insp#
		   ,#user_id#
		   ,#org_cd#
		   ,GETDATE()
		   ,CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
		   ,#user_id#
		   ,#org_cd#
		   ,GETDATE()
		   ,CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
		)	
	</insert>
	<update id="modifyWHPickShtInfo" parameterClass="java.util.HashMap">
	/* WHOutbk.modifyWHPickShtInfo */
		UPDATE TL_WH_PICK_SHT
		SET    SUPV_NM         = #supv_nm#
		      ,OUTBOUND_LOC_CD = #outbound_loc_cd#
		      ,GATE_NO         = #gate_no#
		      ,PICK_DT         = REPLACE (#pick_dt#, '-', '')
		      ,PICK_HM_FR      = REPLACE (#pick_hm_fr#, ':', '')
		      ,PICK_HM_TO      = REPLACE (#pick_hm_to#, ':', '')
		      ,PICK_BY         = #pick_by#
		      ,MSG_TO_PICK     = #msg_to_pick#
		      ,INSP_BY         = #insp_by#
		      ,INSP_HM_FR      = REPLACE (#insp_hm_fr#, ':', '')
		      ,INSP_HM_TO      = REPLACE (#insp_hm_to#, ':', '')
		      ,MSG_TO_INSP     = #msg_to_insp#
		      ,MODI_ID         = #user_id#
		      ,MODI_OFC_CD     = #org_cd#
		      ,MODI_SYS_DT     = GETDATE()
		      ,MODI_LOC_DT     = CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
		WHERE  WALC_NO         = #walc_no#
	</update>
	<update id="modifyWHPickShtLoadPlanInfo" parameterClass="java.util.HashMap">
	/* WHOutbk.modifyWHPickShtLoadPlanInfo */
		UPDATE TL_WH_LOAD_PLAN
		SET    SUPV_NM         = #supv_nm#
		      ,OUTBOUND_LOC_CD = #outbound_loc_cd#
		      ,GATE_NO         = #gate_no#
		      ,LOAD_BY         = #load_by#
		      ,LOAD_HM_FR      = REPLACE (#load_hm_fr#, ':', '')
		      ,LOAD_HM_TO      = REPLACE (#load_hm_to#, ':', '')              
		      ,MSG_TO_LOAD     = #msg_to_load#
		      ,MODI_ID         = #user_id#
		      ,MODI_OFC_CD     = #org_cd#
		      ,MODI_SYS_DT     = GETDATE()
		      ,MODI_LOC_DT     = CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
		WHERE  LP_NO           = #lp_no#	
	</update>
	<update id="modifyWhWave" parameterClass="java.util.HashMap">
	/*WHOutWave.modifyWhWave*/
	UPDATE TL_WH_WAVE
	   SET PICK_DT        = REPLACE(#pick_dt#, '-', '')
	     , PICK_HM_FR     = REPLACE(#pick_hm_fr#, ':', '')
	     , PICK_HM_TO     = REPLACE(#pick_hm_to#, ':', '')
	     , RMK            = #rmk#
	     , MODI_ID        = #modi_id#
	     , MODI_OFC_CD    = #modi_ofc_cd#
	     , MODI_SYS_DT    = GETDATE()
	     , MODI_LOC_DT    = CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
	 WHERE WAVE_NO        = #wave_no# 
	</update>
	<update id="modifyWHPickShtWaveInfo" parameterClass="java.util.HashMap">
	/* WHOutbk.modifyWHPickShtWaveInfo */
		UPDATE TL_WH_PICK_SHT
		SET    SUPV_NM         = #supv_nm#
		      ,OUTBOUND_LOC_CD = #outbound_loc_cd#
		      ,GATE_NO         = #gate_no#
		      ,PICK_DT         = REPLACE (#pick_dt#, '-', '')
		      ,PICK_HM_FR      = REPLACE (#pick_hm_fr#, ':', '')
		      ,PICK_HM_TO      = REPLACE (#pick_hm_to#, ':', '')
		      ,PICK_BY         = #pick_by#
		      ,MSG_TO_PICK     = #msg_to_pick#
		      ,INSP_BY         = #insp_by#
		      ,INSP_HM_FR      = REPLACE (#insp_hm_fr#, ':', '')
		      ,INSP_HM_TO      = REPLACE (#insp_hm_to#, ':', '')
		      ,MSG_TO_INSP     = #msg_to_insp#
		      ,MODI_ID         = #user_id#
		      ,MODI_OFC_CD     = #org_cd#
		      ,MODI_SYS_DT     = GETDATE()
		      ,MODI_LOC_DT     = CONVERT (VARCHAR(19),dbo.TL_GET_TM_ZONE_DATE_DT (#wh_cd#), 20)
		WHERE  WALC_NO         IN ( SELECT AL.WALC_NO
			                          FROM TL_WH_WAVE_OB WO
			                             , TL_WH_ALLC AL
			                         WHERE WO.WOB_BK_NO = AL.WOB_BK_NO
			                           AND WO.WAVE_NO = #wave_no#			                        
		                          )
		
	</update>
	<!-- Tan.Pham (E) -->

<!-- Duy.Nguyen (S) -->
	<typeAlias alias="CommonCodeInfoVO" type="com.clt.apps.fis.wms.common.dto.CommonCodeInfoVO"/>
	<select id="searchRateCode" resultClass="CommonCodeInfoVO">
		SELECT T.LOC_CD AS CODE_CD, T.LOC_NM AS CODE_NM
		FROM   TL_LOC T
		WHERE  T.USE_YN = 'Y'
		AND    T.TERMINAL_YN IS NULL
		AND    T.CY_YN IS NULL
		AND    T.CFS_YN IS NULL
		AND    T.WH_YN IS NULL
		AND    T.RAIL_YN IS NULL
		AND    T.DOOR_YN IS NULL
		AND    T.LOC_CD = #code_cd#
		<isEqual property="grp_cd" compareValue="S">	
			AND    T.SEA_AIR_CLS = 'S' -- Ocean
		</isEqual>
		<isEqual property="grp_cd" compareValue = "A">	
			AND    T.SEA_AIR_CLS = 'A' -- AIR
		</isEqual>
		<isEqual property="grp_cd" compareValue = "D">	
			AND    T.SEA_AIR_CLS != 'A' -- Domestic
		</isEqual>
 		UNION
		SELECT D.CODE_CD ,D.CODE_NM
		FROM   TL_CODE_GRP G,
		       TL_CODE_DTL D
		WHERE  G.GRP_CD = D.GRP_CD
		AND    G.GRP_CD = 'Z11'
		AND    G.GRP_USE_FLG = 'Y'
		AND    D.CODE_USE_FLG = 'Y'	
		AND	   D.CODE_CD = #code_cd#  
		UNION
        SELECT C.CTRY_CD AS CODE_CD, C.CTRY_NM AS CODE_NM
        	FROM TL_COUNTRY C
        	WHERE C.CTRY_CD = #code_cd#
	</select>

	<typeAlias alias="WaveBookingSelectPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WaveBookingSelectPopupVO"/>
	<select id="searchWaveNewOrderList" parameterClass="java.util.HashMap" resultClass="WaveBookingSelectPopupVO">
		/*searchFreightMgmtVatList*/
		SELECT OB.WOB_BK_NO
	     , OB.BK_DATE
	     , OB.EST_OUT_DT
	     , OB.BUYER_CD
	     , dbo.TL_GET_CUST_NM(OB.BUYER_CD) AS BUYER_NM
	     , OB.CTRT_NO
	     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	     , OB.CUST_ORD_NO
	     , OB.WH_CD
	     , OB.CTRT_NO
	     , '' AS WAVE_NO
	     , '' AS WALC_NO
	     , 0 AS ISSU_CNT
	     , 0 AS LP_CNT
	     , 0 AS ALLC_CNT
	  FROM TL_WH_OB OB
	 WHERE OB.BK_STS_CD = 'I'
	<isNotEmpty property="wh_cd">
		   AND OB.WH_CD = #wh_cd#
	</isNotEmpty> 
	<isNotEmpty property="ctrt_no">	
		   AND OB.CTRT_NO = #ctrt_no#
	</isNotEmpty> 
	<isNotEmpty property="buyer_cd">		
		   AND OB.BUYER_cd = #buyer_cd# 
	</isNotEmpty> 
	<isNotEmpty property="fm_bk_date">
		   AND OB.BK_DATE BETWEEN REPLACE(#fm_bk_date#, '-', '')  AND REPLACE(#to_bk_date#, '-','') /*Booking date between*/
	</isNotEmpty> 
	<isNotEmpty property="in_wob_bk_no">	
		   AND OB.WOB_BK_NO IN <iterate property="in_wob_bk_no_in" conjunction="," open="(" close=")">  #in_wob_bk_no_in[]#  </iterate>
	</isNotEmpty>
	   AND NOT EXISTS /* 기존할당건 제외 */
	                 ( SELECT 'X'
	                     FROM TL_WH_ALLC AC
	                    WHERE AC.WOB_BK_NO = OB.WOB_BK_NO
	                  )
	   AND NOT EXISTS /* 기존 WAVE에 속한건 제외*/
	                 ( SELECT 'X'
	                     FROM TL_WH_WAVE_OB WV
	                    WHERE WV.WOB_BK_NO = OB.WOB_BK_NO
	                  )   
	 ORDER BY OB.WOB_BK_NO ASC    
	</select>

	<select id="searchFreightMgmtVatList" parameterClass="java.util.HashMap" resultClass="CommonCodeInfoVO">
		/*searchFreightMgmtVatList*/
		SELECT 'NIL' AS CODE_CD
	          ,'NIL' AS CODE_NM
	          ,1 AS SORT
	          ,(100000 +(ROW_NUMBER() OVER (ORDER BY (SELECT GRP_CD FROM TL_CODE_DTL)) * 10)) AS SORTKEY
	     
	     WHERE 'Y' = (SELECT CASE COUNT(*) WHEN 0 THEN 'Y' ELSE 'n' END AS NIL_FLAG
	                    FROM TL_CODE_DTL T
	                   WHERE T.GRP_CD = 'S34'
	                     AND T.CODE_NM = #opt_itm2#) 
	    UNION  
	    SELECT T.TAX_CD AS CODE
	          ,CASE WHEN (SELECT L.CTRY_CD 
                            FROM TL_ORG O, TL_LOC L 
                           WHERE O.CITY = L.LOC_CD 
                             AND O.USE_FLG = 'Y'
                             AND L.USE_YN = 'Y'
                             AND O.OFFICE_CD = T.BRANCH) IN ('IN','TH') THEN CAST(T.PERCENTAGE as VARCHAR(100))+'('+T.TAX_CD+')'
                    WHEN T.INCLUSIVE_YN = 'Y' THEN CONVERT(VARCHAR, T.PERCENTAGE)+'(I)'
                    ELSE CAST(T.PERCENTAGE as VARCHAR(100))
               END AS NAME
	          ,2 AS SORT 
	          ,(100000 +(ROW_NUMBER() OVER (ORDER BY (SELECT GRP_CD FROM TL_CODE_DTL)) * 10)) AS SORTKEY
	      FROM TC_TAX_CODE T
	     WHERE 1=1
	       AND T.SELL_BUY_CLS 	= #opt_itm1#
	       AND T.BRANCH 		= #opt_itm2#
	       AND T.ACTIVE_YN 		= 'Y'
	     ORDER BY SORT
	</select>

	<select id="searchFreightCopyFormDtlSellList" parameterClass="java.util.HashMap" resultClass="FreightCopyFormVO">
		SELECT T.FRT_DOC_NO,
		       T.SB_CLS_CD,
		       T.FRT_SEQ,
		       T.DOC_CLS_CD,
		       T.FRT_BR_CD,
		       T.CUST_CD,
		       (SELECT C.CUST_LOC_NM FROM TL_CUST C WHERE C.CUST_CD = T.CUST_CD ) AS CUST_NM,
		       T.ACCRUAL_CD,
		       T.FRT_CD,
		       T.FRT_NM,
		       T.CURR_CD,
		       T.UNIT_CD,
		       T.UNIT_PRICE,
		       T.VAL_CLS_CD,
		       T.PASS_CD,
		       T.CUST_ORG_YN AS ORG_YN
		  FROM TL_FRT_MST T
		 WHERE 1=1
		   AND T.FRT_DOC_NO = #f_fcr_doc_no#
		   AND T.DOC_CLS_CD = #f_doc_cls_cd#
		   AND T.FRT_BR_CD  = #org_cd#
		   AND T.SB_CLS_CD  = 'S'
		   AND T.RELAY_CD IS NULL
		 ORDER BY T.FRT_SEQ				
	</select>
	
	<select id="searchFreightCopyFormDtlBuyList" parameterClass="java.util.HashMap" resultClass="FreightCopyFormVO">
		SELECT T.FRT_DOC_NO,
		       T.SB_CLS_CD,
		       T.FRT_SEQ,
		       T.DOC_CLS_CD,
		       T.FRT_BR_CD,
		       T.CUST_CD,
		       (SELECT C.CUST_LOC_NM FROM TL_CUST C WHERE C.CUST_CD = T.CUST_CD ) AS CUST_NM,
		       T.ACCRUAL_CD,
		       T.FRT_CD,
		       T.FRT_NM,
		       T.CURR_CD,
		       T.UNIT_CD,
		       T.UNIT_PRICE,
		       T.VAL_CLS_CD,
		       T.PASS_CD,
		       T.CUST_ORG_YN AS ORG_YN
		  FROM TL_FRT_MST T
		 WHERE 1=1
		   AND T.FRT_DOC_NO = #f_fcr_doc_no#
		   AND T.DOC_CLS_CD = #f_doc_cls_cd#
		   AND T.FRT_BR_CD  = #org_cd#
		   AND T.SB_CLS_CD  = 'B'
		   AND T.RELAY_CD IS NULL
		 ORDER BY T.FRT_SEQ
				
	</select>

	<select id="searchFreightCopyFormFCR" parameterClass="java.util.HashMap" resultClass="FreightCopyFormVO">
		SELECT 'F' AS DOC_CLS_CD
		      ,'' AS WO_NO
		      ,'' AS SO_NO
		      ,T.FCR_NO AS FCR_NO
		      ,'' AS WO_ORD_TP_NM
		      ,T.CTRT_NO
		      ,dbo.TL_GET_CTRT_NM(T.CTRT_NO) AS CTRT_NM
		      ,'' AS SPROV_CD
		      ,'' AS SPROV_NM
		      ,'' AS WO_CUST_CD
		      ,'' AS WO_CUST_NM
		      ,'' AS WO_DT
		      ,ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
		                WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
		                ELSE ''
		           END,
		           CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
		                WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
		                ELSE ''
		           END) AS EST_CMPL_DT
		      ,ISNULL(A.HAWB_NO,F.HBL_NO) AS HBL_NO
		      ,ISNULL(A.MAWB_NO,F.MBL_NO) AS MBL_NO     
		      ,ISNULL(A.ONBOARD_YMD,F.ETD) AS ETD
		      ,ISNULL(A.ARRIVAL_YMD,F.ETA) AS ETA
		  FROM TL_EO_FCR T LEFT JOIN TL_EO_AFWD A ON T.SO_NO = A.SO_NO LEFT JOIN TL_EO_SFWD F ON T.SO_NO = F.SO_NO
		      ,TL_SO S
		 WHERE T.SO_NO = S.SO_NO
		   AND ISNULL(F.SFWD_STS_CD,'I') != 'I'
		   AND EXISTS ( SELECT 'X'
		                  FROM TL_FRT_MST FM
		                 WHERE FM.FRT_DOC_NO = T.FCR_NO
		                   AND FM.DOC_CLS_CD = 'F'
		                   AND FM.FRT_BR_CD  = #org_cd# )
		   <isNotEmpty property="wo_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO 		   = T.SO_NO
		                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
		                   AND WO.WO_NO 		   = #wo_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="so_no">   
			   AND T.SO_NO = #so_no#
   		   </isNotEmpty>
		   <isNotEmpty property="fcr_no">   
			   AND T.FCR_NO = #fcr_no#
   		   </isNotEmpty>
		   <isNotEmpty property="hbl_no">   
			   AND ISNULL(A.HAWB_NO,F.HBL_NO) = #hbl_no#
   		   </isNotEmpty>
		   <isNotEmpty property="mbl_no">   
			   AND ISNULL(A.MAWB_NO,F.MBL_NO) = #mbl_no#
   		   </isNotEmpty>
		   <isNotEmpty property="ctrt_no">   
			   AND T.CTRT_NO = #ctrt_no#
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_fr_dt">   
			   <![CDATA[ 
			   AND ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
			                WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
			                ELSE ''
			           END,
			           CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
			                WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
			                ELSE ''
			           END) >= REPLACE(#pfm_fr_dt#, '-','')
			   ]]>   
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_to_dt">   
			   <![CDATA[ 
			   AND ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
			                WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
			                ELSE ''
			           END,
			           CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
			                WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
			                ELSE ''
			           END) <= REPLACE(#pfm_to_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="etd_fr_dt">   
			   <![CDATA[       
			   AND ISNULL(A.ONBOARD_YMD,F.ETD) >= REPLACE(#etd_fr_dt#, '-','')
			   ]]> 
   		   </isNotEmpty>
		   <isNotEmpty property="etd_to_dt">   
			   <![CDATA[       
			   AND ISNULL(A.ONBOARD_YMD,F.ETD) <= REPLACE(#etd_to_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="eta_fr_dt">   
			   <![CDATA[    
			   AND ISNULL(A.ARRIVAL_YMD,F.ETA) >= REPLACE(#eta_fr_dt#, '-','')
			   ]]> 
   		   </isNotEmpty>
		   <isNotEmpty property="eta_to_dt">   
			   <![CDATA[    
			   AND ISNULL(A.ARRIVAL_YMD,F.ETA) <= REPLACE(#eta_to_dt#, '-','')
			   ]]>  
   		   </isNotEmpty>
	</select>
	
	<select id="searchFreightCopyFormSVO" parameterClass="java.util.HashMap" resultClass="FreightCopyFormVO">
	    SELECT 'S' AS DOC_CLS_CD
		      ,'' AS WO_NO
		      ,'' AS FCR_NO
		      ,T.SO_NO AS SO_NO
		      ,'' AS WO_ORD_TP_NM
		      ,T.CTRT_NO
		      ,dbo.TL_GET_CTRT_NM(T.CTRT_NO) AS CTRT_NM
		      ,'' AS SPROV_CD
		      ,'' AS SPROV_NM
		      ,'' AS WO_CUST_CD
		      ,'' AS WO_CUST_NM
		      ,'' AS WO_DT
		      ,WB.EST_CMPL_DT AS EST_CMPL_DT
		      ,WB.HBL_NO AS HBL_NO
		      ,WB.MBL_NO AS MBL_NO
		      ,WB.ETD AS ETD
		      ,WB.ETA AS ETA
		  FROM TL_SO T LEFT JOIN TL_EO_WB WB ON T.SO_NO = WB.SO_NO
		 WHERE
		   EXISTS ( SELECT 'X'
		                  FROM TL_FRT_MST FM
		                 WHERE FM.FRT_DOC_NO = T.SO_NO
		                   AND FM.DOC_CLS_CD = 'S'
		                   AND FM.FRT_BR_CD  = #org_cd# )
		   <isNotEmpty property="wo_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO            = T.SO_NO
		                   AND WO.WO_ORD_TP_CD     = 'P'
		                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
		                   AND WO.WO_NO = #wo_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="so_no">   
			   AND T.SO_NO = #so_no#
   		   </isNotEmpty>
		   <isNotEmpty property="fcr_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_FCR EF
		                 WHERE EF.SO_NO = T.SO_NO
		                   AND EF.FCR_NO = #fcr_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="hbl_no">   
			   AND WB.HBL_NO = #hbl_no#
   		   </isNotEmpty>
		   <isNotEmpty property="mbl_no">   
			   AND WB.MBL_NO = #mbl_no#
   		   </isNotEmpty>
		   <isNotEmpty property="ctrt_no">   
			   AND T.CTRT_NO = #ctrt_no#
   		   </isNotEmpty>
		   <isNotEmpty property="sprov_cd">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO 		    = T.SO_NO
		                   AND WO.WO_ORD_TP_CD 		= 'P'
		                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
		                   AND WO.SPROV_CD 			= #sprov_cd# )
   		   </isNotEmpty>
		   <isNotEmpty property="wo_cust_cd">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO 			= T.SO_NO
		                   AND WO.WO_ORD_TP_CD 		= 'P'
		                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
		                   AND WO.SVC_CUST_CD 		= #wo_cust_cd# )
   		   </isNotEmpty>
		   <isNotEmpty property="wo_fr_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			= T.SO_NO
			                   AND WO.WO_ORD_TP_CD 		= 'P'
			                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
			                   AND WO.WO_DT >= REPLACE(#wo_fr_dt#, '-', '') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="wo_to_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			= T.SO_NO
			                   AND WO.WO_ORD_TP_CD 		= 'P'
			                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
			                   AND WO.WO_DT <= REPLACE(#wo_to_dt#, '-','')  )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_fr_dt">   
			   <![CDATA[ 
			   AND WB.EST_CMPL_DT >= REPLACE(#pfm_fr_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_to_dt">   
			   <![CDATA[ 
			   AND WB.EST_CMPL_DT <= REPLACE(#pfm_to_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="etd_fr_dt">   
			   <![CDATA[  	
			   AND WB.ETD >= REPLACE(#etd_fr_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="etd_to_dt">   
			   <![CDATA[  	
			   AND WB.ETD <= REPLACE(#etd_to_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="eta_fr_dt">   
			   <![CDATA[
			   AND WB.ETA >= REPLACE(#eta_fr_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="eta_to_dt">   
			   <![CDATA[
			   AND WB.ETA <= REPLACE(#eta_to_dt#, '-','')
			   ]]>
   		   </isNotEmpty>
		UNION
	    SELECT 'S' AS DOC_CLS_CD
		      ,'' AS WO_NO
		      ,'' AS FCR_NO
		      ,T.SO_NO AS SO_NO
		      ,'' AS WO_ORD_TP_NM
		      ,T.CTRT_NO
		      ,dbo.TL_GET_CTRT_NM(T.CTRT_NO) AS CTRT_NM
		      ,'' AS SPROV_CD
		      ,'' AS SPROV_NM
		      ,'' AS WO_CUST_CD
		      ,'' AS WO_CUST_NM
		      ,'' AS WO_DT
		      ,'' AS EST_CMPL_DT
		      ,'' AS HBL_NO
		      ,'' AS MBL_NO
		      ,'' AS ETD
		      ,'' AS ETA
		  FROM TL_SO T LEFT JOIN TL_EO_WO WB ON T.SO_NO = WB.SO_NO
		 WHERE
		   EXISTS ( SELECT 'X'
		                  FROM TL_FRT_MST FM
		                 WHERE FM.FRT_DOC_NO = T.SO_NO
		                   AND FM.DOC_CLS_CD = 'S'
		                   AND FM.FRT_BR_CD  = #org_cd# )
		   <isNotEmpty property="wo_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO            = T.SO_NO
		                   AND WO.WO_ORD_TP_CD     = 'P'
		                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
		                   AND WO.WO_NO = #wo_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="so_no">   
			   AND T.SO_NO = #so_no#
   		   </isNotEmpty>
		   <isNotEmpty property="fcr_no">
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_FCR EF
		                 WHERE EF.SO_NO = T.SO_NO
		                   AND EF.FCR_NO = #fcr_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="hbl_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                      ,TL_EO_WO_ITEM WI
		                 WHERE WO.SO_NO 			 = T.SO_NO
		                   AND WO.EO_WO_NO 		 = WI.EO_WO_NO
		                   AND WO.WO_ORD_TP_CD     = 'P'
		                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
		                   AND WI.REF_HBL_NO 		 = #hbl_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="mbl_no">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                      ,TL_EO_WO_ITEM WI
		                 WHERE WO.SO_NO 			 = T.SO_NO
		                   AND WO.EO_WO_NO 		 = WI.EO_WO_NO
		                   AND WO.WO_ORD_TP_CD 	 = 'P'
		                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
		                   AND WI.REF_MBL_NO 		 = #mbl_no# )
   		   </isNotEmpty>
		   <isNotEmpty property="ctrt_no">   
			   AND T.CTRT_NO = #ctrt_no#
   		   </isNotEmpty>
		   <isNotEmpty property="sprov_cd">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO 		    = T.SO_NO
		                   AND WO.WO_ORD_TP_CD 		= 'P'
		                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
		                   AND WO.SPROV_CD 			= #sprov_cd# )
   		   </isNotEmpty>
		   <isNotEmpty property="wo_cust_cd">   
			   AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_WO WO
		                 WHERE WO.SO_NO 			= T.SO_NO
		                   AND WO.WO_ORD_TP_CD 		= 'P'
		                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
		                   AND WO.SVC_CUST_CD 		= #wo_cust_cd#)
   		   </isNotEmpty>
		   <isNotEmpty property="wo_fr_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			= T.SO_NO
			                   AND WO.WO_ORD_TP_CD 		= 'P'
			                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
			                   AND WO.WO_DT >= REPLACE(#wo_fr_dt#, '-', '') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="wo_to_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			= T.SO_NO
			                   AND WO.WO_ORD_TP_CD 		= 'P'
			                   AND ISNULL(WO.CR_FLG,'N')  != 'Y'
			                   AND WO.WO_DT <= REPLACE(#wo_to_dt#, '-','')  )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_fr_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.EST_CMPL_DT >= REPLACE(#pfm_fr_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="pfm_to_dt">   
			   <![CDATA[ 
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.EST_CMPL_DT <= REPLACE(#pfm_to_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="etd_fr_dt">   
			   <![CDATA[  	
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.ETD >= REPLACE(#etd_fr_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="etd_to_dt">   
			   <![CDATA[  	
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.ETD <= REPLACE(#etd_to_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="eta_fr_dt">   
			   <![CDATA[
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.ETA >= REPLACE(#eta_fr_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
		   <isNotEmpty property="eta_to_dt">   
			   <![CDATA[
			   AND EXISTS ( SELECT 'X'
			                  FROM TL_EO_WO WO
			                 WHERE WO.SO_NO 			 = T.SO_NO
			                   AND WO.WO_ORD_TP_CD 	 = 'P'
			                   AND ISNULL(WO.CR_FLG,'N') != 'Y'
			                   AND WO.ETA <= REPLACE(#eta_to_dt#, '-','') )
			   ]]>
   		   </isNotEmpty>
	</select>
	
	

	

	<select id="searchFreightCopyFormWO" parameterClass="java.util.HashMap" resultClass="FreightCopyFormVO">
	    SELECT 'W' AS DOC_CLS_CD
		      ,T.WO_NO
		      ,'' AS FCR_NO
		      ,'' AS SO_NO
		      ,dbo.TL_GET_COMM_NM('WT',T.WO_ORD_TP_CD) AS WO_ORD_TP_NM
		      ,W.CTRT_NO
		      ,dbo.TL_GET_CTRT_NM(W.CTRT_NO) AS CTRT_NM
		      ,T.SPROV_CD
		      ,dbo.TL_GET_CUST_NM(T.SPROV_CD) AS SPROV_NM
		      ,T.SVC_CUST_CD AS WO_CUST_CD
		      ,dbo.TL_GET_CUST_NM(T.SVC_CUST_CD) AS WO_CUST_NM
		      ,T.WO_DT
		      ,CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.EST_CMPL_DT
		            ELSE ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
		                          WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
		                          ELSE ''
		                     END,
		                     CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
		                          WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
		                          ELSE ''
		                     END)
		       END AS EST_CMPL_DT
		      ,ISNULL(A.HAWB_NO,F.HBL_NO) AS HBL_NO
		      ,ISNULL(A.MAWB_NO,F.MBL_NO) AS MBL_NO
		      ,CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETD
		            ELSE ISNULL(A.ONBOARD_YMD,F.ETD)
		       END AS ETD
		      ,CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETA
		            ELSE ISNULL(A.ARRIVAL_YMD,F.ETA)
		       END AS ETA
		  FROM TL_EO_WO T LEFT JOIN (SELECT I.WO_NO, 
		               MAX(I.CTRT_NO) AS CTRT_NO,
		               MAX(I.RTP_NO) AS RTP_NO,
		               MAX(I.SO_NO) AS SO_NO
		          FROM TL_EO_WO_ITEM I
		         WHERE 1=1
		         GROUP BY I.WO_NO
		       ) W on T.WO_NO = W.WO_NO LEFT JOIN TL_EO_AFWD A ON W.SO_NO = A.SO_NO LEFT JOIN TL_EO_SFWD F ON W.SO_NO = F.SO_NO
		 WHERE
		   ISNULL(T.CR_FLG,'N') != 'Y'
		   AND EXISTS ( SELECT 'X'
		                  FROM TL_FRT_MST FM
		                 WHERE FM.FRT_DOC_NO = T.WO_NO
		                   AND FM.DOC_CLS_CD = 'W'
		                   AND FM.FRT_BR_CD  = #org_cd# )
		   <isNotEmpty property="wo_no">		
	         AND T.WO_NO = #wo_no#
	       </isNotEmpty>
	       <isNotEmpty property="so_no">		
	         AND W.SO_NO = #so_no#
	       </isNotEmpty>
		   <isNotEmpty property="hbl_no">		
	         AND ISNULL(A.HAWB_NO,F.HBL_NO) = #hbl_no#
	       </isNotEmpty>
		   <isNotEmpty property="mbl_no">		
	         AND ISNULL(A.MAWB_NO,F.MBL_NO) = #mbl_no#
	       </isNotEmpty>
		   <isNotEmpty property="fcr_no">		
	          AND EXISTS ( SELECT 'X'
		                  FROM TL_EO_FCR EF
		                 WHERE EF.SO_NO  = W.SO_NO
		                   AND EF.FCR_NO = #fcr_no# )
	       </isNotEmpty>
		   <isNotEmpty property="ctrt_no">		
	         AND W.CTRT_NO = #ctrt_no#
	       </isNotEmpty>
		   <isNotEmpty property="sprov_cd">		
	         AND T.SPROV_CD = #sprov_cd#
	       </isNotEmpty>
		   <isNotEmpty property="wo_cust_cd">		
	         AND T.SVC_CUST_CD = #wo_cust_cd#
	       </isNotEmpty>
		   <isNotEmpty property="wo_fr_dt">		
	         <![CDATA[ 
			   AND T.WO_DT >= REPLACE(#wo_fr_dt#, '-', '')
			 ]]>
	       </isNotEmpty>
		   <isNotEmpty property="wo_to_dt">		
	         <![CDATA[ 
			   AND T.WO_DT <= REPLACE(#wo_to_dt#, '-','') 
			   ]]>
	       </isNotEmpty>
		   <isNotEmpty property="pfm_fr_dt">		
	         <![CDATA[ 
		   		AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.EST_CMPL_DT
		            ELSE ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
		                          WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
		                          ELSE ''
		                     END,
		                     CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
		                          WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
		                          ELSE ''
		                     END)
		       END >= REPLACE(#pfm_fr_dt#, '-','')
		   ]]>    
	       </isNotEmpty>
		   <isNotEmpty property="pfm_to_dt">		
	         <![CDATA[ 
			   AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.EST_CMPL_DT
			            ELSE ISNULL(CASE WHEN A.ORI_BR_CD  = #org_cd# OR A.TRI_BR_CD = #org_cd# THEN A.ONBOARD_YMD
			                          WHEN A.DEST_BR_CD = #org_cd# THEN A.ARRIVAL_YMD
			                          ELSE ''
			                     END,
			                     CASE WHEN F.ORI_BR_CD  = #org_cd# OR F.TRI_BR_CD = #org_cd# THEN F.ETD
			                          WHEN F.DEST_BR_CD = #org_cd# THEN F.ETA
			                          ELSE ''
			                     END)
			       END <= REPLACE(#pfm_to_dt#, '-','')
			   ]]>
	       </isNotEmpty>
		   <isNotEmpty property="etd_fr_dt">		
	         <![CDATA[   
			   AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETD
			            ELSE ISNULL(A.ONBOARD_YMD,F.ETD)
			       END  >= REPLACE(#etd_fr_dt#, '-','')
			   ]]>
	       </isNotEmpty>
		   <isNotEmpty property="etd_to_dt">		
	         <![CDATA[   
			   AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETD
			            ELSE ISNULL(A.ONBOARD_YMD,F.ETD)
			       END  <= REPLACE(#etd_to_dt#, '-','')
			   ]]>
	       </isNotEmpty>
		   <isNotEmpty property="eta_fr_dt">		
	         <![CDATA[
			   AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETA
			            ELSE ISNULL(A.ARRIVAL_YMD,F.ETA)
			       END  >= REPLACE(#eta_fr_dt#, '-','')
			   ]]>
	       </isNotEmpty>
		   <isNotEmpty property="eta_to_dt">		
	         <![CDATA[
			   AND CASE WHEN T.WO_ORD_TP_CD = 'P' THEN T.ETA
			            ELSE ISNULL(A.ARRIVAL_YMD,F.ETA)
			       END  <= REPLACE(#eta_to_dt#, '-','')
			   ]]>  
	       </isNotEmpty>
	</select>

	<select id="searchFreightHstSellList" parameterClass="java.util.HashMap" resultClass="FreightHstVO">
	/*searchFreightHstSellList*/
		SELECT T.HST_SEQ
		      ,T.HST_TP_CD
		      ,dbo.TL_GET_USER_NM(T.MODI_ID) AS UPDATE_USER
		      ,CONVERT(VARCHAR(19), T.MODI_SYS_DT, 120) AS UPDATE_TIME
		      ,T.FRT_SEQ
		      ,T.CUST_CD
		      ,dbo.TL_GET_CUST_NM(T.CUST_CD) AS CUST_NM
		      ,T.FRT_CD
		      ,T.FRT_NM
		      ,dbo.TL_GET_COMM_NM('FNA',T.ACCRUAL_CD) AS ACCRUAL_NM
		      ,T.CURR_CD
		      ,T.EXRATE
		      ,T.UNIT_CD
		      ,T.UNIT_QTY
		      ,T.UNIT_PRICE
		      ,T.AMT
		      ,T.LOC_AMT
		      ,T.VAL_CLS_CD
		      ,T.VAT_AMT
		      ,T.CURR_VAT_AMT
		      ,T.INTERNAL_STS_CD
		      ,T.TTL_AMT
		      ,T.SB_CLS_CD
		  FROM TL_FRT_MST_HST T
		 WHERE T.FRT_DOC_NO 	       = #frt_doc_no#
		   AND T.FRT_BR_CD  		   = #org_cd#
		   AND ISNULL(T.HST_DEL_FLG,'N') != 'Y'
		   AND T.SB_CLS_CD 			   = 'S'
		 ORDER BY T.FRT_SEQ, T.HST_SEQ DESC 
	</select>

	<select id="searchFreightHstBuyList" parameterClass="java.util.HashMap" resultClass="FreightHstVO">
	/*searchFreightHstBuyList*/
		SELECT T.HST_SEQ
		      ,T.HST_TP_CD
		      ,dbo.TL_GET_USER_NM(T.MODI_ID) AS UPDATE_USER
		      ,CONVERT(VARCHAR(19), T.MODI_SYS_DT, 120) AS UPDATE_TIME
		      ,T.FRT_SEQ
		      ,T.CUST_CD
		      ,dbo.TL_GET_CUST_NM(T.CUST_CD) AS CUST_NM
		      ,T.FRT_CD
		      ,T.FRT_NM
		      ,dbo.TL_GET_COMM_NM('FNA',T.ACCRUAL_CD) AS ACCRUAL_NM
		      ,T.CURR_CD
		      ,T.EXRATE
		      ,T.UNIT_CD
		      ,T.UNIT_QTY
		      ,T.UNIT_PRICE
		      ,T.AMT
		      ,T.LOC_AMT
		      ,T.VAL_CLS_CD
		      ,T.VAT_AMT
		      ,T.CURR_VAT_AMT
		      ,T.INTERNAL_STS_CD
		      ,T.TTL_AMT
		      ,T.SB_CLS_CD
		  FROM TL_FRT_MST_HST T
		 WHERE T.FRT_DOC_NO 	       = #frt_doc_no#
		   AND T.FRT_BR_CD  		   = #org_cd#
		   AND ISNULL(T.HST_DEL_FLG,'N') != 'Y'
		   AND T.SB_CLS_CD 			   = 'B'
		 ORDER BY T.FRT_SEQ, T.HST_SEQ DESC 
	</select>
	
	<select id="searchFreightHistoryDeleteList" parameterClass="java.util.HashMap" resultClass="FreightHstVO">
	/*searchFreightHistoryDeleteList*/
		SELECT CASE T.SB_CLS_CD WHEN 'S' THEN 'Selling' WHEN 'B' THEN 'Buying' END AS SB_CLS_NM		      
		      ,T.HST_SEQ
		      ,T.HST_TP_CD
		      ,dbo.TL_GET_USER_NM(T.MODI_ID) AS UPDATE_USER
		      ,CONVERT(VARCHAR(19), T.MODI_SYS_DT, 120) AS UPDATE_TIME
		      ,T.FRT_SEQ
		      ,T.CUST_CD
		      ,dbo.TL_GET_CUST_NM(T.CUST_CD) AS CUST_NM
		      ,T.FRT_CD
		      ,T.FRT_NM
		      ,dbo.TL_GET_COMM_NM('FNA',T.ACCRUAL_CD) AS ACCRUAL_NM
		      ,T.CURR_CD
		      ,T.EXRATE
		      ,T.UNIT_CD
		      ,T.UNIT_QTY
		      ,T.UNIT_PRICE
		      ,T.AMT
		      ,T.LOC_AMT
		      ,T.VAL_CLS_CD
		      ,T.VAT_AMT
		      ,T.CURR_VAT_AMT
		      ,T.INTERNAL_STS_CD
		      ,T.TTL_AMT
		  FROM TL_FRT_MST_HST T
		 WHERE T.FRT_DOC_NO  = #frt_doc_no#
		   AND T.FRT_BR_CD 	 = #org_cd#
		   AND T.HST_DEL_FLG = 'Y'
		 ORDER BY T.FRT_SEQ, T.HST_SEQ DESC 
	</select>

	<select id="searchWHInLotSelectList" parameterClass="java.util.HashMap" resultClass = "WHInbkItemVO">
		/* WHInbk.searchWHInLotSelectList */
			SELECT I.ITEM_CD,
			       I.ITEM_NM,
			       L.LOT_ATTRIB_01 AS INBOUND_DT, 
			       L.LOT_ATTRIB_02 AS LOT_NO,
			       L.LOT_ATTRIB_03 AS EXP_DT,
			       L.LOT_ATTRIB_04 AS LOT_04,
			       L.LOT_ATTRIB_05 AS LOT_05,
			       L.LOT_ID AS FIX_LOT_ID      
			  FROM TL_CTRT_CUST_ITEM_LOT L, TL_CTRT_CUST_ITEM I
			 WHERE L.CTRT_NO = I.CTRT_NO
			   AND L.ITEM_SYS_NO = I.ITEM_SYS_NO
			   AND I.ITEM_USE_FLG = 'Y'
               AND L.WH_CD = #wh_cd#		
			   AND L.CTRT_NO = #ctrt_no#
			   
		   <isNotEmpty property="item_cd">		
	         AND I.ITEM_CD = #item_cd#
	       </isNotEmpty>
	       
	       <isNotEmpty property="fix_lot_id">		
	         AND L.LOT_ID LIKE #fix_lot_id# + '%'
	       </isNotEmpty>
	       
	   <isEqual property="prop_date_tp" compareValue="INBOUND_DT">           
           <isNotEmpty property="prop_date_fm">		
	         <![CDATA[ AND L.LOT_ATTRIB_01 >= ]]> REPLACE (#prop_date_fm#, '-', '')    /* INBOUND DATE */
	       </isNotEmpty>	
	       <isNotEmpty property="prop_date_to">		
	         <![CDATA[ AND L.LOT_ATTRIB_01 <= ]]> REPLACE (#prop_date_to#, '-', '')
	       </isNotEmpty>
       </isEqual>
       
       <isEqual property="prop_date_tp" compareValue="EXP_DT">           
           <isNotEmpty property="prop_date_fm">		
	         <![CDATA[ AND L.LOT_ATTRIB_03 >= ]]> REPLACE (#prop_date_fm#, '-', '')    /* EXPIRATION DATE */
	       </isNotEmpty>	
	       <isNotEmpty property="prop_date_to">		
	         <![CDATA[ AND L.LOT_ATTRIB_03 <= ]]> REPLACE (#prop_date_to#, '-', '')
	       </isNotEmpty>
       </isEqual>
       
       <isNotEmpty property="prop_no">
       		<isEqual property="prop_no_tp" compareValue="LOT_NO">
       			AND L.LOT_ATTRIB_02 = #prop_no#
       		</isEqual>
       		<isEqual property="prop_no_tp" compareValue="LOT_04">
       			AND L.LOT_ATTRIB_04 = #prop_no#
       		</isEqual>
   		   <isEqual property="prop_no_tp" compareValue="LOT_05">
       			AND L.LOT_ATTRIB_05 = #prop_no#
       		</isEqual>
	   </isNotEmpty>
	   
          ORDER BY I.ITEM_CD,
                   L.LOT_ATTRIB_01,
	               L.LOT_ATTRIB_02,
	               L.LOT_ATTRIB_03,
	               L.LOT_ATTRIB_04,
	               L.LOT_ATTRIB_05   		
	</select>
<!-- Duy.Nguyen (E) -->
	
	<!--  Khanh (S) -->
	
	<select id="searchWHItemCodeInfo" parameterClass="java.util.HashMap" resultClass="ContractItemCodeInfoVO">
		/* ComIn.searchWHItemCodeInfo */	
		SELECT T.CTRT_NO
		      ,T.ITEM_SYS_NO
		      ,T.ITEM_CD
		      ,T.ITEM_NM
		      ,ISNULL(T.LOT_NO,'') AS LOT_NO
		      ,ISNULL (T.ITEM_PKGBASEQTY,0) AS ITEM_PKGBASEQTY /*LEVEL 2*/
		      ,ISNULL(T.ITEM_PKGUNIT, '') AS ITEM_PKGUNIT  /*LEVEL 2*/
		      ,ISNULL(T.PKG_LV1_UNIT_CD, '') AS PKG_LV1_UNIT_CD
		      ,ISNULL (T.PKG_LV1_QTY,0) AS PKG_LV1_QTY
		      ,ISNULL(T.PKG_LV3_UNIT_CD, '') AS PKG_LV3_UNIT_CD
		      ,ISNULL (T.PKG_LV3_QTY,0) AS PKG_LV3_QTY
		      ,ISNULL(T.PKG_LV4_UNIT_CD, '') AS PKG_LV4_UNIT_CD
		      ,ISNULL (T.PKG_LV4_QTY,0) AS PKG_LV4_QTY		      
		      ,ISNULL (T.LV1_CBM, 0) AS LV1_CBM
		      ,ISNULL (T.LV1_CBF, 0) AS LV1_CBF
		      ,ISNULL (T.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
		      ,ISNULL (T.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
		      ,ISNULL (T.LV1_NET_KGS, 0) AS LV1_NET_KGS
		      ,ISNULL (T.LV1_NET_LBS, 0) AS LV1_NET_LBS
		      ,ISNULL(T.ITEM_REMARK, '') AS ITEM_REMARK
		      ,dbo.TL_GET_WH_PACK_MST_INFO(T.PKG_LV1_QTY, T.PKG_LV1_UNIT_CD, T.ITEM_PKGBASEQTY, T.ITEM_PKGUNIT
                                     , T.PKG_LV3_QTY, T.PKG_LV3_UNIT_CD, T.PKG_LV4_QTY, T.PKG_LV4_UNIT_CD) AS PKG_INFO 
   
			  ,ISNULL(UNIT_CURR_CD, '') AS UNIT_CURR_CD
              ,ISNULL(UNIT_PRICE, 0) AS  UNIT_PRICE
		  FROM (SELECT C.*,
		               ROW_NUMBER () OVER (PARTITION BY C.ITEM_CD ORDER BY C.ITEM_SYS_NO DESC) AS RNUM
		          FROM TL_CTRT_CUST_ITEM C
		          
		          <isNotEmpty property="item_grp_cd">
		          
		          LEFT JOIN TL_CTRT_CUST_ITEM_GRP IG
										  ON C.CTRT_NO = IG.CTRT_NO
											AND C.ITEM_GRP_CD = IG.ITEM_GRP_CD
													     
			   	   </isNotEmpty>
			   
		         WHERE 1=1
		         
		           AND C.CTRT_NO = #ctrt_no#
			       AND C.ITEM_CD = #item_cd#
			       
			       <isNotEmpty property="item_sys_no">		     
			         AND C.ITEM_SYS_NO = #item_sys_no#
			   		</isNotEmpty>
			   		
		           AND C.ITEM_USE_FLG = 'Y'
		           
		           	<isEqual property="item_grp_cd_include_yn" compareValue="Y">
			         	<isNotEqual property="item_grp_cd" compareValue="">		     
				         AND IG.ITEM_GRP_CD = #item_grp_cd#
				   		</isNotEqual>
			   		 </isEqual>
			   		 
					 <isEqual property="item_grp_cd_include_yn" compareValue="N">		     
			         	<isNotEqual property="item_grp_cd" compareValue="">	
			         	<![CDATA[ AND (IG.ITEM_GRP_CD IS NULL OR IG.ITEM_GRP_CD <> #item_grp_cd#) ]]>	     
				   		</isNotEqual>
			   		 </isEqual>   
		           	
		       ) T
		 WHERE T.RNUM = 1		
	</select>
	
	<select id="searchWarehouseLocPopupInfo" parameterClass="java.util.HashMap" resultClass="WarehouseLocVO">
		SELECT ZONE_CD
		FROM TL_WH_ZONE
		WHERE LOC_CD = #f_loc_cd#
	</select>
	
	<select id="searchWarehouseLocPopupList" parameterClass="java.util.HashMap" resultClass="WarehouseLocVO">
	/*searchWarehouseLocPopupList*/
	SELECT WL.ZONE_CD
		      ,WL.WH_LOC_CD
		      ,WL.WH_LOC_NM
		      ,WL.PROP_CD
		      ,dbo.TL_GET_COMM_NM('WL0', WL.PROP_CD)   AS PROP_NM
		      ,WL.PUT_TP_CD
		      ,dbo.TL_GET_COMM_NM('PP0', WL.PUT_TP_CD) AS PUT_TP_NM
		      ,WP.PUTAWAY_FLG
		      ,WP.ALLOC_FLG
		      ,WP.MOVE_FLG
		      ,WP.REPLENISH_FLG
		      ,WP.ADJUST_FLG
		      ,WL.LOC_CD
		      ,WL.SPACE_TP_CD
		      ,dbo.TL_GET_COMM_NM('WS0', WL.SPACE_TP_CD) AS SPACE_TP_NM
		  FROM TL_WH_LOC WL
		      ,TL_WH_PROP WP
		 WHERE 1=1
		   AND WL.LOC_CD  = WP.LOC_CD
		   AND WL.PROP_CD = WP.PROP_CD
		 
		 <isNotEqual property="f_loc_cd" compareValue="All">
		   AND WL.LOC_CD  = #f_loc_cd#
		 </isNotEqual>
		   
		 <isNotEmpty property="f_wh_loc_cd">
		   AND WL.WH_LOC_CD = #f_wh_loc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="f_wh_loc_nm">
		   AND WL.WH_LOC_NM LIKE '%' + #f_wh_loc_nm# + '%'
		 </isNotEmpty>
		 
		 <isNotEqual property="f_zone_cd" compareValue="ALL">
		   AND WL.ZONE_CD = #f_zone_cd#
		 </isNotEqual>
		 <isNotEqual property="f_prop_cd" compareValue="ALL">
		   AND WL.PROP_CD = #f_prop_cd#
		 </isNotEqual>
		 
		 <isNotEqual property="f_put_tp_cd" compareValue="ALL">
		   AND WL.PUT_TP_CD = #f_put_tp_cd#
		 </isNotEqual>
		 
		 <isEqual property="f_put_tp_cd" compareValue="ALL">
		 	<isEqual property="f_put_tp" compareValue="C">
		       AND WL.PUT_TP_CD IN ('C', 'N')
		    </isEqual>  
		    <isEqual property="f_put_tp" compareValue="E">
		       AND WL.PUT_TP_CD IN ('E', 'N')
		    </isEqual>
		    <isEqual property="f_put_tp" compareValue="N">
		       AND WL.PUT_TP_CD IN ('C', 'E', 'N')
		    </isEqual>
		 </isEqual>
	 	  AND WL.USE_FLG = 'Y'
		  AND ( 1 = 1
		 <isEqual property="f_putaway_flg" compareValue="Y">
		    AND PUTAWAY_FLG = 'Y'
		 </isEqual>
		 
		 <isEqual property="f_alloc_flg" compareValue="Y">
		 	<isEqual property="f_putaway_flg" compareValue="Y">
		   	OR
		 	</isEqual>
		    AND ALLOC_FLG = 'Y'
		 </isEqual>
		 
		 <isEqual property="f_move_flg" compareValue="Y">
		 	<isEqual property="f_putaway_flg" compareValue="Y" >
		 		<isEqual prepend="OR" property="f_alloc_flg" compareValue="Y">
		   		OR
		 		</isEqual>
		 	</isEqual>
		   AND MOVE_FLG = 'Y'
		 </isEqual>
		 
		 <isEqual property="f_replenish_flg" compareValue="Y">
		 	<isEqual property="f_putaway_flg" compareValue="Y" >
		 		<isEqual prepend="OR" property="f_alloc_flg" compareValue="Y">
		 			<isEqual prepend="OR" property="f_move_flg" compareValue="Y">
		   			OR
		   			</isEqual>
		 		</isEqual>
		 	</isEqual>
		   AND REPLENISH_FLG = 'Y'
		 </isEqual>
		 
		 <isEqual property="f_adjust_flg" compareValue="Y">
		 	<isEqual property="f_putaway_flg" compareValue="Y" >
		 		<isEqual prepend="OR" property="f_alloc_flg" compareValue="Y">
		 			<isEqual prepend="OR" property="f_move_flg" compareValue="Y">
		 				<isEqual prepend="OR" property="f_replenish_flg" compareValue="Y">
		   				OR
		   				</isEqual>
		   			</isEqual>
		 		</isEqual>
		 	</isEqual>
		   AND ADJUST_FLG = 'Y'
		 </isEqual>
		 
		   )
		  
	</select>
	
	<select id="searchWHItemCodeList" parameterClass="java.util.HashMap" resultClass="ContractItemCodeInfoVO">
		/* ComIn.searchWHItemCodeList */	
		
		SELECT T.* 
		  FROM (
		  SELECT ROW_NUMBER () OVER (PARTITION BY C.ITEM_CD
        							 ORDER BY C.ITEM_SYS_NO DESC) AS RNUM,
                 C.CTRT_NO,
		         C.ITEM_SYS_NO,
		         C.ITEM_CD,
		         C.ITEM_NM,
		         C.LOT_NO,
		         ISNULL(C.ITEM_PKGBASEQTY,0) AS ITEM_PKGBASEQTY, /*LEVEL 2*/
		         C.ITEM_PKGUNIT,    /*LEVEL 2*/
		         C.PKG_LV1_UNIT_CD,
		         ISNULL(C.PKG_LV1_QTY,0) AS PKG_LV1_QTY,
		         C.PKG_LV3_UNIT_CD, 
		         ISNULL(C.PKG_LV3_QTY,0) AS PKG_LV3_QTY,
		         C.PKG_LV4_UNIT_CD,
		         ISNULL(C.PKG_LV4_QTY,0) AS PKG_LV4_QTY,         
		         ISNULL (C.LV1_CBM, 0) AS LV1_CBM,
		         ISNULL (C.LV1_CBF, 0) AS LV1_CBF,
		         ISNULL (C.LV1_GRS_KGS, 0) AS LV1_GRS_KGS,
		         ISNULL (C.LV1_GRS_LBS, 0) AS LV1_GRS_LBS,
		         ISNULL (C.LV1_NET_KGS, 0) AS LV1_NET_KGS,
		         ISNULL (C.LV1_NET_LBS, 0) AS LV1_NET_LBS,
		         C.ITEM_REMARK,
				 dbo.TL_GET_WH_PACK_MST_INFO(C.PKG_LV1_QTY, C.PKG_LV1_UNIT_CD, C.ITEM_PKGBASEQTY, C.ITEM_PKGUNIT
                                       , C.PKG_LV3_QTY, C.PKG_LV3_UNIT_CD, C.PKG_LV4_QTY, C.PKG_LV4_UNIT_CD) AS PKG_INFO, 
				 UNIT_CURR_CD,
                 UNIT_PRICE
		    FROM TL_CTRT_CUST_ITEM C
		    	<isNotEmpty property="c_item_grp_cd">
							LEFT OUTER JOIN TL_CTRT_CUST_ITEM_GRP IG 
							ON C.CTRT_NO = IG.CTRT_NO
							AND C.ITEM_GRP_CD = IG.ITEM_GRP_CD
			   </isNotEmpty> 
		   WHERE 1 = 1
		     AND C.CTRT_NO = #c_ctrt_no#
		     AND C.ITEM_USE_FLG = 'Y'
		     AND C.ITEM_CD IS NOT NULL <![CDATA[  AND C.ITEM_CD <> '' ]]>
	     <isNotEmpty property="c_item_cd">		     
		     AND C.ITEM_CD  LIKE '%' + #c_item_cd#  + '%' 
		 </isNotEmpty>
	     <isNotEmpty property="c_item_nm">		 
		     AND C.ITEM_NM  LIKE '%' + #c_item_nm#  + '%' 
		 </isNotEmpty>		
		 <isEqual property="c_item_grp_cd_include_yn" compareValue="Y">		     
         	<isNotEmpty property="c_item_grp_cd">		     
	         AND IG.ITEM_GRP_CD = #c_item_grp_cd#
	   		 </isNotEmpty>
   		 </isEqual>
		 <isEqual property="c_item_grp_cd_include_yn" compareValue="N">		 
		 	<isNotEmpty property="c_item_grp_cd">    
	         <![CDATA[ AND (IG.ITEM_GRP_CD IS NULL OR IG.ITEM_GRP_CD <> #c_item_grp_cd#) ]]>
	   		 </isNotEmpty>
   		 </isEqual>     
		 <isEqual property="c_exist_item_bom" compareValue="N">		     
	         AND NOT EXISTS (SELECT * FROM TL_WH_KIT_ITEM KI 
								WHERE 1 = 1
                				AND KI.ITEM_SYS_NO = C.ITEM_SYS_NO     
								AND KI.ITEM_CD = C.ITEM_CD
							)
   		 </isEqual>    
		       ) T
		 WHERE T.RNUM = 1
		 
	 </select>
	 
	 <select id="searchRateLoactionByCTRY" parameterClass="java.util.HashMap" resultClass="RateLocationListVO">
	
		SELECT T.CTRY_CD AS CODE_CD
		     , T.CTRY_NM AS CODE_NM
		FROM   TL_COUNTRY T
		WHERE  1=1
 		<isNotEmpty property="c_code_cd">
		  AND T.CTRY_CD LIKE #c_code_cd# + '%'
		</isNotEmpty>   
 		<isNotEmpty property="c_code_nm">
		  AND UPPER(T.CTRY_NM) LIKE '%' + #c_code_nm#  + '%'
		</isNotEmpty>		
		ORDER BY T.CTRY_CD	
	</select>
	
	<select id="searchRateLoactionByCity" parameterClass="java.util.HashMap" resultClass="RateLocationListVO">
	
		SELECT T.LOC_CD AS CODE_CD
		     , T.LOC_NM AS CODE_NM
		FROM   TL_LOC T
		WHERE  T.USE_YN = 'Y'
		AND    T.TERMINAL_YN IS NULL
		AND    T.CY_YN IS NULL
		AND    T.CFS_YN IS NULL
		AND    T.WH_YN IS NULL
		AND    T.RAIL_YN IS NULL
		AND    T.DOOR_YN IS NULL
		<isEqual property="c_sea_air_cls" compareValue="S">		
		AND    T.SEA_AIR_CLS = 'S'
		</isEqual>
		<isEqual property="c_sea_air_cls" compareValue="A">
		AND    T.SEA_AIR_CLS = 'A'
		</isEqual>
		<isEqual property="c_sea_air_cls" compareValue="D">
		<![CDATA[ AND ISNULL(T.SEA_AIR_CLS, ' ') <> 'A' ]]>
		</isEqual>
		<isNotEmpty property="c_code_cd">
		AND    T.LOC_CD LIKE #c_code_cd# + '%'
		</isNotEmpty>
		<isNotEmpty property="c_code_nm">
		AND    UPPER(T.LOC_NM) LIKE '%' + #c_code_nm# + '%'
		</isNotEmpty>
		ORDER BY T.LOC_CD
	</select>	
	
	<select id="searchRateLoactionByRateGRP" parameterClass="java.util.HashMap" resultClass="RateLocationListVO">
	
	SELECT D.CODE_CD
		     , D.CODE_NM
		FROM   TL_CODE_GRP G,
		       TL_CODE_DTL D
		WHERE  G.GRP_CD = D.GRP_CD
		AND    G.GRP_CD = 'Z11'
		AND    G.GRP_USE_FLG = 'Y'
		AND    D.CODE_USE_FLG = 'Y'
		<isNotEmpty property="c_code_cd">
		AND    D.CODE_CD LIKE #c_code_cd# + '%'
		</isNotEmpty>
		<isNotEmpty property="c_code_nm">
		AND    UPPER(D.CODE_NM) LIKE '%' + #c_code_nm# + '%'
		</isNotEmpty>
		ORDER BY D.DISP_SEQ
	
	</select>
	
	<select id="searchWHOCListByBookingPopup" parameterClass="java.util.HashMap" resultClass="WHOCListPopupByBookingInOutVO">
	/*WHOC.searchWHOCListByBookingPopup*/
	
	SELECT A.WOB_OUT_NO                     /*INBOUND COMPLETE NO*/
	     , B.WOB_BK_NO                     /*BOOKING NO*/
	     , CONVERT(VARCHAR(10), CONVERT(VARCHAR(8), A.OUTBOUND_DT, 112), 20) AS OUTBOUND_DT

	  FROM TL_WH_ISSU A, TL_WH_ALLC B
	  WHERE A.WALC_NO = B.WALC_NO
	  AND B.WOB_BK_NO = #wob_bk_no#
	  ORDER BY A.WOB_OUT_NO ASC
	  
	</select>
	
	<select id="searchCheckpointList" parameterClass="java.util.HashMap" resultClass="CheckpointVO">
		SELECT CODE_NM AS NAME
		  FROM TL_CODE_DTL 
		 WHERE GRP_CD       = 'PG1' 
		 <isEqual property="code" compareValue="01">
		   AND OPT_ITM1     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="02">
		   AND OPT_ITM2     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="03">
		   AND OPT_ITM3     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="04">
		   AND OPT_ITM4     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="05">
		   AND OPT_ITM5     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="06">
		   AND OPT_ITM6     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="07">
		   AND OPT_ITM7     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="08">
		   AND OPT_ITM8     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="09">
		   AND OPT_ITM9     = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="10">
		   AND OPT_ITM10    = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="11">
		   AND OPT_ITM11    = 'Y' 
		 </isEqual>
		 <isEqual property="code" compareValue="12">
		   AND OPT_ITM12    = 'Y' 
		 </isEqual>  
		   AND CODE_USE_FLG = 'Y' 
		 ORDER BY DISP_SEQ
	</select>
	
	<select id="searchWHOutStockSelectList" parameterClass="java.util.HashMap" resultClass="WHOutStockSelectVO">
		/* WHOutbk.searchWHOutStockSelectList */
		
		SELECT IL.CTRT_NO
			      ,IL.ITEM_CD
			      ,IL.ITEM_NM
			      ,IL.PO_SYS_NO
			      ,IL.ITEM_SYS_NO
			      ,IL.LOT_ID
			      ,IL.WH_LOC_CD
			      ,dbo.TL_GET_WH_LOC_NM (IL.WH_CD, IL.WH_LOC_CD) AS WH_LOC_CD_NM
                  ,I.PKG_LV1_UNIT_CD AS ITEM_PKGUNIT
			      ,IL.IN_BK_QTY
			      ,IL.IN_QTY - ISNULL(IL.ALLC_QTY,0) AS STOCK_QTY
			      ,L.LOT_ATTRIB_01 AS INBOUND_DT
			      ,L.LOT_ATTRIB_02 AS LOT_NO
			      ,L.LOT_ATTRIB_03 AS EXP_DT
			      ,L.LOT_ATTRIB_04 AS LOT_04
			      ,L.LOT_ATTRIB_05 AS LOT_05
			      ,L.LOT_ID AS FIX_LOT_ID
			      /* Item Pack Master Level1 Info S */
                  ,ISNULL (I.PKG_LV1_QTY, 0) AS PKG_LV1_QTY			      
			      ,ISNULL (I.LV1_CBM, 0) AS LV1_CBM
			      ,ISNULL (I.LV1_CBF, 0) AS LV1_CBF
			      ,ISNULL (I.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
			      ,ISNULL (I.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
			      ,ISNULL (I.LV1_NET_KGS, 0) AS LV1_NET_KGS
			      ,ISNULL (I.LV1_NET_LBS, 0) AS LV1_NET_LBS
			      /* Item Pack Master Level1 Info E */
                  ,IL.WIB_BK_NO
                  ,IL.PO_NO
                  ,IL.SO_NO
                  ,LOC.PROP_CD
                  ,dbo.TL_GET_COMM_NM('WL0', LOC.PROP_CD) AS PROP_NM
                  ,LOC.ZONE_CD
                  ,LOC.BLOCK_CD
                  /* Inventory Stock Measure Info S */
                  <![CDATA[ 
			      ,CASE WHEN ISNULL(IL.IN_CBM, 0)     - ISNULL(IL.ALLC_CBM, 0)     < 0 THEN 0 ELSE ISNULL(IL.IN_CBM, 0)     - ISNULL(IL.ALLC_CBM, 0)     END AS STOCK_CBM
			      ,CASE WHEN ISNULL(IL.IN_CBF, 0)     - ISNULL(IL.ALLC_CBF, 0)     < 0 THEN 0 ELSE ISNULL(IL.IN_CBF, 0)     - ISNULL(IL.ALLC_CBF, 0)     END AS STOCK_CBF
			      ,CASE WHEN ISNULL(IL.IN_GRS_KGS, 0) - ISNULL(IL.ALLC_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(IL.IN_GRS_KGS, 0) - ISNULL(IL.ALLC_GRS_KGS, 0) END AS STOCK_GRS_KGS
			      ,CASE WHEN ISNULL(IL.IN_GRS_LBS, 0) - ISNULL(IL.ALLC_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(IL.IN_GRS_LBS, 0) - ISNULL(IL.ALLC_GRS_LBS, 0) END AS STOCK_GRS_LBS
			      ,CASE WHEN ISNULL(IL.IN_NET_KGS, 0) - ISNULL(IL.ALLC_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(IL.IN_NET_KGS, 0) - ISNULL(IL.ALLC_NET_KGS, 0) END AS STOCK_NET_KGS
			      ,CASE WHEN ISNULL(IL.IN_NET_LBS, 0) - ISNULL(IL.ALLC_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(IL.IN_NET_LBS, 0) - ISNULL(IL.ALLC_NET_LBS, 0) END AS STOCK_NET_LBS
			      ]]>
			      /* Inventory Stock Measure Info E */
			      ,dbo.TL_GET_WH_PACK_MST_INFO(I.PKG_LV1_QTY, I.PKG_LV1_UNIT_CD, I.ITEM_PKGBASEQTY, I.ITEM_PKGUNIT
                                         , I.PKG_LV3_QTY, I.PKG_LV3_UNIT_CD, I.PKG_LV4_QTY, I.PKG_LV4_UNIT_CD) AS PKG_INFO
                  ,IB.REF_NO                          
              FROM TL_WH_IB IB
                  ,TL_WH_INV_LOC IL
                  ,TL_CTRT_CUST_ITEM_LOT L
                  ,TL_CTRT_CUST_ITEM I
                  ,TL_WH_LOC LOC
             WHERE IB.WIB_BK_NO = IL.WIB_BK_NO
             
               AND IL.CTRT_NO = L.CTRT_NO
               AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO
               AND IL.LOT_ID = L.LOT_ID
               AND IL.WH_CD = L.WH_CD
               
               AND IL.CTRT_NO = I.CTRT_NO
               AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO
               
               AND IL.WH_CD = LOC.LOC_CD
               AND IL.WH_LOC_CD = LOC.WH_LOC_CD
			   
			   AND I.ITEM_USE_FLG = 'Y'			   
	 <![CDATA[ AND IL.IN_QTY - ISNULL(IL.ALLC_QTY,0) > 0 ]]>  
	 
	 			AND EXISTS
	 				(SELECT 'X'
			          FROM TL_WH_LOC WL, TL_WH_PROP WP
			         WHERE LOC.LOC_CD = WP.LOC_CD
			           AND LOC.USE_FLG = 'Y'
			           AND LOC.PROP_CD = WP.PROP_CD
			           
			           AND ( 1 = 1

							 <isEqual property="f_putaway_flg" compareValue="Y">
							   OR PUTAWAY_FLG = 'Y'
							 </isEqual>
							 
							 <isEqual property="f_alloc_flg" compareValue="Y">
							   OR ALLOC_FLG = 'Y'
							 </isEqual>
							 
							 <isEqual property="f_move_flg" compareValue="Y">
							 	OR MOVE_FLG = 'Y'
							 </isEqual>
						   )

			           AND WP.USE_FLG = 'Y'
			        )	
               
           <isNotEqual property="wh_cd" compareValue="All">
           	   AND L.WH_CD = #wh_cd#	
           </isNotEqual>     
               		   
			   AND IL.CTRT_NO = #ctrt_no#
           <isNotEmpty property="item_cd">			   
			   AND IL.ITEM_CD = #item_cd#
		   </isNotEmpty>
		   <isNotEmpty property="fix_lot_id">			   
			   AND IL.LOT_ID LIKE #fix_lot_id# + '%'			   
		   </isNotEmpty>
      <isNotEmpty property="inbound_dt_from">
      <![CDATA[AND L.LOT_ATTRIB_01 >= ]]> REPLACE (#inbound_dt_from#, '-', '')
      </isNotEmpty>
      <isNotEmpty property="inbound_dt_to">  
      <![CDATA[AND L.LOT_ATTRIB_01 <= ]]> REPLACE (#inbound_dt_to#, '-', '')
      </isNotEmpty>
           <isNotEmpty property="wh_loc_cd">
			   AND IL.WH_LOC_CD = #wh_loc_cd#
		   </isNotEmpty>
   		   <isNotEmpty property="lot_no">   
			   AND L.LOT_ATTRIB_02 = #lot_no#
   		   </isNotEmpty>
   		   <isNotEmpty property="ref_no">   
			   AND IB.REF_NO = #ref_no#
   		   </isNotEmpty>
	      ORDER BY IL.ITEM_CD, IL.PO_SYS_NO, IL.LOT_ID	
	      
    </select>
    
    <update id="updateSeqItemSysNo">
    	update TB_MJR_NO_SEQ set SEQ = SEQ + 1 Where NO_TP_CD = 'ITEM'
    </update>
    
    <insert id="insertSeqItemSysNo">
		INSERT INTO TB_MJR_NO_SEQ(NO_TP_CD, SEQ, MAX_SEQ, DESCR) values ('ITEM', 0, 9999999, 'ITEM SEQ')
	</insert>
    
    <select id="searchWHInItemSysNo" parameterClass="java.util.HashMap" resultClass="String">
		/* WHInbk.searchWHInItemSysNo */	
	  	DECLARE @PRE_FIX VARCHAR (20)
		SET @PRE_FIX = (SELECT TOP 1 PRE_FIX FROM TB_SEQ WHERE SEQ_TYPE = 'SVR_CD') 
		SELECT 
			'IT' + 
			ISNULL((SELECT CTRT_CUST_CD FROM TL_CTRT WHERE CTRT_NO = #ctrt_no#),'') + 
			ISNULL(@PRE_FIX, '') +
			CASE ISNULL(@PRE_FIX, 'NULL')
			WHEN 'NULL' THEN RIGHT(CONVERT(VARCHAR(10),GETDATE(),112),6)
			ELSE RIGHT(CONVERT(VARCHAR(10),GETDATE(),112),5)
			END + 
			dbo.LPAD((SELECT SEQ + 1 from TB_MJR_NO_SEQ Where NO_TP_CD = 'ITEM'), 5, '0') AS ITEM_SYS_NO
  	</select>
  	
  	<insert id="addWHInPackDefList" parameterClass="Grd03WHInPackDefVO">
	/* WHInbk.addWHInPackDefList */
	
	INSERT INTO TL_CTRT_CUST_ITEM (CTRT_NO,
		                               ITEM_SYS_NO,
		                               ITEM_CD,
		                               ITEM_NM,
		                               HTS_NO,
		                               ITEM_PKGBASEQTY,
		                               ITEM_PKGUNIT,
		                               ITEM_CBM,
		                               ITEM_KGS,
		                               ITEM_WIDTH,
		                               ITEM_LENGTH,
		                               ITEM_HEIGHT,
		                               ITEM_REMARK,
		                               ITEM_USE_FLG,
		                               RGST_ID,
		                               RGST_SYS_DT,
		                               MODI_ID,
		                               MODI_SYS_DT,
		                               ITEM_NET_WGT,
		                               LOT_NO,
		                               PALLET_NO,
		                               ITEM_GRP_CD,
		                               PKG_LV1_PUT_TP_CD,
		                               PKG_LV1_UNIT_CD,
		                               PKG_LV1_QTY,
		                               PKG_LV2_PUT_TP_CD,
		                               PKG_LV3_UNIT_CD,
		                               PKG_LV3_QTY,
		                               PKG_LV3_PUT_TP_CD,
		                               PKG_LV4_UNIT_CD,
		                               PKG_LV4_QTY,
		                               PKG_LV4_PUT_TP_CD,
		                               ALTER_ITEM_CD,
		                               BARCODE_NO,
		                               SAFE_STC_QTY,
		                               ADV_CURR_CD,
		                               ADV_PRICE,
		                               NEGO_CURR_CD,
		                               NEGO_PRICE,
		                               UNIT_CURR_CD,
		                               UNIT_PRICE,
		                               ABC_CD,
		                               REF_CD_01,
		                               REF_CD_02,
		                               ITEM_CBF,
		                               ITEM_GRS_LBS,
		                               ITEM_NET_LBS,
		                               LV1_CBM,
		                               LV1_CBF,
		                               LV1_GRS_KGS,
		                               LV1_GRS_LBS,
		                               LV1_NET_KGS,
		                               LV1_NET_LBS,
		                               LV1_WIDTH,
		                               LV1_LENGTH,
		                               LV1_HEIGHT)
		     VALUES (#ctrt_no#
		            ,#item_sys_no#
		            ,#item_cd#
		            ,UPPER(#item_nm#)
		            ,NULL
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#item_pkgbaseqty# AS INT)))
		            ,#item_pkgunit#
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,'Y'
		            ,#user_id#
		            ,GETDATE()
		            ,#user_id#
		            ,GETDATE()
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,#pkg_lv1_unit_cd#
		            ,1
		            ,NULL
		            ,#pkg_lv3_unit_cd#
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#pkg_lv3_qty# AS INT)))
		            ,NULL
		            ,#pkg_lv4_unit_cd#
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#pkg_lv4_qty# AS INT)))
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_cbm# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_cbf# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_grs_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_grs_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_net_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_net_lbs# AS FLOAT)))
		            ,NULL
		            ,NULL
		            ,NULL
		             )
       </insert>
       
       <update id="modifyWHInPackDefList" parameterClass="Grd03WHInPackDefVO">
		/* WHInbk.modifyWHInPackDefList */
		
		UPDATE TL_CTRT_CUST_ITEM
			SET    ITEM_CD           = #item_cd#
			      ,ITEM_NM           = UPPER(#item_nm#)
			      ,ITEM_PKGBASEQTY   = #item_pkgbaseqty#
			      ,ITEM_PKGUNIT      = #item_pkgunit#
			      ,MODI_ID           = #user_id#
			      ,MODI_SYS_DT       = GETDATE()
			      ,PKG_LV1_UNIT_CD   = #pkg_lv1_unit_cd#
			      ,PKG_LV1_QTY       = #pkg_lv1_qty#
			      ,PKG_LV3_UNIT_CD   = #pkg_lv3_unit_cd#
			      ,PKG_LV3_QTY       = #pkg_lv3_qty#
			      ,PKG_LV4_UNIT_CD   = #pkg_lv4_unit_cd#
			      ,PKG_LV4_QTY       = #pkg_lv4_qty#
			      ,LV1_CBM           = #lv1_cbm#
			      ,LV1_CBF           = #lv1_cbf#
			      ,LV1_GRS_KGS       = #lv1_grs_kgs#
			      ,LV1_GRS_LBS       = #lv1_grs_lbs#
			      ,LV1_NET_KGS       = #lv1_net_kgs#
			      ,LV1_NET_LBS       = #lv1_net_lbs#
			WHERE  CTRT_NO           = #ctrt_no#
			AND    ITEM_SYS_NO       = #item_sys_no#	
		
		</update>
		
		<insert id="addFileInvMoveFileUpload" parameterClass="java.util.HashMap">
    /* WHInvMove.addFileInvMoveFileUpload */    
    INSERT INTO TL_WH_INV_MOVE_FILE_REP
         ( MOVE_NO
         , MOVE_SEQ
         , FILE_SEQ       /*Key Sequence*/
         , FILE_PATH      /*File Path  파일 저장 디렉토리*/
         , FILE_SYS_NM    /*File System Name*/
         , FILE_ORG_NM    /*File Original Name*/
         , FILE_SIZE      /*File Size*/
         , RGST_ID        /*등록 ID*/
         , RGST_SYS_DT    /*등록 일자*/
         , MODI_ID        /*수정 ID*/
         , MODI_SYS_DT    /*수정일자*/
         ) 
         values(
     	   #move_no#
         , #move_seq#
         , (SELECT ISNULL(MAX(FILE_SEQ),0) + 1 
              FROM TL_WH_INV_MOVE_FILE_REP
             WHERE MOVE_NO   = #move_no#
               AND MOVE_SEQ  = #move_seq#
           )
           
<!--          , FILE_URL
         , FILE_ID
         , FILE_NM
         , FILE_CAPA -->
         
         , #file_url#
         , #file_sys_nm#
         , #file_name#
         , #file_capa#
         
         , #rgst_id#
         , GETDATE()
         , #rgst_id#
         , GETDATE()  
     )   
   <!--    FROM COM_UPLD_FILE
     WHERE FILE_ID = #fileKey# -->
	</insert>	
	
	<!--  Khanh (E) -->
	<!-- Lap.Nguyen (S) -->
	<!-- [BranchPopup] Sales PIC Popup -->
	<select id="searchSalesPICList" parameterClass="java.util.HashMap" resultClass="Grd01SalesActivityListVO">
		/* Grd01SalesActivity.searchSalesPICList */	
              SELECT ROW_NUMBER() OVER (ORDER BY(SELECT 1)) AS SEQ,
                   SALES_PIC_ID AS picCd,
                   ISNULL(USER_ENG_NM,'') as picNm,
                   ISNULL(TEL,'') as phone,
                   ISNULL(FAX,'') as fax,
                   ISNULL(ADDR,'') as address,
                   ISNULL(EMAIL,'') email,
                   ORG_CD as orgCd,
                   dbo.TL_GET_ORG_NM(ORG_CD) as orgNm
              FROM TL_USER
             WHERE 1=1
               AND RESP = 'S'
               AND SALES_PIC_ID IS NOT NULL
               AND USE_FLG = 'Y'
            <isNotEmpty property="picCd">
            	AND UPPER(SALES_PIC_ID) = UPPER(LTRIM(RTRIM(#picCd#)))
            </isNotEmpty>
            <isNotEmpty property="picNm">
               AND UPPER(USER_ENG_NM) LIKE '%'+ UPPER(LTRIM(RTRIM(#picNm#)))+'%'
            </isNotEmpty>
            <isNotEmpty property="org_cd">
               AND ORG_CD = LTRIM(RTRIM(#org_cd#))
            </isNotEmpty>             
	</select>
	<insert id="save_TL_SALES_ACT" parameterClass="java.util.HashMap" >
		INSERT 	INTO TL_SALES_ACT
		SELECT  SALES_ACT_NO,
		        ACT_VER + 1,
		        #picCd#,
		        #orgCd#,
		        ACT_STS_CD,
		        MNG_CNF_ID,
		        MNG_CNF_DT,
		        PROG_STAGE,
		        PERIOD_FM_DT,
		        PERIOD_TO_DT,
		        CUST_NM,
		        BIZ_HST_CD,
		        CTRT_NO,
		        INDUSTRY_CD,
		        CUST_MNG_TP_CD,
		        DIR_CD,
		        INCOTERMS,
		        TG_SVC_SF,
		        TG_SVC_SFP,
		        TG_SVC_AF,
		        TG_SVC_PO,
		        TG_SVC_CONSOL,
		        TG_SVC_CUSTOMS,
		        TG_SVC_WH,
		        TG_SVC_TR,
		        TG_SVC_CONSULT,
		        TRADE_TPS,
		        TRADE_TAS,
		        TRADE_IAS,
		        TRADE_AES,
		        TRADE_OTH,
		        TRADE_OTH_DESC,
		        MTH_TG_REV_CURR_CD,
		        MTH_TG_REV_AMT,
		        MTH_TG_LOAD_TEU,
		        MTH_TG_LOAD_CBM,
		        MTH_TG_LOAD_KGS,
		        MTH_GRS_PRF_TP_CO,
		        MTH_GRS_PRF_AMT,
		        SALES_CHALLEN_01,
		        SALES_CHALLEN_02,
		        SALES_CHALLEN_03,
		        SALES_CHALLEN_04,
		        SALES_CHALLEN_05,
		        SALES_CHALLEN_06,
		        SALES_CHALLEN_07,
		        SALES_CHALLEN_08,
		        SALES_CHALLEN_09,
		        SALES_CHALLEN_10,
		        SALES_CHALLEN_11,
		        SALES_CHALLEN_RMK,
		        ACT_RMK,
		        (SELECT RGST_ID     FROM TL_SALES_ACT WHERE SALES_ACT_NO = #sales_act_no# AND ACT_VER = 1),
			    (SELECT RGST_SYS_DT FROM TL_SALES_ACT WHERE SALES_ACT_NO = #sales_act_no# AND ACT_VER = 1),
		        #user_id#,
		        GETDATE(),
		        #act_ver_rmk#,
		        GRS_PRF_RATIO,
		        GRS_PRF_UNIT,
		        GRS_PRF_CURR_CD,
		        GRS_PRF_AMT,
		        ACT_DT,
		        ACT_PLAN_DT,
		        ACT_PLAN_RMK
		FROM    TL_SALES_ACT
		WHERE 	SALES_ACT_NO 	= #sales_act_no#
		AND 	ACT_VER 		= #act_ver#
		
	</insert>
	
	<insert id="save_TL_SALES_ACT_COSALES" parameterClass="java.util.HashMap" >
		INSERT 	INTO TL_SALES_ACT_COSALES
		SELECT  SALES_ACT_NO,
		        ACT_VER+1,
		        COSALES_SEQ,
		        SALES_OFC_CD,
		        SALES_PIC_ID,
		        #user_id#,
		        GETDATE(),
		        #user_id#,
		        GETDATE()
		FROM    TL_SALES_ACT_COSALES
		WHERE 	SALES_ACT_NO 	= #sales_act_no#
		AND 	ACT_VER 		= #act_ver# 
	</insert>
	
	<insert id="save_TL_SALES_ACT_CUST_CNTC" parameterClass="java.util.HashMap" >
		INSERT 	INTO TL_SALES_ACT_CUST_CNTC
		SELECT  SALES_ACT_NO,
		        ACT_VER+1,
		        CNTC_SEQ,
		        KEY_MAN_FLG,
		        PIC_NM,
		        PIC_TEL,
		        PIC_EMAIL,
		        PIC_DEPT,
		        RMK,
		        #user_id#,
		        RGST_SYS_DT,
		        #user_id#,
		        MODI_SYS_DT
		FROM    TL_SALES_ACT_CUST_CNTC        
		WHERE 	SALES_ACT_NO 	= #sales_act_no#
		AND 	ACT_VER 		= #act_ver#
	</insert>
	
	<insert id="save_TL_SALES_AV_RATE" parameterClass="java.util.HashMap" >
		INSERT 	INTO TL_SALES_AV_RATE
		SELECT  SALES_ACT_NO,
		        ACT_VER+1,
		        RATE_SEQ,
		        UNIT_CD,
		        CURR_CD,
		        RATE,
		        #user_id#,
		        RGST_SYS_DT,
		        #user_id#,
		        MODI_SYS_DT
		FROM    TL_SALES_AV_RATE
		WHERE 	SALES_ACT_NO 	= #sales_act_no#
		AND 	ACT_VER 		= #act_ver#
	</insert>
	
	<insert id="save_TL_SALES_COMPET_RATE" parameterClass="java.util.HashMap" >
		INSERT 	INTO TL_SALES_COMPET_RATE
		SELECT  SALES_ACT_NO,
		        ACT_VER+1,
		        RATE_SEQ,
		        COMPET_RMK,
		        UNIT_CD,
		        CURR_CD,
		        RATE,
		        #user_id#,
		        RGST_SYS_DT,
		        #user_id#,
		        MODI_SYS_DT
		FROM    TL_SALES_COMPET_RATE        
		WHERE 	SALES_ACT_NO 	= #sales_act_no#
		AND 	ACT_VER 		= #act_ver#
	</insert>
	<!-- [COM_RD_COMMON_POPUP_MODAL] Supplier Booking Print -->
	<select id="searchCTRTCHKList" parameterClass="java.util.HashMap" resultClass="CtrtChkPopUpVO">
     SELECT C.CTRT_NO, 
               C.CTRT_NM, 
                CONVERT(VARCHAR(10),CONVERT(DATETIME,C.EFF_FR_DT, 102), 120) AS EFF_FR_DT, 
                CONVERT(VARCHAR(10),CONVERT(DATETIME,C.EFF_FR_DT, 102), 120) AS EFF_FR_DT, 
               C.SALES_OFC_CD, 
               dbo.TL_GET_ORG_NM(C.SALES_OFC_CD)    AS SALES_OFC_NM, 
               C.SALES_PIC_ID, 
               (SELECT MAX(T.USER_ENG_NM)
                  FROM TL_USER T
                 WHERE T.SALES_PIC_ID = C.SALES_PIC_ID ) AS SALES_PIC_NM, 
               C.CTRT_USE_FLG
          FROM TL_CTRT C
         WHERE C.CTRT_NM LIKE '%' + #in_ctrt_nm# + '%'    
	</select>
	<!-- [LPShipSplit] Shipment Split -->
	<insert id="addLPSplitChildShipment" parameterClass="com.clt.apps.fis.wms.common.dto.Grd11LPShipSplitDetailVO" >
	INSERT INTO TL_WH_PSUDO_LP_SHIP(
					CONSOL_NO, 
					SHIPNO, 
					SHIPNO_SEQ, 
					SO_NO, 
					WOB_BK_NO, 
					WIB_BK_NO, 
					SAO_SYS_NO, 
					PO_SYS_NO, 
					ITEM_SYS_NO, 
					LOT_ID, 
					WH_LOC_CD, 
					ITEM_SEQ, 
					SAO_NO, 
					PO_NO, 
					ITEM_CD, 
					ITEM_NM, 
					LP_ITEM_EA_QTY, 
					LP_ITEM_CBM, 
					LP_ITEM_CBF, 
					LP_ITEM_GRS_KGS, 
					LP_ITEM_GRS_LBS, 
					LP_ITEM_NET_KGS, 
					LP_ITEM_NET_LBS, 
					LP_STATUS, 
					LP_SHIP_LTNO, 
					LP_SHIP_SEQ_LTNO, 
					LP_OLD_ID, 
					LP_OLD_SEQ, 
					LP_ID, 
					LP_SEQ, 
					RGST_ID, 
					RGST_OFC_CD, 
					RGST_SYS_DT, 
					RGST_LOC_DT, 
					MODI_ID, 
					MODI_OFC_CD, 
					MODI_SYS_DT, 
					MODI_LOC_DT
			)
		      SELECT  P.CONSOL_NO,
                     #shipno#,
                     (SELECT ISNULL(MAX(T.SHIPNO_SEQ),0)+1 
                        FROM TL_WH_PSUDO_LP_SHIP T
                       WHERE T.CONSOL_NO = #consol_no#
                         AND T.SHIPNO    = #shipno#),
                     P.SO_NO, 
                     P.WOB_BK_NO, 
                     P.WIB_BK_NO, 
                     P.SAO_SYS_NO, 
                     P.PO_SYS_NO, 
                     P.ITEM_SYS_NO, 
                     P.LOT_ID, 
                     P.WH_LOC_CD, 
                     P.ITEM_SEQ, 
                     P.SAO_NO, 
                     P.PO_NO, 
                     P.ITEM_CD, 
                     P.ITEM_NM, 
                     #qty#, 
                     #qty#*I.PKG_LV1_QTY*I.LV1_CBM, 
                     #qty#*I.PKG_LV1_QTY*I.LV1_CBF,
                     #qty#*I.PKG_LV1_QTY*I.LV1_GRS_KGS, 
                     #qty#*I.PKG_LV1_QTY*I.LV1_GRS_LBS, 
                     #qty#*I.PKG_LV1_QTY*I.LV1_NET_KGS, 
                     #qty#*I.PKG_LV1_QTY*I.LV1_NET_LBS, 
                     'G', 
                     P.LP_SHIP_LTNO, 
                     P.LP_SHIP_SEQ_LTNO, 
                     P.LP_OLD_ID, 
                     P.LP_OLD_SEQ, 
                     P.LP_ID, 
                     P.LP_SEQ, 
                     #user_id#, 
                     #org_cd#, 
                     GETDATE(), 
                     CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_DT(O.WH_CD), 102),
                     #user_id#, 
                     #org_cd#, 
                     GETDATE(), 
                     CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_DT(O.WH_CD), 102)
                FROM TL_WH_PSUDO_LP_SHIP P
                    ,TL_WH_OB O 
                    ,TL_CTRT_CUST_ITEM I
               WHERE P.WOB_BK_NO = O.WOB_BK_NO
                 AND O.CTRT_NO = I.CTRT_NO
                 AND P.ITEM_SYS_NO = I.ITEM_SYS_NO
                 AND CONSOL_NO 	= #consol_no#
				 AND SHIPNO 	= #shipno#
				 AND SHIPNO_SEQ = #shipno_seq#
	</insert>
	<update id="modifyLPSplitShipment" parameterClass="java.util.HashMap" >
	UPDATE TL_WH_PSUDO_LP_SHIP
           SET LP_STATUS   = 'S',
               MODI_ID     = #user_id#,
               MODI_SYS_DT = GETDATE()
         WHERE CONSOL_NO    = #consol_no#
           AND SHIPNO       = #shipno#
           AND SHIPNO_SEQ   = #shipno_seq#
           AND LP_STATUS    = 'G'
	</update>
	<delete id="removeLPSplitShipment" parameterClass="java.util.HashMap" >
	DELETE FROM TL_WH_PSUDO_LP_SHIP
        WHERE  CONSOL_NO    = #consol_no#
        AND    SHIPNO       = #shipno#
        AND    SHIPNO_SEQ != 0
        AND    LP_STATUS  = 'S'
	</delete>	
    <!-- [FreightRouteRatePopup] Route/Rate Information - SEA -->
    <select id="searchFreightSellBuyRouteList" parameterClass="java.util.HashMap" resultClass="FreightSellBuyRouteVO" >
	    /*wmsCommonSQL.searchFreightSellBuyRouteList*/
	
	SELECT 	R.CTRT_NO,
		       	R.SB_CLS_CD,
		       	R.RATE_NO,
		       	R.FRT_MODE,
		       	dbo.TL_GET_COMM_NM('FT1',R.FRT_MODE) AS FRT_MODE_NM,
		       	R.POR,
		       	dbo.TL_GET_LOC_NM(R.POR) AS POR_NM,
		       	R.POL,
		       	dbo.TL_GET_LOC_NM(R.POL) AS POL_NM,
		       	R.POD,
		       	dbo.TL_GET_LOC_NM(R.POD) AS POD_NM,
		       	R.DEL,
		       	dbo.TL_GET_LOC_NM(R.DEL) AS DEL_NM,
		       	R.SVCTERM_FR_CD,
		       	R.SVCTERM_TO_CD,
		       	R.DEPARTURE_CD,
		       	R.ARRIVAL_CD,
		       	R.ORIGIN_LOC_CD,
		       	R.ORIGIN_LOC_NM,
		       	R.DEST_LOC_CD,
		       	R.DEST_LOC_NM,
		       	R.LOC_CD,
		       	R.LOC_NM,
		       	R.COMMODITY_DESC,		       	
		       	R.CO_LOADER_CD,
		        R.CARRIER_CD,
		        R.SC_NO,
		        R.BULLET_NO,
		        R.PRIORITY,
		        R.NAMED_ACCT_FLG,		        
		       	R.EFF_FR_DT,
		       	R.EFF_TO_DT
  		FROM 	TL_CTRT C, TL_CTRT_RATE R
 		WHERE 	C.CTRT_NO 		= R.CTRT_NO
   		AND 	C.CTRT_USE_FLG 	= 'Y'      
   		<isNotEmpty property="ctrt_no">
   			AND 	R.CTRT_NO 		= #ctrt_no#
        </isNotEmpty>
   		<isNotEmpty property="eff_dt">
   			<![CDATA[ AND 	(R.EFF_FR_DT IS NULL OR R.EFF_FR_DT 	<= REPLACE(#eff_dt#, '-', '')) ]]>
   			<![CDATA[ AND 	(R.EFF_TO_DT IS NULL OR R.EFF_TO_DT 	>= REPLACE(#eff_dt#, '-', '')) ]]>        </isNotEmpty>
   		<isNotEmpty property="frt_mode">
   			AND 	R.FRT_MODE 		IN ($frt_mode$) 
        </isNotEmpty>
   		<isNotEmpty property="por">
   			AND 	(R.POR IS NULL OR R.POR 			= #por#)
        </isNotEmpty>
   		<isNotEmpty property="pol">
   			AND 	(R.POL IS NULL OR R.POL 			= #pol#)
        </isNotEmpty>
   		<isNotEmpty property="pod">
   			AND 	(R.POD IS NULL OR R.POD 			= #pod#)
        </isNotEmpty>
   		<isNotEmpty property="del">
   			AND 	(R.DEL IS NULL OR R.DEL 			= #del#)
        </isNotEmpty>
   		AND 	R.SB_CLS_CD 	= #sb_cls_cd# 
		<isEqual property="sb_cls_cd" compareValue="B">
			<isNotEmpty property="carrier_cd"> 
   				AND R.CARRIER_CD = ''
			</isNotEmpty>
			<isNotEmpty property="co_loader_cd">
   				AND R.CO_LOADER_CD = ''
			</isNotEmpty>
		</isEqual>
		<isNotEmpty property="svcterm_fr_cd" >
			<isEqual property="svcterm_fr_cd" compareValue="ALL"> 
   				AND 	R.SVCTERM_FR_CD = #svcterm_fr_cd#
			</isEqual>
			<isEqual property="svcterm_to_cd" compareValue="ALL">
   				AND 	R.SVCTERM_TO_CD = #svcterm_to_cd#
			</isEqual>
		</isNotEmpty>
 		<isNotEqual property="sb_cls_cd" compareValue="S">
 			ORDER BY R.FRT_MODE, R.RATE_NO
	    </isNotEqual>
 		<isNotEqual property="sb_cls_cd" compareValue="B">
 			ORDER BY R.FRT_MODE, R.PRIORITY, R.RATE_NO
	    </isNotEqual>
	</select>
    <select id="searchFreightSellBuyRateList" parameterClass="java.util.HashMap" resultClass="FreightRouteRateCondVO" >
    /*wmsCommonSQL.searchFreightSellBuyRateList*/
    SELECT 	RA.CTRT_NO,
		       	RA.SB_CLS_CD,
		       	RA.RATE_NO,
		       	RA.RATE_SEQ,
		       	RA.OFC_CD,
		       	RA.CUST_CD,
		       	dbo.TL_GET_CUST_NM(RA.CUST_CD) CUST_NM,
		       	RA.FRT_CD,
		       	RA.FRT_NM,
		       	RA.UNIT_CD,
		       	RA.CURR_CD,
		       	RA.UNIT_PRICE,
		       	RA.RMK
		      ,(SELECT MAX(C.ORG_FLG)
		          FROM TL_CUST C
		         WHERE C.CUST_CD = RA.CUST_CD ) AS ORG_YN
		      ,ISNULL((SELECT MAX(M.SELL_VAT_CD)
		          FROM T_MDM206 M
		         WHERE M.BRANCH = RA.OFC_CD
		           AND M.FARE_CD = RA.FRT_CD ),'NIL') AS SELL_VAT_CD
		      ,ISNULL((SELECT MAX(M.BUY_VAT_CD)
		          FROM T_MDM206 M
		         WHERE M.BRANCH = RA.OFC_CD
		           AND M.FARE_CD = RA.FRT_CD ),'NIL') AS BUY_VAT_CD
  		FROM 	TL_CTRT_RATE RO, TL_CTRT_RATE_DTL RA
	 	WHERE 	RO.CTRT_NO 		= RA.CTRT_NO
   		AND 	RO.SB_CLS_CD 	= RA.SB_CLS_CD
   		AND 	RO.RATE_NO 		= RA.RATE_NO      
   		<![CDATA[ AND     ISNULL(RA.FRT_CD,'N') <> 'OWFG']]>
   		AND 	RO.CTRT_NO 		= #ctrt_no#
   		AND 	RA.OFC_CD 		= #org_cd#
   		AND 	RO.SB_CLS_CD 	= #sb_cls_cd#
   		<isEqual property="frt_mode" compareValue="A">
   			AND 	RO.FRT_MODE 	= 'A'
   		</isEqual>
   		<isEqual property="frt_mode" compareValue="S">
   			AND 	RO.FRT_MODE 	= 'S'
   		</isEqual>
   		<isEqual property="frt_mode" compareValue="D">
   			AND 	RO.FRT_MODE 	= 'D'
   		</isEqual>
   		<isNotEqual property="rate_no" >
   		AND 	RO.RATE_NO 		= #rate_no#
   		</isNotEqual>
	</select>
	<!-- Lap.Nguyen (E) -->	
	
<!-- Hoai.Vo (S) -->
	<!-- Inbound Complete Search (S) -->
	<typeAlias alias="WHICItemListPopupVO" 	type="com.clt.apps.fis.wms.common.dto.WHICItemListPopupVO"/>
	
	<select id="searchWHICItemListPopup" parameterClass="java.util.HashMap" resultClass="WHICItemListPopupVO">
	/*WHIC.searchWHICItemListPopup*/
	SELECT A.WIB_IN_NO                     /*INBOUND COMPLETE NO*/
	     , A.WIB_BK_NO                     /*BOOKING NO*/
	     , A.INBOUND_DT                    /*INBOUND DATE*/
	     , B.ITEM_CD
	     , B.ITEM_NM
	     , E.LOT_ATTRIB_02 AS LOT_NO       /*ITEM LOT NO*/
	     , F.PKG_LV1_UNIT_CD AS IN_ITEM_UNIT  /*RECEIVED 재고단위 LEVEL1의 단위*/
	     , B.IN_ITEM_EA_QTY AS IN_ITEM_QTY /*RECEIVED 재고단위수량*/
	     , B.LOT_ID
	  FROM TL_WH_RCV A
	     , TL_WH_RCV_ITEM B
	     , TL_WH_IB C
	     , TL_CTRT_CUST_ITEM_LOT E
	     , TL_CTRT_CUST_ITEM F
	 WHERE A.WIB_IN_NO = B.WIB_IN_NO
	   AND A.WIB_BK_NO = B.WIB_BK_NO
	   AND A.WIB_BK_NO = C.WIB_BK_NO
	   AND C.CTRT_NO = E.CTRT_NO
	   AND B.ITEM_SYS_NO = E.ITEM_SYS_NO
	   AND B.LOT_ID = E.LOT_ID
	   AND C.CTRT_NO = F.CTRT_NO
	   AND B.ITEM_SYS_NO = F.ITEM_SYS_NO
	   AND A.WIB_BK_NO = #wib_bk_no#   
	 ORDER BY A.WIB_IN_NO ASC, B.ITEM_CD ASC, B.ITEM_SEQ ASC 
	</select>
	<!--  Inbound Complete Search (E) -->
	
	<!-- VesselPopup -->
	<typeAlias alias="VesselPopupVO" 	type="com.clt.apps.fis.wms.common.dto.VesselPopupVO"/>
	
	<select id="selectVesselInfo"  parameterClass="java.util.HashMap" resultClass="VesselPopupVO">
		select ROW_NUMBER() OVER(ORDER BY vsl_cd) as seq, vsl_cd, vsl_nm from TB_VSL
		 where vsl_cd like ltrim(rtrim(#vslCd#)) + '%'
		   and upper(vsl_nm) like '%' + upper(ltrim(rtrim(#vslNm#))) + '%'
		   and use_flg = 'Y'
		 order by vsl_cd  
	 </select>
	<!-- VesselPopup -->
	
	<!-- ContainerTypePopup (S) -->
	<typeAlias alias="ContainerTypePopupVO" 	type="com.clt.apps.fis.wms.common.dto.ContainerTypePopupVO"/>
	
	<select id="searchContainerTPSZList" parameterClass="java.util.HashMap" resultClass="ContainerTypePopupVO">
	SELECT 
		    ROW_NUMBER() OVER(ORDER BY T.CNTR_TPSZ_CD	) AS SEQ,				
		    T.CNTR_TPSZ_CD AS eqUnit,
		    T.DESCR,
		    'C' AS TYPE,
		    COUNT(*) OVER() AS TOTAL	
		FROM TB_CNTR_TPSZ T
		WHERE 1=1 			
		AND T.CNTR_TPSZ_CD LIKE ltrim(rtrim(#eqUnit#))+'%'
		AND UPPER(T.DESCR) LIKE '%' + upper(ltrim(rtrim(#descr#))) + '%'
		ORDER BY T.CNTR_TPSZ_CD	
	 </select>
	
	<typeAlias alias="ContainerTypePopupVO" 	type="com.clt.apps.fis.wms.common.dto.ContainerTypePopupVO"/>
	 
	 <select id="searchTruckTPSZList" parameterClass="java.util.HashMap" resultClass="ContainerTypePopupVO">
	 SELECT 
		    ROW_NUMBER() OVER(ORDER BY T.TRK_TP_CT) AS SEQ,				
		    T.TRK_TP_CT AS eqUnit,
		    T.DESCR,
		    'T' AS TYPE,
		    COUNT(*) OVER() AS TOTAL	
		FROM TL_TRK_TP_CD T
		WHERE 1=1 			
		AND T.TRK_TP_CT LIKE ltrim(rtrim(#eqUnit#)) + '%'
		AND UPPER(T.DESCR) LIKE '%' + upper(ltrim(rtrim(#descr#))) + '%'
		AND T.USE_YN = 'Y'
		ORDER BY T.TRK_TP_CT	
	 </select>
	<!-- ContainerTypePopup (E) -->
	
	<!-- NRA Management (S) -->
	<typeAlias alias="RateUploadPopupVO" 	type="com.clt.apps.fis.wms.common.dto.RateUploadPopupVO"/>
	
	<select id="searchNRAFileList" parameterClass="java.util.HashMap" resultClass="RateUploadPopupVO">
      SELECT  R.DOC_NO
             ,R.FILE_ORG_NM
             ,R.FILE_PATH
             ,R.FILE_SYS_NM
             ,R.FILE_SIZE
             , CONVERT(VARCHAR(10),R.RGST_SYS_DT,102) AS UPLOAD_DATE
        FROM TL_FILE_REP R
       WHERE 1=1
         AND R.DOC_REF_NO    = #rate_no#
         AND R.DOC_REF_NO2   = #ctrt_no#
         AND R.DOC_REF_TP_CD = 'RT'
         AND R.SVC_TP_CD     = 'RT'
         AND R.DOC_TP_CD     = 'RT'	
	</select>
	<select id="searchChangeMCLPSBList" parameterClass="java.util.HashMap" resultClass="MCLPChangePopupVO">
      /* SUPPLIER BOOKING */
		SELECT DISTINCT P.PC_MRNO as pc_mrno, F.HBL_NO, P.PC_SONO, F.POL, F.POD, F.ETD as etd, F.ETA
		  FROM TL_SO S,
		       TL_PSUDO_CLP P, 
		       TL_PSUDO_CNTR_GRP G  LEFT JOIN TL_CNTR C
		       ON G.PCG_ID = C.CLP_NO, 
		       TL_EO_SFWD F 
		 WHERE S.SO_NO = P.PC_SONO
		   AND P.PC_MRNO = GG.PCG_MRNO
		   AND P.PC_ID = GG.PCG_ID
		   AND P.PC_SONO = F.SO_NO 
		 		
		
		<isNotEmpty property="mclp_no">	
		   AND P.PC_MRNO = #mclp_no#
		</isNotEmpty>
		
		<isNotEmpty property="so_no">
		   AND P.PC_SONO = #so_no#
		</isNotEmpty>
		
		<isNotEmpty property="clp_no">
		   AND C.CLP_NO = #clp_no#
		</isNotEmpty>
		
		<isNotEmpty property="cntr_no">
		   AND C.CNTR_NO = #cntr_no#
		</isNotEmpty>
		
		<isNotEmpty property="hbl_no">
		   AND F.HBL_NO = #hbl_no#
		</isNotEmpty>
		
		<isNotEmpty property="pol">
		   AND F.POL = #pol#
		</isNotEmpty>
		
		<isNotEmpty property="pod">
		   AND F.POD = #pod#
		</isNotEmpty>
		
		<isNotEmpty property="fm_pol_etd">
		   AND F.ETD &gt;= replace(#fm_pol_etd#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="to_pol_etd">
		   AND F.ETD &lt;= replace(#to_pol_etd#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="fm_pod_eta">
		   AND F.ETA &gt;= replace(#fm_pod_eta#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="to_pod_eta">
		   AND F.ETA &lt;= replace(#to_pod_eta#,'-','')
		</isNotEmpty>	
	</select>
	
	<select id="searchChangeMCLWBPList" parameterClass="java.util.HashMap" resultClass="MCLPChangePopupVO">
     /* WAREHOUSE BOOKING */  
		SELECT DISTINCT P.PC_MRNO as pc_mrno, W.HBL_NO, P.PC_SONO, W.POL, W.POD, W.ETD as etd, W.ETA
		  FROM TL_SO S,
		       TL_PSUDO_CLP P, 
		       (TL_PSUDO_CNTR_GRP G  LEFT JOIN TL_CNTR C
		       ON G.PCG_ID = C.CLP_NO), 
		       
		       TL_WB W        
		 WHERE S.SO_NO = P.PC_SONO
		   AND P.PC_MRNO = G.PCG_MRNO
		   AND P.PC_ID = G.PCG_ID
		   AND P.PC_SONO = W.SO_NO 
		  
		
		<isNotEmpty property="mclp_no">	
		   AND P.PC_MRNO = #mclp_no#
		</isNotEmpty>
		<isNotEmpty property="so_no">
		   AND P.PC_SONO = #so_no#
		</isNotEmpty>
		
		<isNotEmpty property="clp_no">
		   AND C.CLP_NO = #clp_no#
		</isNotEmpty>
		
		<isNotEmpty property="cntr_no">
		   AND C.CNTR_NO = #cntr_no#
		</isNotEmpty>
		
		   AND W.BK_MODE = 'I'
		
		<isNotEmpty property="hbl_no">
		   AND W.HBL_NO = #hbl_no#
		</isNotEmpty>
		
		<isNotEmpty property="pol">
		   AND W.POL = #pol#
		</isNotEmpty>
		
		<isNotEmpty property="pod">
		   AND W.POD = #pod#
		</isNotEmpty>
		
		<isNotEmpty property="fm_pol_etd">
		   AND W.ETD &gt;= replace(#fm_pol_etd#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="to_pol_etd">
		   AND W.ETD &lt;= replace(#to_pol_etd#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="fm_pod_eta">
		   AND W.ETA &gt;= replace(#fm_pod_eta#,'-','')
		</isNotEmpty>
		
		<isNotEmpty property="to_pod_eta">
		   AND W.ETA &lt;= replace(#to_pod_eta#,'-','')
		</isNotEmpty>	
	</select>
	<!-- NRA Management (E) -->
	
	<!-- CustomerPopup (S) -->
	<typeAlias alias="CustomerPopupVO" 	type="com.clt.apps.fis.wms.common.dto.CustomerPopupVO"/>
	
	<select id="searchCustomerList"  parameterClass="java.util.HashMap" resultClass="CustomerPopupVO">
      SELECT T.CUST_CD
            ,T.CUST_NM
            ,T.CUST_LOC_NM
            ,T.FAX
            ,T.TEL
            ,T.EMAIL
            ,T.CURR_CD
            ,dbo.TL_GET_COMM_NM('C010',T.CURR_CD ) AS CURR_NM
            ,T.BL_ADDR1
            ,T.BL_ADDR2
            ,T.BL_ADDR3
            ,T.BL_ADDR4
            ,T.BL_ADDR5
            ,C.CTRY_NM
            ,C.CTRY_CD
            ,T.ORG_FLG
        FROM TL_CUST T LEFT JOIN TL_COUNTRY C ON T.CTRY_CD = C.CTRY_CD
       WHERE T.USE_FLG = 'Y'
         
    <isNotEmpty property="cust_cd">
	   AND T.CUST_CD LIKE #cust_cd# + '%'
	</isNotEmpty>
	
	<isNotEmpty property="cust_nm">
	   AND UPPER(T.CUST_NM) LIKE '%' + #cust_nm# + '%'
	</isNotEmpty>
	
	<isNotEmpty property="cust_loc_nm">
	   AND UPPER(T.CUST_LOC_NM) LIKE '%' + #cust_loc_nm# + '%'
	</isNotEmpty>
	
	<isEqual property="part_tp" compareValue="C">
	  AND T.CUST_FLG = 'Y'
	</isEqual>

	<isEqual property="part_tp" compareValue="O">
	  AND T.ORG_FLG = 'Y'
	</isEqual>
	
	<isEqual property="part_tp" compareValue="P">
	  AND T.PROV_FLG = 'Y'
	</isEqual>

       ORDER BY T.CUST_CD, T.CUST_NM
	</select>
	
	
	<typeAlias alias="CustomerPopupVO" 	type="com.clt.apps.fis.wms.common.dto.CustomerPopupVO"/>
	
	<select id="searchContractCustomerList" parameterClass="java.util.HashMap" resultClass="CustomerPopupVO">
      SELECT T.CUST_CD
            ,T.CUST_NM
            ,T.CUST_LOC_NM
            ,T.FAX
            ,T.TEL
            ,T.EMAIL
            ,T.CURR_CD
            ,dbo.TL_GET_COMM_NM('C010',T.CURR_CD ) AS CURR_NM
            ,T.BL_ADDR1
            ,T.BL_ADDR2
            ,T.BL_ADDR3
            ,T.BL_ADDR4
            ,T.BL_ADDR5
            ,'' AS CTRY_NM
            ,C.CTRY_CD
            ,T.ORG_FLG
        FROM TL_CUST T
            ,TL_CTRT_CUST_REL R
            ,TL_CTRT C
       WHERE T.CUST_CD = R.REL_CUST_CD
         AND T.USE_FLG = 'Y'
         AND R.CTRT_NO = C.CTRT_NO
         
	<isNotEmpty property="cust_cd">
	   AND T.CUST_CD LIKE #cust_cd# + '%'
	</isNotEmpty>
	
	<isNotEmpty property="cust_nm">
	   AND UPPER(T.CUST_NM) LIKE '%' + #cust_nm# + '%'
	</isNotEmpty>
	
	<isNotEmpty property="cust_loc_nm">
	   AND UPPER(T.CUST_LOC_NM) LIKE '%' + #cust_loc_nm# + '%'
	</isNotEmpty>
	
	<isEqual property="part_tp" compareValue="S">
	  AND R.REL_TP_CD = 'SHP'
	</isEqual>

	<isEqual property="part_tp" compareValue="C">
	  AND R.REL_TP_CD = 'CNE'
	</isEqual>
	
	<isEqual property="part_tp" compareValue="P">
	  AND R.REL_TP_CD = 'PRV'
	</isEqual>

	<isNotEmpty property="ctrt_cd">
	  AND R.CTRT_NO = #ctrt_cd#
	</isNotEmpty>

	<isNotEmpty property="ctrt_nm">
	  AND UPPER(C.CTRT_NM) LIKE '%' + #ctrt_nm#
	</isNotEmpty>

       ORDER BY T.CUST_CD, T.CUST_NM
	</select>
	<!-- CustomerPopup (E) -->
	
	<!-- RateHistoryPopup (S) -->
	<typeAlias alias="RateHistoryPopupVO" 	type="com.clt.apps.fis.wms.common.dto.RateHistoryPopupVO"/>
	<select id="searchRateHistoryMain" parameterClass="java.util.HashMap" resultClass="RateHistoryPopupVO">
		SELECT DISTINCT
		    R.CTRT_NO,
		    R.SB_CLS_CD,
			D.MODI_ID,
			dbo.TL_GET_USER_NM(R.MODI_ID) MODI_NM,
			D.MODI_SYS_DT,
			R.FRT_MODE,
			CASE WHEN FRT_MODE = 'S'
			     THEN 'Footer/SEA'
			     WHEN FRT_MODE = 'A'
			     THEN 'Footer/AIR'
			     WHEN FRT_MODE = 'D'
			     THEN 'Footer/Domestic'
			END FREIGHT_MODE,
			D.RATE_NO,
			D.HST_SEQ,
			D.HST_TP_CD,
			D.OFC_CD
		FROM    TL_CTRT_RATE R, 
				TL_CTRT_RATE_DTL_HST D
		WHERE R.CTRT_NO  = #ctrt_no#
		AND   R.CTRT_NO  = D.CTRT_NO
		AND   R.SB_CLS_CD = D.SB_CLS_CD
		AND   R.RATE_NO  = D.RATE_NO
		AND   R.SB_CLS_CD = #sb_cls_cd#
		UNION ALL
		SELECT 
			R.CTRT_NO,
			R.SB_CLS_CD,
			MODI_ID,
			dbo.TL_GET_USER_NM(R.MODI_ID),
			MODI_SYS_DT,
			FRT_MODE,
			'Header',
			R.RATE_NO,
			R.HST_SEQ,
			R.HST_TP_CD,
			''
		FROM    TL_CTRT_RATE_HST R
		WHERE R.CTRT_NO  = #ctrt_no#
		AND   R.SB_CLS_CD = #sb_cls_cd#
		ORDER BY RATE_NO ASC, MODI_SYS_DT DESC
	</select>
	
	<typeAlias alias="RateHistoryPopupVO" 	type="com.clt.apps.fis.wms.common.dto.RateHistoryPopupVO"/>
	<select id="searchRateHistoryHeader" parameterClass="java.util.HashMap" resultClass="RateHistoryPopupVO">
		SELECT HST_TP_CD
             , CTRT_NO
			 , SB_CLS_CD
			 , RATE_NO
		     , FRT_MODE
		     , POR
		     , dbo.TL_GET_LOC_NM(POR) AS POR_NM
		     , POL
		     , dbo.TL_GET_LOC_NM(POL) AS POL_NM
		     , POD
		     , dbo.TL_GET_LOC_NM(POD) AS POD_NM
		     , DEL
		     , dbo.TL_GET_LOC_NM(DEL) AS DEL_NM
		     , SVCTERM_FR_CD
		     , SVCTERM_TO_CD
		     , DEPARTURE_CD
		     , dbo.TL_GET_LOC_NM(DEPARTURE_CD) AS DEPARTURE_NM
		     , ARRIVAL_CD
		     , dbo.TL_GET_LOC_NM(ARRIVAL_CD) AS ARRIVAL_NM
		     , ORIGIN_LOC_CD
		     , ORIGIN_LOC_NM
		     , DEST_LOC_CD
		     , DEST_LOC_NM
		     , LOC_CD
		     , LOC_NM
		     , COMMODITY_DESC
		     , CO_LOADER_CD
		     , dbo.TL_GET_CUST_NM(CO_LOADER_CD) AS CO_LOADER_NM
		     , CARRIER_CD
		     , dbo.TL_GET_CUST_NM(CARRIER_CD) AS CARRIER_NM
		     , PRIORITY
		     , SC_NO
		     , BULLET_NO
		     , NAMED_ACCT_FLG
		     , CONVERT(VARCHAR(10),CONVERT(DATETIME,EFF_FR_DT,102),102) AS EFF_FR_DT
		     , CONVERT(VARCHAR(10),CONVERT(DATETIME,EFF_TO_DT,102),102) AS EFF_TO_DT
        FROM TL_CTRT_RATE_HST R
        WHERE R.CTRT_NO  = #ctrt_no#
        AND   R.SB_CLS_CD = #sb_cls_cd#
        AND   R.RATE_NO = #rate_no#
        ORDER BY R.RGST_SYS_DT DESC
	</select>
	
	<typeAlias alias="RateHistoryPopupVO" 	type="com.clt.apps.fis.wms.common.dto.RateHistoryPopupVO"/>
	<select id="searchRTMainList" parameterClass="java.util.HashMap" resultClass="RateHistoryPopupVO">
			SELECT CTRT_NO
				 , SB_CLS_CD
				 , RATE_NO
			     , FRT_MODE
			     , POR
			     , dbo.TL_GET_LOC_NM(POR) AS POR_NM
			     , POL
			     , dbo.TL_GET_LOC_NM(POL) AS POL_NM
			     , POD
			     , dbo.TL_GET_LOC_NM(POD) AS POD_NM
			     , DEL
			     , dbo.TL_GET_LOC_NM(DEL) AS DEL_NM
			     , SVCTERM_FR_CD
			     , SVCTERM_TO_CD
			     , SVCTERM_FR_CD
			     , SVCTERM_TO_CD
			     , DEPARTURE_CD
			     , dbo.TL_GET_LOC_NM(DEPARTURE_CD) AS DEPARTURE_NM
			     , ARRIVAL_CD
			     , dbo.TL_GET_LOC_NM(ARRIVAL_CD) AS ARRIVAL_NM
			     , ORIGIN_LOC_CD
			     , ORIGIN_LOC_NM
			     , DEST_LOC_CD
			     , DEST_LOC_NM
			     , LOC_CD
			     , LOC_NM
			     , COMMODITY_DESC
			     , CO_LOADER_CD
			     , dbo.TL_GET_CUST_NM(CO_LOADER_CD) AS CO_LOADER_NM
			     , CARRIER_CD
			     , dbo.TL_GET_CUST_NM(CARRIER_CD) AS CARRIER_NM
			     , PRIORITY
			     , SC_NO
			     , BULLET_NO
			     , NAMED_ACCT_FLG
			     , CONVERT(VARCHAR(10),CONVERT(DATETIME,EFF_FR_DT,102),102) AS EFF_FR_DT
			     , CONVERT(VARCHAR(10),CONVERT(DATETIME,EFF_TO_DT,102),102) AS EFF_TO_DT
			     , NRA_QUOTE_NO
			     , (SELECT FILE_ORG_NM 	FROM TL_FILE_REP WHERE DOC_REF_NO = RATE_NO AND DOC_REF_NO2 = CTRT_NO) FILE_ORG_NM
			     , (SELECT DOC_NO 		FROM TL_FILE_REP WHERE DOC_REF_NO = RATE_NO AND DOC_REF_NO2 = CTRT_NO) DOC_NO
			     , (SELECT FILE_PATH 	FROM TL_FILE_REP WHERE DOC_REF_NO = RATE_NO AND DOC_REF_NO2 = CTRT_NO) FILE_PATH
			     , (SELECT FILE_SYS_NM 	FROM TL_FILE_REP WHERE DOC_REF_NO = RATE_NO AND DOC_REF_NO2 = CTRT_NO) FILE_SYS_NM
			     , PUB_DT
			     , CONVERT(VARCHAR(10),PUB_UPDATE_DT,102) AS PUB_UPDATE_DT
			     , dbo.TL_GET_USER_BRANCH(RGST_ID) AS BRANCH
			  FROM TL_CTRT_RATE
			 WHERE 1=1
			   AND CTRT_NO = #in_ctrt_no#
			   AND SB_CLS_CD = #in_sb_cls_cd#
			<isNotEmpty>
			   AND RATE_NO = #in_rate_no#
			</isNotEmpty>
			<isNotEqual property="sell_br_filer" compareValue="ALL">
			   AND dbo.TL_GET_USER_BRANCH(RGST_ID) = #sell_br_filer#
			</isNotEqual>
			<isNotEqual property="buy_br_filer" compareValue="ALL">
			   AND dbo.TL_GET_USER_BRANCH(RGST_ID) = #buy_br_filer#
			</isNotEqual>
			<isEqual property="pub_filer" compareValue="Y">
			   AND PUB_DT IS NOT NULL
			</isEqual>
			<isEqual property="pub_filer" compareValue="N">
			   AND PUB_DT IS NULL
			</isEqual>  
			 ORDER BY RATE_NO DESC
	</select>
	
	<typeAlias alias="RateHistoryPopupVO" 	type="com.clt.apps.fis.wms.common.dto.RateHistoryPopupVO"/>
	<select id="searchRateHistoryFooter" parameterClass="java.util.HashMap" resultClass="RateHistoryPopupVO">
			SELECT A.HST_TP_CD
			     , A.CTRT_NO
			     , A.SB_CLS_CD
			     , A.RATE_NO
			     , A.RATE_SEQ
			     , A.CUST_CD
			     , dbo.TL_GET_CUST_NM(A.CUST_CD) AS CUST_NM
			     , A.OFC_CD
			     , A.FRT_CD
			     , A.FRT_NM
			     , A.UNIT_CD
			     , A.CURR_CD
			     , A.UNIT_PRICE
			     , A.RMK
			  FROM TL_CTRT_RATE_DTL_HST A
			 WHERE 1=1
			   AND A.CTRT_NO = #ctrt_no#
			   AND A.SB_CLS_CD = #sb_cls_cd#
			   AND A.RATE_NO = #rate_no#			   
        	   AND A.HST_SEQ = #hst_seq#
			 ORDER BY A.RGST_SYS_DT DESC
	</select>
	<!-- RateHistoryPopup (E) -->
<!-- Hoai.Vo (E) -->
<select id="searchWHLocBlockPopupList" parameterClass="java.util.HashMap" resultClass="WHLocBlockPopupVO">
     SELECT T.LOC_CD
              ,T.ZONE_CD
              ,T.BLOCK_CD
              ,T.BLOCK_DESC
              ,(SELECT COUNT(*)
                  FROM TL_WH_LOC WL
                 WHERE WL.LOC_CD = T.LOC_CD
                   AND WL.ZONE_CD = T.ZONE_CD
                   AND WL.BLOCK_CD = T.BLOCK_CD
                   AND WL.USE_FLG = 'Y') AS LOC_CNT
              ,T.USE_FLG
          FROM TL_WH_BLOCK T
		      ,TL_WH L
         WHERE T.LOC_CD = L.WH_CD
           AND T.LOC_CD = #loc_cd#
           AND T.ZONE_CD = #zone_cd#
          	
		  <isNotEmpty property="block_cd">		  
		   AND T.BLOCK_CD = #block_cd#
		  </isNotEmpty>
		  
		  <isNotEmpty property="block_desc">		  
		   AND T.BLOCK_DESC LIKE '%' + #block_desc# + '%'
		 </isNotEmpty>	
	</select>
<!-- Long.Le (S) -->
	<typeAlias alias="ItemGroupVO" 	type="com.clt.apps.fis.wms.common.dto.ItemGroupVO"/>
	<select id="searchItemGroupList" parameterClass="java.util.HashMap" resultClass="ItemGroupVO">
		/*searchItemGroupList*/
		SELECT ITEM_GRP_CD
		      ,ITEM_GRP_NM
		      ,CTRT_NO
		      ,DBO.TL_GET_CTRT_NM(CTRT_NO) AS CTRT_NM
		  FROM TL_CTRT_CUST_ITEM_GRP
		 WHERE 1=1
		 <isNotEmpty property="in_grp_cd">
		   AND ITEM_GRP_CD = #in_grp_cd#
		 </isNotEmpty>
		 <isNotEmpty property="in_grp_nm">
		   AND ITEM_GRP_NM LIKE '%' + #in_grp_nm# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="in_ctrt_no">
		   AND CTRT_NO = #in_ctrt_no#
		 </isNotEmpty>
		 ORDER BY ITEM_GRP_CD
	</select>
	
	 
	 <typeAlias type="com.clt.apps.fis.wms.rate.dto.NRAAttachmentDto" alias="NRAAttachmentDto"/>
	
	<insert id="addFileNRA">
		INSERT INTO TL_FILE_REP
		(
		    DOC_NO, 
        SVC_TP_CD, 
        DOC_REF_TP_CD, 
        DOC_REF_NO, 
        DOC_REF_NO2, 
        DOC_TP_CD, 
        FILE_PATH, 
        FILE_SYS_NM, 
        FILE_ORG_NM, 
        FILE_SIZE,
        RGST_ID, 
        RGST_SYS_DT
		)
	    VALUES( 	  
	  	#doc_no#,
        #svc_tp_cd#, 
        #doc_ref_tp_cd#, 
        #doc_ref_no#, 
        #doc_ref_no2#, 
        #doc_tp_cd#, 
        #logo_rectangle#,
        #file_sys_nm#,
       	CASE WHEN LEN(#logo_square#) > 100 THEN  SUBSTRING(#logo_square#, 0, 100-LEN( SUBSTRING(#logo_square#, CHARINDEX(#logo_square#, '.'), LEN(#logo_square#))) ) + SUBSTRING(#logo_square#, CHARINDEX(#logo_square#, '.'), LEN(#logo_square#))
  			ELSE #logo_square#
				END,
    	#filesize#,
		#rgst_id#,
		GETDATE()
		)	
	</insert>
	<update id="updateNRANo">
    	UPDATE TL_CTRT_RATE
    	   SET NRA_QUOTE_NO = #nra_quote_no#
    	      ,MODI_ID		= #user_id#
    	      ,MODI_SYS_DT	= GETDATE()
   	     WHERE CTRT_NO   = #ctrt_no#
		   AND SB_CLS_CD = #sb_cls_cd#
		   AND RATE_NO   = #rate_no#
    </update>
    <insert id="addRTMainListHST">
			INSERT INTO TL_CTRT_RATE_HST
			    ( CTRT_NO
			    , SB_CLS_CD
			    , RATE_NO
			    , HST_SEQ
			    , HST_TP_CD
			    , FRT_MODE
			    , POR
			    , POL
			    , POD
			    , DEL
			    , SVCTERM_FR_CD
			    , SVCTERM_TO_CD
			    , DEPARTURE_CD
			    , ARRIVAL_CD
			    , ORIGIN_LOC_CD
			    , ORIGIN_LOC_NM
			    , DEST_LOC_CD
			    , DEST_LOC_NM
			    , LOC_CD
			    , LOC_NM
			    , COMMODITY_DESC
			    , CO_LOADER_CD
			    , CARRIER_CD
			    , SC_NO
			    , BULLET_NO
			    , PRIORITY
			    , NAMED_ACCT_FLG
			    , EFF_FR_DT
			    , EFF_TO_DT
			    , RGST_ID
			    , RGST_SYS_DT
			    , MODI_ID
			    , MODI_SYS_DT 
			    , NRA_QUOTE_NO
			    , PUB_DT
			    , PUB_UPDATE_DT
			    , PUB_UPDATE_ID)
		   SELECT CTRT_NO
			    , SB_CLS_CD
			    , RATE_NO
			    , (SELECT ISNULL(MAX(HST_SEQ),0)+1 FROM TL_CTRT_RATE_HST WHERE CTRT_NO = #ctrt_no# AND SB_CLS_CD = #sb_cls_cd# AND RATE_NO = #rate_no#)
			    , #ibflag#
			    , FRT_MODE
			    , POR
			    , POL
			    , POD
			    , DEL
			    , SVCTERM_FR_CD
			    , SVCTERM_TO_CD
			    , DEPARTURE_CD
			    , ARRIVAL_CD
			    , ORIGIN_LOC_CD
			    , ORIGIN_LOC_NM
			    , DEST_LOC_CD
			    , DEST_LOC_NM
			    , LOC_CD
			    , LOC_NM
			    , COMMODITY_DESC
			    , CO_LOADER_CD
			    , CARRIER_CD
			    , SC_NO
			    , BULLET_NO
			    , PRIORITY
			    , NAMED_ACCT_FLG
			    , EFF_FR_DT
			    , EFF_TO_DT
			    , #user_id#
			    , GETDATE()
			    , #user_id#
			    , GETDATE()
			    , NRA_QUOTE_NO
			    , PUB_DT
			    , PUB_UPDATE_DT
			    , PUB_UPDATE_ID
		     FROM TL_CTRT_RATE
		    WHERE CTRT_NO = #ctrt_no#
		      AND SB_CLS_CD = #sb_cls_cd#
			  AND RATE_NO = #rate_no#
	</insert>
	 <delete id="removeFileNRAPRE">
       DELETE FROM TL_FILE_REP
       WHERE DOC_REF_NO  = #doc_ref_no#
         AND DOC_REF_NO2 = #doc_ref_no2#
    </delete>
    <delete id="removeFileNRA">
      DELETE FROM TL_FILE_REP
       WHERE DOC_NO = #doc_no#
    </delete>	
	<!-- Long.Le (E) -->
	<select id="searchContractRouteList" parameterClass="java.util.HashMap" resultClass="ContractOrderConVO">
	/* WmsCommonSQL.xml > searchContractRouteList*/
		 <!--  SELECT R.RTP_NO, 
	             T.ORD_TP_CD,
	             T.ORD_TP_NM,
	             T.ORD_TP_LVL1_CD,
	             dbo.TL_GET_COMM_NM('L1', ORD_TP_LVL1_CD) AS ORD_TP_LVL1_NM, 
	             T.ORD_TP_LVL2_CD,
	             dbo.TL_GET_COMM_NM('L2', ORD_TP_LVL2_CD) AS ORD_TP_LVL2_NM,
	             T.ORD_TP_LVL3_CD,
	             dbo.TL_GET_COMM_NM('L3', ORD_TP_LVL3_CD) AS ORD_TP_LVL3_NM,
	             T.ORD_TP_LVL4_CD,
	             dbo.TL_GET_COMM_NM('L4', ORD_TP_LVL4_CD) AS ORD_TP_LVL4_NM,
	             T.ORD_TP_KWD,
	             R.CTRT_NO,
	             dbo.TL_GET_CTRT_NM(R.CTRT_NO) AS CTRT_NM,
	             T.PNL_SVC_TP_CD,
	             dbo.TL_GET_COMM_NM('FG', T.PNL_SVC_TP_CD) AS PNL_SVC_TP_NM,
  	             CASE SVC_HBL WHEN 'Y' THEN 'V' ELSE '' END AS SVC_HBL,
				 CASE SVC_HAWB WHEN 'Y' THEN 'V' ELSE '' END AS SVC_HAWB,
				 CASE SVC_SB WHEN 'Y' THEN 'V' ELSE '' END AS SVC_SB,
				 CASE SVC_WB WHEN 'Y' THEN 'V' ELSE '' END AS SVC_WB,
				 CASE SVC_WO WHEN 'Y' THEN 'V' ELSE '' END AS SVC_WO
  	            ,CASE WHEN (SELECT COUNT(*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
		                   (SELECT MAX(L.LOC_CD) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#)
		              ELSE ''
		         END LOC_CD
		        ,CASE WHEN (SELECT COUNT(*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#) = 1 THEN 
		                   (SELECT MAX(L.LOC_ADDR) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = T.CTRT_NO AND L.OFC_CD = #org_cd#)
		              ELSE ''
		         END LOC_ADDR 
	      FROM TL_RTP R, TL_CTRT_ORD_TP T, TL_CTRT C
	      WHERE C.CTRT_NO = R.CTRT_NO
	        AND R.CTRT_NO = T.CTRT_NO
	        AND R.ORD_TP_CD = T.ORD_TP_CD 
	        AND C.CTRT_USE_FLG   = 'Y'
	        AND R.RTP_USE_FLG    = 'Y'
	        AND T.ORD_TP_USE_FLG = 'Y' -->
	        SELECT
				'' AS RTP_NO,
				'' AS ORD_TP_CD,
				'' AS ORD_TP_NM,
				'' AS ORD_TP_LVL1_CD,
				dbo.TL_GET_COMM_NM ('L1', '') AS ORD_TP_LVL1_NM,
				'' AS ORD_TP_LVL2_CD,
				dbo.TL_GET_COMM_NM ('L2', '') AS ORD_TP_LVL2_NM,
				'' AS ORD_TP_LVL3_CD,
				dbo.TL_GET_COMM_NM ('L3', '') AS ORD_TP_LVL3_NM,
				'' AS ORD_TP_LVL4_CD,
				dbo.TL_GET_COMM_NM ('L4', '') AS ORD_TP_LVL4_NM,
				'' AS ORD_TP_KWD,
				C.CTRT_NO,
				dbo.TL_GET_CTRT_NM (C.CTRT_NO) AS CTRT_NM,
			 '' AS PNL_SVC_TP_CD,
			 dbo.TL_GET_COMM_NM ('FG', '') AS PNL_SVC_TP_NM,
			 '' AS SVC_HBL,
			 '' AS SVC_HAWB,
			 '' AS SVC_SB,
			 '' AS SVC_WB, 
			 '' AS SVC_WO,
			 CASE WHEN ( SELECT COUNT (*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd# ) = 1 
			      THEN ( SELECT MAX (L.LOC_CD) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd# /**P*/ )
			ELSE '' END LOC_CD,
			CASE WHEN ( SELECT COUNT (*) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd# ) = 1 
			     THEN ( SELECT MAX (L.LOC_ADDR) FROM TL_CTRT_WH_LOC L WHERE L.CTRT_NO = C.CTRT_NO AND L.OFC_CD = #org_cd# ) 
			ELSE '' END LOC_ADDR
			FROM
				TL_CTRT C
			WHERE 1=1 
			AND C.CTRT_USE_FLG = 'Y'
	        AND C.CTRT_NO = #ctrt_no#
		
		<!-- 
		<isNotEmpty property="ord_tp_lvl1_cd">	
			AND T.ORD_TP_LVL1_CD IN (#ord_tp_lvl1_cd#)
  		</isNotEmpty>
  		
		<isNotEmpty property="ord_tp_lvl2_cd">	
  			AND T.ORD_TP_LVL2_CD IN (#ord_tp_lvl2_cd#)
  		</isNotEmpty>
	      ORDER BY R.RTP_NO, T.ORD_TP_NM -->
	</select>
	
	<select id="searchSalesPICName" parameterClass="HashMap" resultClass="String">
	SELECT dbo.TL_GET_CUST_NM(#sl_pic_cd#)
	</select>
	
	<select id="searchORGName" parameterClass="HashMap" resultClass="String">
	SELECT dbo.TL_GET_ORG_NM (#ofc_cd#)
	</select>
	
	<select id="searchLocName" parameterClass="HashMap" resultClass="HashMap">
	SELECT T.CUST_CD + ISNULL(T.FACIL_CD,'') AS LOC_CD,
	                 T.FACIL_NM AS LOC_NM,
	                 dbo.TL_GET_LOC_NM(T.CITY) AS CITY_NM,
	                 T.BL_ADDR1 + ISNULL(T.BL_ADDR2,'') + ISNULL(T.BL_ADDR3,'') + ISNULL(T.BL_ADDR4,'') + ISNULL(T.BL_ADDR5,'') AS ADDR
	            FROM TL_CUST_FACIL T
	           WHERE 1 = 1
	           
				AND (T.CUST_CD + ISNULL(T.FACIL_CD,'')) = #loc_cd#
	</select>
	
	<typeAlias alias="TlOrgVO" 	type="com.clt.apps.fis.wms.common.dto.TlOrgVO"/>
	<select id="searchTlOrgInfo" parameterClass="HashMap" resultClass="TlOrgVO">
	/*WmsCommonSQL.xml > searchTlOrgInfo*/
	
      SELECT T.OFFICE_CD, T.OFFICE_NM, T.INCLS_VAT_AMT_FLG, T.SELL_VAT_DEF_CD, T.BUY_VAT_DEF_CD
            ,(SELECT L.CTRY_CD
                FROM TL_LOC L
               WHERE L.LOC_CD = T.CITY
                 AND L.USE_YN = 'Y') AS CTRY_CD
            ,T.JOB_NO_YN
            ,ISNULL(T.AUTO_CA_USE,'N') AS AUTO_CA_USE 
<!--             ,ISNULL(T.AUTO_JOB_NO,'N') AS AUTO_JOB_NO     -->
        FROM TL_ORG T
       WHERE T.OFFICE_CD = #office_cd#
         AND T.USE_FLG = 'Y'
         <isNotEmpty property="sa_aug_flg">
           AND (T.ORG_LEVEL = 'H' OR T.ORG_LEVEL = 'A')
        </isNotEmpty>
        <isNotEmpty property="sa_lbg_flg">
           AND T.ORG_LEVEL != 'H'
           AND T.ORG_LEVEL != 'A'
        </isNotEmpty>
	</select>
	
	<select id="searchTlOfcInfo" parameterClass="HashMap" resultClass="TlOrgVO">
	/*WmsCommonSQL.xml > searchTlOfcInfo*/
	
      SELECT
	a.ofc_cd OFFICE_CD,
        a.ofc_eng_nm OFFICE_NM
    FROM
        tb_ofc a,
        tb_cnt b   
    WHERE
        a.cnt_cd  = b.cnt_cd      
        AND a.delt_flg = 'N'     
        AND b.delt_flg = 'N'
				AND a.ofc_cd = #office_cd#
	</select>
	
	<typeAlias alias="OrganizationVO" 	type="com.clt.apps.fis.wms.common.dto.OrganizationVO"/>
	<select id="searchOrganizationList" resultClass="OrganizationVO">
	  /**wms.common.all.searchOrganizationList*/
      SELECT  	ORG_ID  orgId, 
        		ORG_NM	orgNm, 
        		OFFICE_NM	office_nm,
        		NODE_TYPE	nodeType,
				CASE	UPPER_NODE_TYPE
						WHEN 'H' THEN ORG_ID
						WHEN 'A' THEN UPPER_ORG_ID
						ELSE 'A'
				END AS	upperOrgId,
        		UPPER_ORG_NM		upperOrgNm,
				CASE	UPPER_NODE_TYPE
						WHEN 'H' THEN 1
						WHEN 'A' THEN 2
						ELSE 0
				END AS upperNodeType     
		FROM (
				SELECT 	T.OFFICE_CD AS ORG_ID,
       					'[' + T.OFFICE_CD + ']' + T.OFFICE_NM AS ORG_NM,
       					T.OFFICE_NM,
       					T.ORG_LEVEL AS NODE_TYPE,
       					T.UPPER_ORG_CD AS UPPER_ORG_ID,
       					(	SELECT 	'[' + T.UPPER_ORG_CD + ']' + OFFICE_NM
          					FROM 	TL_ORG
         					WHERE 	OFFICE_CD = T.UPPER_ORG_CD) AS UPPER_ORG_NM,
       					(	SELECT 	ORG_LEVEL
          					FROM 	TL_ORG
         					WHERE 	OFFICE_CD = T.UPPER_ORG_CD) AS UPPER_NODE_TYPE
				FROM 	TL_ORG T
				WHERE 	T.USE_FLG = 'Y') AA
				ORDER 	BY upperOrgId ASC,upperNodeType ASC
	</select>
	
    <typeAlias alias="WHBookingInfoDto" 	type="com.clt.apps.fis.wms.common.dto.WHBookingInfoVO"/>
	<select id="searchWHBookingInfo" resultClass="WHBookingInfoDto">
	SELECT *
	  FROM (
	        SELECT TOP(1) IB.WH_CD
	             , dbo.TL_GET_LOC_NM(IB.WH_CD) AS WH_NM
	             , IB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(IB.CTRT_NO) AS CTRT_NM
	             , IB.BK_DATE
	             , RCV.INBOUND_DT AS COMP_DATE
	             , IB.WIB_BK_NO AS BK_NO
	             , IB.CUST_ORD_NO
	             , 'IN' AS BK_CLS_CD
	             , 'Inbound' AS BK_CLS_NM
	             , IB.ORD_TP_CD
	             , IB.LOAD_TP_CD
	             , IB.ORDER_REL
	          FROM TL_WH_IB IB
	             , TL_WH_RCV RCV
	         WHERE IB.WIB_BK_NO = RCV.WIB_BK_NO
	           AND IB.IN_STS_CD IS NOT NULL
	           <isNotEmpty property="wh_cd">
		           AND IB.WH_CD = #wh_cd#
	           </isNotEmpty>
	           <isNotEmpty property="ctrt_no">
		           AND IB.CTRT_NO = #ctrt_no#
	           </isNotEmpty>
			   AND IB.WIB_BK_NO = #bk_no#
	         UNION ALL	        
	        SELECT TOP(1) OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , OB.BK_DATE
	             , ISSU.OUTBOUND_DT
	             , OB.WOB_BK_NO
	             , OB.CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , OB.ORD_TP_CD
	             , OB.LOAD_TP_CD
	             , OB.ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_ALLC ALLC
	             , TL_WH_ISSU ISSU
	         WHERE OB.WOB_BK_NO = ALLC.WOB_BK_NO
	           AND ALLC.WALC_NO = ISSU.WALC_NO  
	           <isNotEmpty property="wh_cd">
		           AND OB.WH_CD = #wh_cd#
	           </isNotEmpty>
	           <isNotEmpty property="ctrt_no">
		           AND OB.CTRT_NO = #ctrt_no#
	           </isNotEmpty>
			   AND OB.WOB_BK_NO = #bk_no#   
	         UNION ALL
	        SELECT TOP(1) OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , MAX(OB.BK_DATE) AS BK_DATE
	             , LP.OUTBOUND_DT
	             , LPI.WOB_BK_NO
	             , MAX(OB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , MAX(OB.ORD_TP_CD) AS ORD_TP_CD
	             , MAX(OB.LOAD_TP_CD) AS LOAD_TP_CD
	             , MAX(OB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_LOAD_PLAN_ITEM LPI
	             , TL_WH_LOAD_PLAN LP
	         WHERE OB.WOB_BK_NO = LPI.WOB_BK_NO   
	           AND LPI.LP_NO = LP.LP_NO   
	           <isNotEmpty property="wh_cd">
		           AND OB.WH_CD = #wh_cd#
	           </isNotEmpty>
	           <isNotEmpty property="ctrt_no">
		           AND OB.CTRT_NO = #ctrt_no#
	           </isNotEmpty>
			   AND LPI.WOB_BK_NO = #bk_no#
	         GROUP BY OB.WH_CD, OB.CTRT_NO, LP.OUTBOUND_DT, LPI.WOB_BK_NO
	     ) T
	</select>
	
    <select id="searchDayOpt" resultClass="CodeInfoVO">
	 /*searchDayOpt*/
      SELECT 
            <isEqual compareValue="MF" property="code">
           	 dbo.TL_GET_ROWTOCOLL_RATE_CODE('|', 'WR5', 'MF', 'Y','OPT_ITM1') AS CODE
            ,dbo.TL_GET_ROWTOCOLL_RATE_NAME('|', 'WR5', 'MF', 'Y','OPT_ITM1') AS NAME
            </isEqual>
            <isEqual compareValue="MH" property="code"> 
           	 dbo.TL_GET_ROWTOCOLL_RATE_CODE('|', 'WR5', 'MH', 'Y','OPT_ITM2') AS CODE
            ,dbo.TL_GET_ROWTOCOLL_RATE_NAME('|', 'WR5', 'MH', 'Y','OPT_ITM2') AS NAME
            </isEqual>
            <isEqual compareValue="W" property="code">
             dbo.TL_GET_ROWTOCOLL_RATE_CODE('|', 'WR5', 'W', 'Y','OPT_ITM3') AS CODE
            ,dbo.TL_GET_ROWTOCOLL_RATE_NAME('|', 'WR5', 'W', 'Y','OPT_ITM3') AS NAME
       		</isEqual>
	</select>
	
	<insert id="addCreateMultiItemPopupVO" parameterClass="Grd03WHCreateMultiItemPopupVO">
	/* WHInbk.addWHInPackDefList */
	
	INSERT INTO TL_CTRT_CUST_ITEM (CTRT_NO,
		                               ITEM_SYS_NO,
		                               ITEM_CD,
		                               ITEM_NM,
		                               HTS_NO,
		                               ITEM_PKGBASEQTY,
		                               ITEM_PKGUNIT,
		                               ITEM_CBM,
		                               ITEM_KGS,
		                               ITEM_WIDTH,
		                               ITEM_LENGTH,
		                               ITEM_HEIGHT,
		                               ITEM_REMARK,
		                               ITEM_USE_FLG,
		                               RGST_ID,
		                               RGST_SYS_DT,
		                               MODI_ID,
		                               MODI_SYS_DT,
		                               ITEM_NET_WGT,
		                               LOT_NO,
		                               PALLET_NO,
		                               ITEM_GRP_CD,
		                               PKG_LV1_PUT_TP_CD,
		                               PKG_LV1_UNIT_CD,
		                               PKG_LV1_QTY,
		                               PKG_LV2_PUT_TP_CD,
		                               PKG_LV3_UNIT_CD,
		                               PKG_LV3_QTY,
		                               PKG_LV3_PUT_TP_CD,
		                               PKG_LV4_UNIT_CD,
		                               PKG_LV4_QTY,
		                               PKG_LV4_PUT_TP_CD,
		                               ALTER_ITEM_CD,
		                               BARCODE_NO,
		                               SAFE_STC_QTY,
		                               ADV_CURR_CD,
		                               ADV_PRICE,
		                               NEGO_CURR_CD,
		                               NEGO_PRICE,
		                               UNIT_CURR_CD,
		                               UNIT_PRICE,
		                               ABC_CD,
		                               REF_CD_01,
		                               REF_CD_02,
		                               ITEM_CBF,
		                               ITEM_GRS_LBS,
		                               ITEM_NET_LBS,
		                               LV1_CBM,
		                               LV1_CBF,
		                               LV1_GRS_KGS,
		                               LV1_GRS_LBS,
		                               LV1_NET_KGS,
		                               LV1_NET_LBS,
		                               LV1_WIDTH,
		                               LV1_LENGTH,
		                               LV1_HEIGHT,
		                               LV3_CBM,
									   LV3_CBF,
									   LV3_GRS_KGS,
									   LV3_GRS_LBS,
									   LV3_NET_KGS,
									   LV3_NET_LBS,
									   LV3_WIDTH,
									   LV3_LENGTH,
									   LV3_HEIGHT,
									   PKG_PL_STD_QTY,
									   PKG_PL_OVER_WGT)
		     VALUES (#ctrt_no#
		            ,#item_sys_no#
		            ,#item_cd#
		            ,UPPER(#item_nm#)
		            ,#hts_no#
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#item_pkgbaseqty# AS INT)))
		            ,#item_pkgunit#
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_cbm# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_width# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_length# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_height# AS FLOAT)))
		            ,NULL
		            ,'Y'
		            ,#user_id#
		            ,GETDATE()
		            ,NULL
		            ,NULL
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_net_wgt# AS FLOAT))) 
		            ,NULL
		            ,NULL
		            ,#item_grp_cd#
		            ,NULL
		            ,#pkg_lv1_unit_cd#
		            ,1
		            ,NULL
		            ,#pkg_lv3_unit_cd#
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#pkg_lv3_qty# AS INT)))
		            ,NULL
		            ,#pkg_lv4_unit_cd#
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#pkg_lv4_qty# AS INT)))
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,NULL
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_cbf# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_grs_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#item_net_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_cbm# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_cbf# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_grs_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_grs_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_net_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_net_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_width# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_length# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv1_height# AS FLOAT)))
		             
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_cbm# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_cbf# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_grs_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_grs_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_net_kgs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_net_lbs# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_width# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_length# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15, 5), CAST(#lv3_height# AS FLOAT)))
		            ,(SELECT CONVERT(NUMERIC(15), CAST(#pkg_pl_std_qty# AS INT)))
		            ,(SELECT CONVERT(NUMERIC(3, 1), CAST(#pkg_pl_over_wgt# AS FLOAT))) 
		             )
       </insert>       
    <select id="searchWarehouseItemInfoByExcel" parameterClass="java.util.HashMap" resultClass="ContractItemCodeInfoVO">
		/* WmsCommonSQL.xml > searchWarehouseItemInfoByExcel */
		SELECT T.RNUM,T.ROWINDEX, 
			EXCEL_ITEM_CD AS ITEM_CD,
	        T.CTRT_NO,
	        T.ITEM_SYS_NO,
	        T.ITEM_NM,
	        ISNULL(T.LOT_NO,
	        '') AS LOT_NO,
	        ISNULL (T.ITEM_PKGBASEQTY,
	        0) AS ITEM_PKGBASEQTY, /*LEVEL 2*/
	        ISNULL(T.ITEM_PKGUNIT,
	        '') AS ITEM_PKGUNIT, /*LEVEL 2*/
	        ISNULL(T.PKG_LV1_UNIT_CD,
	        '') AS PKG_LV1_UNIT_CD,
	        ISNULL (T.PKG_LV1_QTY,
	        0) AS PKG_LV1_QTY,
	        ISNULL(T.PKG_LV3_UNIT_CD,
	        '') AS PKG_LV3_UNIT_CD,
	        ISNULL (T.PKG_LV3_QTY,
	        0) AS PKG_LV3_QTY,
	        ISNULL(T.PKG_LV4_UNIT_CD,
	        '') AS PKG_LV4_UNIT_CD,
	        ISNULL (T.PKG_LV4_QTY,
	        0) AS PKG_LV4_QTY,
	        ISNULL (T.LV1_CBM,
	        0) AS LV1_CBM,
	        ISNULL (T.LV1_CBF,
	        0) AS LV1_CBF,
	        ISNULL (T.LV1_GRS_KGS,
	        0) AS LV1_GRS_KGS,
	        ISNULL (T.LV1_GRS_LBS,
	        0) AS LV1_GRS_LBS,
	        ISNULL (T.LV1_NET_KGS,
	        0) AS LV1_NET_KGS,
	        ISNULL (T.LV1_NET_LBS,
	        0) AS LV1_NET_LBS,
	        ISNULL(T.ITEM_REMARK,
	        '') AS ITEM_REMARK,
	        dbo.TL_GET_WH_PACK_MST_INFO(T.PKG_LV1_QTY,
	        T.PKG_LV1_UNIT_CD,
	        T.ITEM_PKGBASEQTY,
	        T.ITEM_PKGUNIT,
	        T.PKG_LV3_QTY,
	        T.PKG_LV3_UNIT_CD,
	        T.PKG_LV4_QTY,
	        T.PKG_LV4_UNIT_CD) AS PKG_INFO,
	        ISNULL(UNIT_CURR_CD,
	        '') AS UNIT_CURR_CD,
	        ISNULL(UNIT_PRICE,
	        0) AS  UNIT_PRICE     
	    FROM
	        (SELECT A.RTN_CODE AS EXCEL_ITEM_CD,A.ROWINDEX,
	            C.*,
	            ROW_NUMBER () OVER (PARTITION 
	        BY
	            A.ROWINDEX, C.ITEM_CD 
	        ORDER BY
	            C.ITEM_SYS_NO DESC) AS RNUM             
	        FROM
	            (SELECT [VALUE] AS RTN_CODE, ROWINDEX FROM FN_SPLIT_TXT_TYPE(#f_param_val#,',') ) A
				LEFT OUTER JOIN TL_CTRT_CUST_ITEM C           
				ON  C.ITEM_CD = A.RTN_CODE AND C.CTRT_NO = #ctrt_no# AND C.ITEM_USE_FLG = 'Y'                                      
	        WHERE
	            1=1                                                                   
				) T    
	    WHERE 1=1
	      AND T.RNUM = 1
	    ORDER BY CAST(ROWINDEX AS INT) ASC	   
    </select>
    <select id="searchItemContractInfo" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.ctrtmgmt.dto.CtrtMgmtVO">
    /* WmsCommonSQL.xml > searchItemContractInfo */
	    SELECT CTRT_NO 
	      FROM TL_CTRT 
	     WHERE CTRT_NO = #ctrt_no# 
    </select>
    <select id="searchItemCheckList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.item.dto.IMInfoVO">
    /* WmsCommonSQL.xml > searchItemCheckList */
	    SELECT ITEM_CD,ITEM_NM
	      FROM
	         TL_CTRT_CUST_ITEM    
	     WHERE
	         1=1      
	         AND ITEM_CD IN $f_item_val$
	         AND CTRT_NO = #ctrt_no#
    </select>
    <select id="searchItemUnitCodeCheckList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.CommonCodeVO">
    /* WmsCommonSQL.xml > searchItemUnitCodeCheckList */
	    SELECT A.RTN_CODE AS CODECD, 
	    	MAX(C.PCK_UT_CD) AS CODENM
		  FROM (SELECT [VALUE] AS RTN_CODE FROM FN_SPLIT_TXT_TYPE(#f_unit_val#,',') ) A
			LEFT OUTER JOIN TB_PCK_UT_CD C           
			ON  C.PCK_UT_CD = A.RTN_CODE AND C.USE_FLG = 'Y'   
		 WHERE C.PCK_UT_CD IS NULL
		 GROUP BY RTN_CODE
    </select>
    <select id="searchItemHtsCodeCheckList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.mdm.code.commodity.dto.CmdtCdVO">
    /* WmsCommonSQL.xml > searchItemHtsCodeCheckList */
	    SELECT A.RTN_CODE AS CMDT_CD, 
	    	MAX(C.CMDT_CD) AS CMDT_NM
		  FROM (SELECT [VALUE] AS RTN_CODE FROM FN_SPLIT_TXT_TYPE(#f_hts_val#,',') ) A
			LEFT OUTER JOIN TB_CMDT_CD C           
			ON  CMDT_CD = A.RTN_CODE AND DELT_FLG = 'Y'   
		 WHERE CMDT_CD IS NULL
		 GROUP BY RTN_CODE
    </select>
    <select id="searchItemGroupCodeCheckList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.common.dto.ItemGroupVO">
    /* WmsCommonSQL.xml > searchItemGroupCodeCheckList */
	    SELECT A.RTN_CODE AS ITEM_GRP_CD, 
	    	MAX(C.ITEM_GRP_CD) AS ITEM_GRP_NM
		  FROM (SELECT [VALUE] AS RTN_CODE FROM FN_SPLIT_TXT_TYPE(#f_group_val#,',') ) A
			LEFT OUTER JOIN TL_CTRT_CUST_ITEM_GRP C           
			ON  ITEM_GRP_CD = A.RTN_CODE AND C.CTRT_NO = #ctrt_no# AND C.USE_FLG = 'Y'               
		 WHERE C.ITEM_GRP_CD IS NULL
		 GROUP BY RTN_CODE
    </select>
     <select id="searchItemDuplicateList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.item.dto.IMInfoVO">
    /* WmsCommonSQL.xml > searchItemDuplicateList */
	    SELECT T.RTN_CODE AS ITEM_CD, COUNT(T.RTN_CODE) AS CNT, '' AS ITEM_NM
		 FROM (
				SELECT [VALUE] AS RTN_CODE FROM FN_SPLIT_TXT_TYPE(#f_param_item_val#,',') A
			) T
		GROUP BY RTN_CODE
		HAVING COUNT(T.RTN_CODE) >=2 
    </select>
</sqlMap>