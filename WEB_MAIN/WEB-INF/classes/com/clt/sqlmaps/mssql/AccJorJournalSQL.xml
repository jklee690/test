<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="acc.jor.journal">
	
	<typeAlias alias="InvJorVO" 	type="com.clt.apps.fis.acc.jor.journal.dto.InvJorVO"/>		<!-- InvoiceList   -->
	<typeAlias alias="JournalVO" 	type="com.clt.apps.fis.acc.jor.journal.dto.JournalVO"/>		<!-- Journal Info   -->
	<typeAlias alias="GeneralVO" 	type="com.clt.apps.fis.acc.jor.journal.dto.GeneralVO"/>		<!-- General Info   -->
	<typeAlias alias="JournaHistoryVO" 	type="com.clt.apps.fis.acc.jor.journal.dto.JournaHistoryVO"/>		<!-- Journal Info   -->
	
    <!-- Deposit InvoiceList 조회  -->
    <select id="searchINV_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchINV_LIST */
		<isEqual property="page_show_yn" compareValue="Y">
		SELECT a1.*                 
          FROM (     
          SELECT ROW_NUMBER() OVER (ORDER BY T.INV_NO) as ROWNUM, T.* 
            FROM(
        </isEqual>    
                 SELECT MAX(inv_dtl.INV_POST_DT)		AS inv_post_dt
		    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
		    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
				       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
				       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END								AS inv_tp
		
						,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_AR)                
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_AGENT_AR)
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_AGENT_AP)
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_AP) END gl_no    
						,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AR) AND use_flg = 'Y')                
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AR) AND use_flg = 'Y')   
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AP) AND use_flg = 'Y')       
						      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AP) AND use_flg = 'Y') END gl_rmk  
						      
					   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_EX_LOSS)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_MISC_LOSS)
							 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_EX_PROFIT)
							 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_MISC_PROFIT)
					    END clr_gl_cd
				       ,MAX(inv_dtl.INV_NO)				AS inv_no
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
				        END 							AS buy_inv_no
				        ,CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.doc_ref_no)
							ELSE 
						       CASE WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.REF_NO)
						             WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.REF_NO)					
						        END
						END AS ref_no
					   , CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.MBL_NO)    
							ELSE	MAX(CASE WHEN bl.intg_bl_seq is not null THEN bl.bl_no ELSE oth.mbl_no END) 
						END 	AS bl_no 
						,MAX(inv_dtl.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
				       ,MAX(inv_dtl.INV_APLY_XCRT)		AS inv_aply_xcrt
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.INV_SUM_AMT)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.INV_SUM_AMT) * -1
				        END								AS inv_sum_amt	
					   
					   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
				        END								AS bal_sum_amt
				        
				       ,MAX(inv_dtl.inv_seq)			AS inv_seq
				       ,MAX(inv_mst.trdp_cd)			AS trdp_cd
					   ,MAX(trdp.eng_nm)				AS trdp_nm
					   
				       ,CASE WHEN isnull(MAX(inv_dtl.BAL_AMT),0) = 0 THEN '1'
				             ELSE '0'
				        END 							AS clr_flag
				       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
						
						<!-- #21662 : [BINEX]Deposit, Payment -->
						,MAX(jnr_dtl.INP_TYPE)			as INP_TYPE
						,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD
						,MAX(inv_dtl.modi_tms) AS modi_tms
						
				       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
					   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
					   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
				       ,CASE WHEN MAX(inv_mst.AIR_SEA_CLSS_CD) = 'G' AND (SELECT ISNULL(OPT_VAL, '') FROM TB_SYS_OPT WHERE OPT_KEY = 'BANK_GNA_RMK') = 'Y'
						     THEN MAX(inv_mst.INV_RMK)
						     ELSE ''
						 END AS jnr_desc 
				  FROM TB_INV inv_mst
				    LEFT OUTER JOIN TB_INV_DTL inv_dtl 
				     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
				    LEFT JOIN TB_FRT frt 
				     	ON inv_mst.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
					LEFT JOIN TB_INTG_BL bl
				     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
					LEFT JOIN TB_OTH_SALES oth
				     	ON frt.OTH_SEQ = oth.OTH_SEQ AND oth.delt_flg = 'N'  
					LEFT JOIN TB_WM_DOC_MST wms
				     	ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
					LEFT JOIN TB_JNR_DTL jnr_dtl
				     	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ AND jnr_dtl.delt_flg = 'N'	
				    LEFT OUTER JOIN  TB_OFC ofc 
				        ON ofc.OFC_CD = inv_mst.OFC_CD AND ofc.delt_flg = 'N' 
					LEFT OUTER JOIN TB_ADD_INFO_BND bnd
				     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
				    LEFT OUTER JOIN TB_TRDP trdp 	
				        ON trdp.trdp_cd = inv_mst.trdp_cd
				        
				 WHERE isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
				 
				 <isNotEmpty property="s_post_strdt">
				 	<isNotEmpty property="s_post_enddt">
				 		AND inv_dtl.INV_POST_DT between #s_post_strdt# AND #s_post_enddt#
				 	</isNotEmpty>
				 </isNotEmpty>
				 <isNotEmpty property="s_ofc_cd">
				   AND inv_mst.OFC_CD = #s_ofc_cd#
				 </isNotEmpty>
				 <isNotEmpty property="s_cust_cd">
				   AND inv_mst.DELT_FLG = 'N'
				   AND inv_mst.TRDP_CD = #s_cust_cd#
				 </isNotEmpty>  
				 <isNotEmpty property="s_cust_nm">
				    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
				                WHERE trd.TRDP_CD = inv_mst.TRDP_CD AND trd.ENG_NM LIKE #s_cust_nm# + '%')
				 </isNotEmpty>
				 <isNotEmpty property="f_curr_cd">
				   AND frt.inv_curr_cd = #f_curr_cd#
				 </isNotEmpty>  
				 <isEqual property="his_chk" compareValue="O">
				   AND inv_dtl.INV_STS_CD != 'IE'
				   AND inv_dtl.BAL_AMT != 0
				 </isEqual>
				   <isNotEmpty property="s_inv_no">
				       AND ( inv_dtl.INV_NO = #s_inv_no# OR inv_dtl.BUY_INV_NO = #s_inv_no# )	
				   </isNotEmpty>
				   <isEqual property="dept_chk1" compareValue="Y">
				       <isEqual property="dept_chk2" compareValue="Y">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
				       	   </isEqual>
				       </isEqual>
				       <isEqual property="dept_chk2" compareValue="N">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
				       	   </isEqual>
				       </isEqual>	    		
				   </isEqual>
				   
				   <isEqual property="dept_chk1" compareValue="N">
				       <isEqual property="dept_chk2" compareValue="Y">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
				       	   </isEqual>
				       </isEqual>
				       <isEqual property="dept_chk2" compareValue="N">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('')
				       	   </isEqual>
				       </isEqual>	    		
				   </isEqual>
				   
				 GROUP BY inv_mst.INV_SEQ
		<isEqual property="page_show_yn" compareValue="Y">		 
				 ) T 
				 ) a1      
           WHERE 1 = 1
           <![CDATA[
             AND a1.ROWNUM >  #beginIdx# /**P*/ 
             AND a1.ROWNUM <=  #topCnt# /**P*/
           ]]>  
        </isEqual>   
    </select>
    
    <select id="searchINV_LIST_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
	     /* AccJorJournalSQL.xml  searchINV_LIST_CNT */
    	SELECT COUNT(*)
    	  FROM (SELECT  MAX(inv_dtl.INV_NO)				AS inv_no
				  FROM TB_INV inv_mst
				    LEFT OUTER JOIN TB_INV_DTL inv_dtl 
				     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
				    LEFT JOIN TB_FRT frt 
				     	ON inv_mst.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
					LEFT JOIN TB_INTG_BL bl
				     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
					LEFT JOIN TB_OTH_SALES oth
				     	ON frt.OTH_SEQ = oth.OTH_SEQ AND oth.delt_flg = 'N'  
					LEFT JOIN TB_WM_DOC_MST wms
				     	ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
					LEFT JOIN TB_JNR_DTL jnr_dtl
				     	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ AND jnr_dtl.delt_flg = 'N'	
				    LEFT OUTER JOIN  TB_OFC ofc 
				        ON ofc.OFC_CD = inv_mst.OFC_CD AND ofc.delt_flg = 'N' 
					LEFT OUTER JOIN TB_ADD_INFO_BND bnd
				     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
				    LEFT OUTER JOIN TB_TRDP trdp 	
				        ON trdp.trdp_cd = inv_mst.trdp_cd
				        
				 WHERE isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
				 
				 <isNotEmpty property="s_post_strdt">
				 	<isNotEmpty property="s_post_enddt">
				 		AND inv_dtl.INV_POST_DT between #s_post_strdt# AND #s_post_enddt#
				 	</isNotEmpty>
				 </isNotEmpty>
				 <isNotEmpty property="s_ofc_cd">
				   AND inv_mst.OFC_CD = #s_ofc_cd#
				 </isNotEmpty>
				 <isNotEmpty property="s_cust_cd">
				   AND inv_mst.DELT_FLG = 'N'
				   AND inv_mst.TRDP_CD = #s_cust_cd#
				 </isNotEmpty>  
				 <isNotEmpty property="s_cust_nm">
				    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
				                WHERE trd.TRDP_CD = inv_mst.TRDP_CD AND trd.ENG_NM LIKE #s_cust_nm# + '%')
				 </isNotEmpty>
				 <isNotEmpty property="f_curr_cd">
				   AND frt.inv_curr_cd = #f_curr_cd#
				 </isNotEmpty>  
				 <isEqual property="his_chk" compareValue="O">
				   AND inv_dtl.INV_STS_CD != 'IE'
				   AND inv_dtl.BAL_AMT != 0
				 </isEqual>
				   <isNotEmpty property="s_inv_no">
				       AND ( inv_dtl.INV_NO = #s_inv_no# OR inv_dtl.BUY_INV_NO = #s_inv_no# )	
				   </isNotEmpty>
				   <isEqual property="dept_chk1" compareValue="Y">
				       <isEqual property="dept_chk2" compareValue="Y">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
				       	   </isEqual>
				       </isEqual>
				       <isEqual property="dept_chk2" compareValue="N">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
				       	   </isEqual>
				       </isEqual>	    		
				   </isEqual>
				   
				   <isEqual property="dept_chk1" compareValue="N">
				       <isEqual property="dept_chk2" compareValue="Y">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
				       	   </isEqual>
				       </isEqual>
				       <isEqual property="dept_chk2" compareValue="N">
				       	   <isEqual property="dept_chk3" compareValue="Y">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
				       	   </isEqual>
				       	   <isEqual property="dept_chk3" compareValue="N">
				       	   	   AND inv_mst.sell_buy_tp_cd IN('')
				       	   </isEqual>
				       </isEqual>	    		
				   </isEqual>
				 GROUP BY inv_mst.INV_SEQ) K
	</select>
    
     <select id="searchBAD_DEBIT_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchBAD_DEBIT_LIST */
		 SELECT
        disp.trdp_cd ,
        disp.trdp_nm ,
		disp.sls_gp_cd ,
        disp.cr_term_cd,
        disp.cr_term_dt,
        disp.crd_lmt_amt,
        disp.inv_seq ,
        disp.inv_no ,
        disp.inv_dt ,
        disp.inv_sum_amt,
        disp.pay_amt ,
        disp.rgst_usrid ,
        disp.rgst_usrnm ,        
        disp.post_dt ,
        disp.inv_post_dt ,
        disp.inv_tp  ,       
		 <![CDATA[CASE WHEN disp.over_dt > 0 AND disp.over_dt < 31]]>
		 THEN ISNULL(disp.inv_sum_amt,0) - ISNULL(SUM(disp.ttl_pay_amt),0) ELSE 0 END AS over_1_30_amt,
		
		 <![CDATA[CASE WHEN disp.over_dt > 30 AND disp.over_dt < 61]]>
		 THEN ISNULL(disp.inv_sum_amt,0) - ISNULL(SUM(disp.ttl_pay_amt),0) ELSE 0 END AS over_31_60_amt,
		
		 <![CDATA[CASE WHEN disp.over_dt > 60 AND disp.over_dt < 91]]>
		 THEN ISNULL(disp.inv_sum_amt,0) - ISNULL(SUM(disp.ttl_pay_amt),0) ELSE 0 END AS over_61_90_amt,
		
		 <![CDATA[CASE WHEN disp.over_dt > 90]]>
		 THEN ISNULL(disp.inv_sum_amt,0) - ISNULL(SUM(disp.ttl_pay_amt),0) ELSE 0 END AS over_91_amt
        FROM ( 
		SELECT dtl.trdp_cd, dtl.eng_nm as trdp_nm,   
				dtl.sls_gp_cd ,
                dtl.cr_term_cd,
                dtl.cr_term_dt,
                dtl.crd_lmt_amt,
			   dtl.inv_seq,dtl.inv_no,
			   <isEqual property="f_rpt_type" compareValue="Y">
			    	SUM(dtl.inv_sum_amt) AS inv_sum_amt,
			   </isEqual>
			   <isEqual property="f_rpt_type" compareValue="N">
			   		CASE WHEN dtl.sell_buy_tp_cd ='B' THEN SUM(dtl.inv_sum_amt)*-1 ELSE SUM(dtl.inv_sum_amt) END AS inv_sum_amt,
			   </isEqual>			   
			   max(dtl.ttl_pay_amt) AS pay_amt,
				SUM(isnull(max(dtl.ttl_pay_amt),0)) OVER (PARTITION BY dtl.inv_seq) as ttl_pay_amt,	
				CASE                      
                WHEN dtl.sell_buy_tp_cd = 'S' THEN 'A/R'                                        
                WHEN dtl.sell_buy_tp_cd = 'D'	OR  dtl.sell_buy_tp_cd = 'C' THEN 'DB/CR'                                        
                WHEN dtl.sell_buy_tp_cd = 'B' THEN 'A/P'                              
            	END AS inv_tp             ,
			   dtl.inv_dt,  dtl.post_dt, dtl.inv_post_dt ,dtl.over_dt,  dtl.sell_buy_tp_cd, dtl.rgst_usrid , dtl.rgst_usrnm 
		FROM(	
			SELECT trdp.trdp_cd, trdp.eng_nm, trdp.sls_gp_cd , trdp.cr_term_cd, trdp.cr_term_dt,trdp.crd_lmt_amt,					
			inv.inv_seq,	idt.inv_no, inv.rgst_usrid,usr.eng_usr_nm AS rgst_usrnm , 
			CASE WHEN frt.sell_buy_tp_cd = 'C' THEN frt.cr_amt*-1 ELSE frt.inv_sum_amt END AS inv_sum_amt,				
			inv.sell_buy_tp_cd,			
			<isEqual property="f_acct_tp_radio" compareValue="A">
			CASE WHEN <![CDATA[jms.post_dt <= #f_end_dt#]]> AND NOT (jms.VOID_YN = 'Y' AND <![CDATA[jms.VOID_DT <= #f_end_dt#]]>)  
				THEN CASE WHEN inv.sell_buy_tp_cd IN ('C','B') THEN jdt.ttl_pay_amt * -1  ELSE jdt.ttl_pay_amt END
				ELSE 0	END AS ttl_pay_amt,
			</isEqual>
			<isEqual property="f_acct_tp_radio" compareValue="C">
			 CASE WHEN <![CDATA[jms.post_dt <= CONVERT(VARCHAR,GETDATE(),112)]]> AND NOT (jms.VOID_YN = 'Y' AND <![CDATA[jms.VOID_DT <= #f_end_dt#]]>) THEN 
 			CASE WHEN inv.sell_buy_tp_cd IN ('C','B') THEN jdt.ttl_pay_amt * -1  ELSE jdt.ttl_pay_amt END
				ELSE 0 
			END AS ttl_pay_amt,
			</isEqual>	
			jdt.jnr_no,
			idt.inv_dt, jms.post_dt, frt.inv_post_dt ,
			DATEDIFF("D", CONVERT(DATETIME,idt.inv_due_dt), CONVERT(DATETIME,#f_end_dt#)) AS over_dt
			FROM tb_trdp trdp			
			JOIN tb_inv inv ON inv.trdp_cd = trdp.trdp_cd AND inv.delt_flg = 'N'
			AND ( 1=2
			   <isEqual property="f_agn_rpt_tp_1" compareValue="A">
			   	  	OR inv.sell_buy_tp_cd = 'D'			   	  
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_2" compareValue="A">
			    	OR (inv.sell_buy_tp_cd = 'S' AND inv.sell_buy_tp_cd != 'G')			    
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_3" compareValue="A">			   
			   	   	<![CDATA[OR (inv.sell_buy_tp_cd = 'C' AND inv.inv_ttl_amt < 0 ) ]]>  
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_4" compareValue="A">
			   	   	<![CDATA[OR (inv.sell_buy_tp_cd = 'B' AND inv.sell_buy_tp_cd != 'G' AND inv.inv_ttl_amt < 0 ) ]]>
			   </isEqual>      
			   <isEqual property="f_agn_rpt_tp_5" compareValue="A">
			   	   <![CDATA[OR (inv.sell_buy_tp_cd = 'B' AND inv.air_sea_clss_cd = 'G' AND inv.inv_ttl_amt < 0) ]]>
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_6" compareValue="A">
			   	   	OR (inv.sell_buy_tp_cd = 'S' AND inv.air_sea_clss_cd = 'G')
			   </isEqual>
			)
			AND(1=2
			 <isEqual property="f_dpt_tp_1" compareValue="A">
			 	OR inv.inv_dept_cd IN ('SIM','SIH')   	   			
   			</isEqual>
		   <isEqual property="f_dpt_tp_2" compareValue="A">
		   		OR inv.inv_dept_cd IN ('SOM','SOH')		   	   
		   </isEqual>
		   <isEqual property="f_dpt_tp_3" compareValue="A">
		   		OR inv.inv_dept_cd IN ('OTH')		   	   
		   </isEqual>
		   <isEqual property="f_dpt_tp_4" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('AIM','AIH')
		   </isEqual>
		   <isEqual property="f_dpt_tp_5" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('AOM','AOH')
		   </isEqual>
		   <isEqual property="f_dpt_tp_6" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('GNR')
		   </isEqual>
		   <isEqual property="f_dpt_tp_7" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('WMS')
		   </isEqual>
			)
			JOIN tb_inv_dtl idt ON idt.inv_seq = inv.inv_seq AND idt.delt_flg = 'N'	
			LEFT OUTER JOIN (SELECT D.JNR_NO, D.INV_SEQ, SUM(D.TTL_PAY_AMT) AS TTL_PAY_AMT, MAX(d.post_dt) AS post_dt
			                                 FROM TB_JNR_DTL D
			                                     ,TB_JNR_MST M
			                                WHERE D.JNR_NO = M.JNR_NO
			                                  AND ISNULL(D.DELT_FLG, 'N')  = 'N'
			                                  AND ISNULL(M.DELT_FLG, 'N')  = 'N'
			 <isEqual property="f_dt_tp_radio" compareValue="I">                                 
			 AND ISNULL(M.VOID_YN,  'N') != 'Y'
			 </isEqual>
			                               GROUP BY D.JNR_NO, D.INV_SEQ) JDT ON JDT.INV_SEQ = INV.INV_SEQ
			
			LEFT OUTER JOIN TB_JNR_MST JMS ON JMS.JNR_NO= JDT.JNR_NO AND JMS.DELT_FLG = 'N'
			<isEqual property="f_dt_tp_radio" compareValue="I"> 
			  AND JMS.VOID_YN != 'Y'
			</isEqual>
			JOIN tb_frt frt ON frt.inv_seq = inv.inv_seq AND frt.delt_flg = 'N'
			left outer JOIN	tb_usr usr ON inv.rgst_usrid = usr.usrid
			<isEqual property="released_check" compareValue="O">
			JOIN tb_intg_bl bl
			ON bl.intg_bl_seq = frt.intg_bl_seq AND bl.delt_flg = 'N'
			AND (bl.RLSD_FLG = 'Y' OR (bl.CGO_RLSD_ON_DT_TM IS NOT NULL AND bl.CGO_RLSD_ON_DT_TM != ''))
			</isEqual>
			WHERE 1=1
			<isNotEmpty property="f_curr_cd">
			 AND idt.inv_aply_curr_cd = #f_curr_cd#
			</isNotEmpty> 			
			<isNotEmpty property="f_ofc_cd">
			 AND inv.ofc_cd = #f_ofc_cd#
			</isNotEmpty>
			
			<isEqual property="f_date_radio" compareValue="A">
				<isEqual property="f_dt_tp_radio" compareValue="P">
				<![CDATA[AND frt.inv_post_dt <= #f_end_dt# ]]>
				</isEqual>
				<isEqual property="f_dt_tp_radio" compareValue="I">
				<![CDATA[AND idt.inv_dt <= #f_end_dt# ]]>
				</isEqual>
			</isEqual>
			
			<isEqual property="f_date_radio" compareValue="P">
				<isEqual property="f_dt_tp_radio" compareValue="P">
				<![CDATA[AND frt.inv_post_dt >= #f_start_dt# ]]>
				<![CDATA[AND frt.inv_post_dt <= #f_end_dt# ]]>
				</isEqual>
				<isEqual property="f_dt_tp_radio" compareValue="I">
				<![CDATA[AND idt.inv_dt >= #f_start_dt# ]]>
				<![CDATA[AND idt.inv_dt <= #f_end_dt# ]]>
				</isEqual>
			</isEqual>
			
			UNION ALL
			SELECT trdp.trdp_cd, trdp.eng_nm,trdp.sls_gp_cd , trdp.cr_term_cd, trdp.cr_term_dt,trdp.crd_lmt_amt,
			inv.inv_seq,idt.inv_no,inv.rgst_usrid, usr.eng_usr_nm AS rgst_usrnm,
			0 AS inv_sum_amt,
			inv.sell_buy_tp_cd,			
			 (CASE WHEN NOT (jms.VOID_YN = 'Y' AND <![CDATA[jms.VOID_DT <= #f_end_dt#]]>)  THEN  
			 (CASE WHEN inv.sell_buy_tp_cd IN ('C','B') THEN jdt.ttl_pay_amt * -1 ELSE jdt.ttl_pay_amt END)  ELSE 0 END) AS ttl_pay_amt,
			jdt.jnr_no,
			idt.inv_dt,  jms.post_dt, frt.inv_post_dt 	,
			DATEDIFF("D", CONVERT(DATETIME,idt.inv_due_dt), CONVERT(DATETIME,#f_end_dt#)) AS over_dt
			FROM tb_trdp trdp			
			JOIN tb_inv inv
			ON inv.trdp_cd = trdp.trdp_cd AND inv.delt_flg = 'N'
			AND ( 1=2
			   <isEqual property="f_agn_rpt_tp_1" compareValue="A">
			   	  	OR inv.sell_buy_tp_cd = 'D'			   	  
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_2" compareValue="A">
			    	OR (inv.sell_buy_tp_cd = 'S' AND inv.sell_buy_tp_cd != 'G')			    
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_3" compareValue="A">
			   <![CDATA[OR (inv.sell_buy_tp_cd = 'C' AND inv.inv_ttl_amt < 0 ) ]]>			   	   		
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_4" compareValue="A">
			   	   	<![CDATA[OR (inv.sell_buy_tp_cd = 'B' AND inv.sell_buy_tp_cd != 'G' AND inv.inv_ttl_amt < 0 ) ]]>
			   </isEqual>      
			   <isEqual property="f_agn_rpt_tp_5" compareValue="A">
			   	   	<![CDATA[OR (inv.sell_buy_tp_cd = 'B' AND inv.air_sea_clss_cd = 'G' AND inv.inv_ttl_amt < 0 ) ]]>
			   </isEqual>
			   <isEqual property="f_agn_rpt_tp_6" compareValue="A">
			   	   	OR (inv.sell_buy_tp_cd = 'S' AND inv.air_sea_clss_cd = 'G')
			   </isEqual>      
			)
			AND(1=2
			   <isEqual property="f_dpt_tp_1" compareValue="A">
			 	OR inv.inv_dept_cd IN ('SIM','SIH')   	   			
   			</isEqual>
		   <isEqual property="f_dpt_tp_2" compareValue="A">
		   		OR inv.inv_dept_cd IN ('SOM','SOH')		   	   
		   </isEqual>
		   <isEqual property="f_dpt_tp_3" compareValue="A">
		   		OR inv.inv_dept_cd IN ('OTH')		   	   
		   </isEqual>
		   <isEqual property="f_dpt_tp_4" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('AIM','AIH')
		   </isEqual>
		   <isEqual property="f_dpt_tp_5" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('AOM','AOH')
		   </isEqual>
		   <isEqual property="f_dpt_tp_6" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('GNR')
		   </isEqual>
		   <isEqual property="f_dpt_tp_7" compareValue="A">
		   	   OR inv.inv_dept_cd IN ('WMS')
		   </isEqual>
			)
			JOIN tb_inv_dtl idt ON idt.inv_seq = inv.inv_seq AND ISNULL(idt.delt_flg,'N') = 'N'
			JOIN (SELECT JNR_NO, INV_SEQ, SUM(ttl_pay_amt) AS ttl_pay_amt ,MAX(post_dt) AS post_dt
			                                 FROM tb_jnr_dtl 
			                               WHERE ISNULL(delt_flg,'N') = 'N' 
			                               GROUP BY JNR_NO, INV_SEQ) jdt ON jdt.inv_seq = inv.inv_seq
			
			JOIN tb_jnr_mst jms ON jms.jnr_no= jdt.jnr_no 
			JOIN tb_frt frt ON frt.inv_seq = inv.inv_seq AND frt.delt_flg = 'N'
			left outer JOIN tb_usr usr ON inv.rgst_usrid = usr.usrid
			<isEqual property="released_check" compareValue="O">
			JOIN tb_intg_bl bl
			ON bl.intg_bl_seq = frt.intg_bl_seq AND bl.delt_flg = 'N'
			AND (bl.RLSD_FLG = 'Y' OR (bl.CGO_RLSD_ON_DT_TM IS NOT NULL AND bl.CGO_RLSD_ON_DT_TM != ''))
			</isEqual>
			WHERE 1=1
			<isEqual property="f_dt_tp_radio" compareValue="I">
			<![CDATA[AND 1=2 AND idt.inv_dt > #f_end_dt#]]>
			</isEqual>
			<isEqual property="f_dt_tp_radio" compareValue="P">
			<![CDATA[AND frt.inv_post_dt  >  #f_end_dt#]]>
			</isEqual>
			<![CDATA[AND jms.post_dt <= #f_end_dt#]]>
			AND jms.delt_flg = 'N'
			<isNotEmpty property="f_curr_cd">
			AND idt.inv_aply_curr_cd = #f_curr_cd#
			</isNotEmpty> 
			<isNotEmpty property="f_ofc_cd">
			 AND inv.ofc_cd = #f_ofc_cd#
			</isNotEmpty>
			)dtl 
			group by 
			dtl.trdp_cd, dtl.eng_nm, 
			dtl.sls_gp_cd , 
			dtl.cr_term_cd, 
			dtl.cr_term_dt,
			dtl.crd_lmt_amt,
			dtl.inv_seq,
			dtl.inv_no,
			dtl.inv_dt, 			
			dtl.sell_buy_tp_cd,
			dtl.jnr_no,
			dtl.rgst_usrid,
			dtl.rgst_usrnm,
			dtl.post_dt,
			dtl.inv_post_dt,
			dtl.over_dt
			) disp <![CDATA[WHERE disp.inv_sum_amt <> disp.ttl_pay_amt]]>
			AND  disp.inv_sum_amt != 0     
			group by  disp.trdp_cd ,
	        disp.trdp_nm ,
	        disp.sls_gp_cd ,
	        disp.cr_term_cd,
	        disp.cr_term_dt,
	        disp.crd_lmt_amt,
	        disp.inv_seq ,
	        disp.inv_no ,
	        disp.inv_dt ,
	        disp.inv_sum_amt,
	        disp.pay_amt ,
	        disp.rgst_usrid ,
	        disp.rgst_usrnm ,
	        disp.post_dt ,
	        disp.inv_post_dt ,
	        disp.inv_tp  ,
			disp.over_dt 
			order by disp.inv_dt desc, disp.inv_seq 
    </select>
    
    <!-- Check InvoiceList 조회  -->
    <select id="searchCHK_INV_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchCHK_INV_LIST */
		<isEqual property="page_show_yn" compareValue="Y">
		SELECT a1.*                 
          FROM (     
                SELECT ROW_NUMBER() OVER (ORDER BY T.INV_NO) as ROWNUM, T.* 
           	     FROM(
        </isEqual>   	     
           	     
			    	SELECT  MAX(inv_dtl.INV_POST_DT)		AS inv_post_dt
			    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
			    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
					       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
					       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
					       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
					        END								AS inv_tp
			
							,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_AR)                
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_AGENT_AR)
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_AGENT_AP)
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_AP) END gl_no
							,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AR) AND use_flg = 'Y')                
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AR) AND use_flg = 'Y')      
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AP) AND use_flg = 'Y')        
							      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AP) AND use_flg = 'Y') END gl_rmk  
						    
						   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_EX_LOSS)
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_MISC_LOSS)
								 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_EX_PROFIT)
								 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_MISC_PROFIT)
						    END clr_gl_cd 
					       ,MAX(inv_dtl.INV_NO)				AS inv_no
					       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
					             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
					        END 							AS buy_inv_no
					        ,CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.doc_ref_no)
					       		ELSE CASE WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.REF_NO)
					             		WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.REF_NO)					
									 END
								END 	AS ref_no
						   , CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.MBL_NO)
						   		ELSE     
					       			MAX(CASE WHEN bl.intg_bl_seq is not null THEN bl.bl_no ELSE oth.mbl_no END)	
					       		END	AS bl_no
					       ,MAX(inv_dtl.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
					       ,MAX(inv_dtl.INV_APLY_XCRT)		AS inv_aply_xcrt
					       
					       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.INV_SUM_AMT) * -1
					             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.INV_SUM_AMT) 
					        END								AS inv_sum_amt	
						   
						   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
					             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
					        END								AS bal_sum_amt
			
					       ,MAX(inv_dtl.inv_seq)			AS inv_seq
					       ,MAX(inv_mst.trdp_cd)			AS trdp_cd
						   ,MAX(trdp.eng_nm)				AS trdp_nm
					       ,CASE WHEN isnull(MAX(inv_dtl.BAL_AMT),0) = 0 THEN '1'
					             ELSE '0'
					        END 							AS clr_flag
					       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
					       
							<!-- #21662 : [BINEX]Deposit, Payment -->
							,MAX(jnr_dtl.INP_TYPE)			as INP_TYPE
							,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
							,MAX(inv_dtl.modi_tms) AS modi_tms
							
					       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
						   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
						   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
				           ,CASE WHEN MAX(inv_mst.AIR_SEA_CLSS_CD) = 'G' AND (SELECT ISNULL(OPT_VAL, '') FROM TB_SYS_OPT WHERE OPT_KEY = 'BANK_GNA_RMK') = 'Y'
							     THEN MAX(inv_mst.INV_RMK)
							     ELSE ''
							 END AS jnr_desc  
					  FROM TB_INV inv_mst
					    LEFT OUTER JOIN TB_INV_DTL inv_dtl 
					     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
					    LEFT JOIN TB_FRT frt 
					     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
						LEFT JOIN TB_INTG_BL bl
					     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
						LEFT JOIN TB_OTH_SALES oth
					     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
					    LEFT JOIN TB_WM_DOC_MST wms
				   			ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N' 	
						LEFT JOIN TB_JNR_DTL jnr_dtl
					     	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ AND jnr_dtl.delt_flg = 'N'	
					    LEFT OUTER JOIN  TB_OFC ofc 
					        ON ofc.OFC_CD = inv_mst.OFC_CD AND ofc.delt_flg = 'N'
						LEFT OUTER JOIN TB_ADD_INFO_BND bnd
					     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
					    LEFT OUTER JOIN TB_TRDP trdp 	
					        ON trdp.trdp_cd = inv_mst.trdp_cd 	
					        
					 WHERE  isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
					   AND inv_mst.DELT_FLG = 'N'
					 
					 <isNotEmpty property="s_post_strdt">
					 	<isNotEmpty property="s_post_enddt">
					 		AND inv_dtl.INV_POST_DT between #s_post_strdt# AND #s_post_enddt#
					 	</isNotEmpty>
					 </isNotEmpty>
					 <isNotEmpty property="s_ofc_cd">
					   AND inv_mst.OFC_CD = #s_ofc_cd#
					 </isNotEmpty>
					   
					 <isNotEmpty property="s_cust_cd">
					   AND inv_mst.TRDP_CD = #s_cust_cd#
					 </isNotEmpty>  
					 <isNotEmpty property="s_cust_nm">
					    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
					                WHERE trd.TRDP_CD = inv_mst.TRDP_CD AND trd.ENG_NM LIKE #s_cust_nm# + '%')
					 </isNotEmpty>
					 <isNotEmpty property="f_curr_cd">
					   AND frt.inv_curr_cd = #f_curr_cd#
					 </isNotEmpty> 
					 <isEqual property="his_chk" compareValue="O">
					   AND inv_dtl.INV_STS_CD != 'IE'
					   AND inv_dtl.BAL_AMT != 0
					 </isEqual>
					   <isNotEmpty property="s_inv_no">
					       AND (
						           ( inv_mst.sell_buy_tp_cd = 'B'  AND inv_dtl.BUY_INV_NO = #s_inv_no#)
						           OR
						           ( inv_mst.sell_buy_tp_cd != 'B' AND inv_dtl.INV_NO = #s_inv_no#)
					       	   )
					   </isNotEmpty>
					   
					   <isEqual property="dept_chk1" compareValue="Y">
					       <isEqual property="dept_chk2" compareValue="Y">
					       	   <isEqual property="dept_chk3" compareValue="Y">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
					       	   </isEqual>
					       	   <isEqual property="dept_chk3" compareValue="N">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
					       	   </isEqual>
					       </isEqual>
					       <isEqual property="dept_chk2" compareValue="N">
					       	   <isEqual property="dept_chk3" compareValue="Y">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
					       	   </isEqual>
					       	   <isEqual property="dept_chk3" compareValue="N">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
					       	   </isEqual>
					       </isEqual>	    		
					   </isEqual>
					   
					   <isEqual property="dept_chk1" compareValue="N">
					       <isEqual property="dept_chk2" compareValue="Y">
					       	   <isEqual property="dept_chk3" compareValue="Y">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
					       	   </isEqual>
					       	   <isEqual property="dept_chk3" compareValue="N">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
					       	   </isEqual>
					       </isEqual>
					       <isEqual property="dept_chk2" compareValue="N">
					       	   <isEqual property="dept_chk3" compareValue="Y">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
					       	   </isEqual>
					       	   <isEqual property="dept_chk3" compareValue="N">
					       	   	   AND inv_mst.sell_buy_tp_cd IN('')
					       	   </isEqual>
					       </isEqual>	    		
					   </isEqual>
					 GROUP BY inv_mst.INV_SEQ
		   <isEqual property="page_show_yn" compareValue="Y"> 
					 ) T ) a1      
           WHERE 1 = 1
           <![CDATA[
             AND a1.ROWNUM >  #beginIdx# /**P*/ 
             AND a1.ROWNUM <=  #topCnt# /**P*/
           ]]>  
           </isEqual>
    </select>
    
    <select id="searchCHK_INV_LIST_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
	     /* AccJorJournalSQL.xml  searchCHK_INV_LIST_CNT */
	     SELECT COUNT(*)
           	     FROM(
	    	SELECT  MAX(inv_dtl.INV_POST_DT)		AS inv_post_dt
	    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
	    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
			       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
			       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
			       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
			        END								AS inv_tp
	
					,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_AR)                
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_AGENT_AR)
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_AGENT_AP)
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_AP) END gl_no
					,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AR) AND use_flg = 'Y')                
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AR) AND use_flg = 'Y')      
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AGENT_AP) AND use_flg = 'Y')        
					      WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN (SELECT RMK FROM TB_GL_CD WHERE GL_CD = MAX(ofc.GL_AP) AND use_flg = 'Y') END gl_rmk  
				    
				   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S'  THEN MAX(ofc.GL_EX_LOSS)
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D'  THEN MAX(ofc.GL_MISC_LOSS)
						 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C'  THEN MAX(ofc.GL_EX_PROFIT)
						 WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B'  THEN MAX(ofc.GL_MISC_PROFIT)
				    END clr_gl_cd 
			       ,MAX(inv_dtl.INV_NO)				AS inv_no
			       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
			             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
			        END 							AS buy_inv_no
			        ,CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.doc_ref_no)
			       		ELSE CASE WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.REF_NO)
			             		WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.REF_NO)					
							 END
						END 	AS ref_no
				   , CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.MBL_NO)
				   		ELSE     
			       			MAX(CASE WHEN bl.intg_bl_seq is not null THEN bl.bl_no ELSE oth.mbl_no END)	
			       		END	AS bl_no
			       ,MAX(inv_dtl.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
			       ,MAX(inv_dtl.INV_APLY_XCRT)		AS inv_aply_xcrt
			       
			       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.INV_SUM_AMT) * -1
			             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.INV_SUM_AMT) 
			        END								AS inv_sum_amt	
				   
				   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
			             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
			        END								AS bal_sum_amt
	
			       ,MAX(inv_dtl.inv_seq)			AS inv_seq
			       ,MAX(inv_mst.trdp_cd)			AS trdp_cd
				   ,MAX(trdp.eng_nm)				AS trdp_nm
			       ,CASE WHEN isnull(MAX(inv_dtl.BAL_AMT),0) = 0 THEN '1'
			             ELSE '0'
			        END 							AS clr_flag
			       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
			       
					<!-- #21662 : [BINEX]Deposit, Payment -->
					,MAX(jnr_dtl.INP_TYPE)			as INP_TYPE
					,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
					,MAX(inv_dtl.modi_tms) AS modi_tms
					
			       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
				   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
				   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
				   ,CASE WHEN MAX(inv_mst.AIR_SEA_CLSS_CD) = 'G' AND (SELECT ISNULL(OPT_VAL, '') FROM TB_SYS_OPT WHERE OPT_KEY = 'BANK_GNA_RMK') = 'Y'
					     THEN MAX(inv_mst.INV_RMK)
					     ELSE ''
					 END AS jnr_desc  
			  FROM TB_INV inv_mst
			    LEFT OUTER JOIN TB_INV_DTL inv_dtl 
			     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
			    LEFT JOIN TB_FRT frt 
			     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
				LEFT JOIN TB_INTG_BL bl
			     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
				LEFT JOIN TB_OTH_SALES oth
			     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
			    LEFT JOIN TB_WM_DOC_MST wms
		   			ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N' 	
				LEFT JOIN TB_JNR_DTL jnr_dtl
			     	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ AND jnr_dtl.delt_flg = 'N'	
			    LEFT OUTER JOIN  TB_OFC ofc 
			        ON ofc.OFC_CD = inv_mst.OFC_CD AND ofc.delt_flg = 'N'
				LEFT OUTER JOIN TB_ADD_INFO_BND bnd
			     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
			    LEFT OUTER JOIN TB_TRDP trdp 	
			        ON trdp.trdp_cd = inv_mst.trdp_cd 	
			        
			 WHERE  isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
			   AND inv_mst.DELT_FLG = 'N'
			 
			 <isNotEmpty property="s_post_strdt">
			 	<isNotEmpty property="s_post_enddt">
			 		AND inv_dtl.INV_POST_DT between #s_post_strdt# AND #s_post_enddt#
			 	</isNotEmpty>
			 </isNotEmpty>
			 <isNotEmpty property="s_ofc_cd">
			   AND inv_mst.OFC_CD = #s_ofc_cd#
			 </isNotEmpty>
			   
			 <isNotEmpty property="s_cust_cd">
			   AND inv_mst.TRDP_CD = #s_cust_cd#
			 </isNotEmpty>  
			 <isNotEmpty property="s_cust_nm">
			    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
			                WHERE trd.TRDP_CD = inv_mst.TRDP_CD AND trd.ENG_NM LIKE #s_cust_nm# + '%')
			 </isNotEmpty>
			 <isNotEmpty property="f_curr_cd">
			   AND frt.inv_curr_cd = #f_curr_cd#
			 </isNotEmpty> 
			 <isEqual property="his_chk" compareValue="O">
			   AND inv_dtl.INV_STS_CD != 'IE'
			   AND inv_dtl.BAL_AMT != 0
			 </isEqual>
			   <isNotEmpty property="s_inv_no">
			       AND (
				           ( inv_mst.sell_buy_tp_cd = 'B'  AND inv_dtl.BUY_INV_NO = #s_inv_no#)
				           OR
				           ( inv_mst.sell_buy_tp_cd != 'B' AND inv_dtl.INV_NO = #s_inv_no#)
			       	   )
			   </isNotEmpty>
			   
			   <isEqual property="dept_chk1" compareValue="Y">
			       <isEqual property="dept_chk2" compareValue="Y">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
			       	   </isEqual>
			       </isEqual>
			       <isEqual property="dept_chk2" compareValue="N">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
			       	   </isEqual>
			       </isEqual>	    		
			   </isEqual>
			   
			   <isEqual property="dept_chk1" compareValue="N">
			       <isEqual property="dept_chk2" compareValue="Y">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
			       	   </isEqual>
			       </isEqual>
			       <isEqual property="dept_chk2" compareValue="N">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('')
			       	   </isEqual>
			       </isEqual>	    		
			   </isEqual>
			 GROUP BY inv_mst.INV_SEQ) T 
	</select>
    
    
    <!-- 생성된 DEPOSIT JOURNAL InvoiceList 조회  -->
    <select id="searchINV_JNR_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
    	/* AccJorJournalSQL.xml > searchINV_JNR_LIST */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             ELSE MAX(inv_dtl.inv_sum_amt)
		        END								AS inv_sum_amt	
			   ,(CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END)	+
		        (CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END)								AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             ELSE MAX(jnr_dtl.ttl_pay_amt)
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END								AS old_pay_amt	
		          
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.RCVD_FM_NM)			AS rcvd_fm_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) as CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD

		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt

		       ,MAX(inv_dtl.modi_tms) AS modi_tms
		       
		       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
			   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
			   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
			   
			   ,max(jnr_mst.p_ofc_cd) as master_ofc_cd <!-- 201601 추가 -->	
			   
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
		        /*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
		    LEFT OUTER JOIN  TB_WM_DOC_MST wms         
            	ON frt.WMS_SEQ = wms.WM_DOC_SEQ 
            AND wms.delt_flg = 'N'     	
			LEFT OUTER JOIN TB_ADD_INFO_BND bnd
		     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		    	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>		 
		   AND jnr_mst.level = '1'
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
    <!-- 생성된 DEPOSIT JOURNAL InvoiceList 조회 MANAGE   -->
    <select id="searchINV_JNR_LIST_MNG" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchINV_JNR_LIST_MNG */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             ELSE MAX(inv_dtl.inv_sum_amt)
		        END								AS inv_sum_amt	
			   ,(CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		              WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		              ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END)	+ 
		        (CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		              WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		              ELSE MAX(jnr_dtl.pay_amt)
		        END)							AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             ELSE MAX(jnr_dtl.ttl_pay_amt)
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END								AS old_pay_amt	
		          
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.RCVD_FM_NM)			AS rcvd_fm_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(jnr_mst.level)				AS level
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE
		       
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD		 
		       
		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt		       

		       ,MAX(inv_dtl.modi_tms) AS modi_tms
		       
		       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
			   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
			   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
			   ,MAX(jnr_mst.ofc_blck_flg) AS ofc_blck_flg	<!-- 201601  추가. OFFICE 접근 권한 추가 -->
			   ,max(jnr_mst.p_ofc_cd) as master_ofc_cd     <!-- 201601  추가  -->         
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
            	/*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
			LEFT OUTER JOIN  TB_WM_DOC_MST wms         
            	ON frt.WMS_SEQ = wms.WM_DOC_SEQ 
			LEFT OUTER JOIN TB_ADD_INFO_BND bnd
		     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		    	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level IN ('1','2')
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
   
    
   
    
    <!-- 생성된 CHECK JOURNAL InvoiceList 조회  -->
    <select id="searchCHK_INV_JNR_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchCHK_INV_JNR_LIST */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) 
		             ELSE MAX(inv_dtl.inv_sum_amt) 
		        END								AS inv_sum_amt	
			   ,(CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END)	+ 
		        (CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END)						    AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS old_pay_amt
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.RCVD_FM_NM)			AS rcvd_fm_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.payto_cd)) AS payto_nm
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
		       
		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt
		       
		       ,MAX(inv_dtl.modi_tms) AS modi_tms
		       
		       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
			   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
			   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
			   ,MAX(isnull(jnr_mst.chk_pnt_yn, 'N'))  as chk_pnt_yn
			   ,MAX(jnr_mst.modi_tms) AS jnr_modi_tms  
        	   ,max(jnr_mst.p_ofc_cd) as master_ofc_cd             <!-- 201601  추가  -->        
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
            	/*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst          
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_WM_DOC_MST wms
	   			ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
			LEFT OUTER JOIN TB_ADD_INFO_BND bnd
		     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		    	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level = '1'
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
    
    
    
    <!-- 생성된 CHECK JOURNAL InvoiceList 조회 MANAGE  -->
    <select id="searchCHK_INV_JNR_LIST_MNG" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchCHK_INV_JNR_LIST_MNG */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) 
		             ELSE MAX(inv_dtl.inv_sum_amt) 
		        END								AS inv_sum_amt	
			   ,(CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END) + 
		        (CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END)							AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS old_pay_amt
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.payto_cd)) AS payto_nm
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(jnr_mst.level)				AS level
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE

		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
		       
		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt		       

		       ,MAX(inv_dtl.modi_tms) AS modi_tms
		       
		       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
			   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
			   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
			   ,MAX(isnull(jnr_mst.chk_pnt_yn, 'N'))  as chk_pnt_yn
			   ,MAX(jnr_mst.modi_tms) AS jnr_modi_tms
			   ,MAX(jnr_mst.ofc_blck_flg) AS ofc_blck_flg	<!-- 201601  추가  -->        
			   ,max(jnr_mst.p_ofc_cd) as master_ofc_cd              <!-- 201601  추가  -->        
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
            	/*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst          
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
	     	LEFT OUTER JOIN TB_WM_DOC_MST wms
	   			ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
			LEFT OUTER JOIN TB_ADD_INFO_BND bnd
		     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		    	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level IN ('1','2')
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
    
    
    <!-- 생성된 CHECK JOURNAL InvoiceList 조회  MANAGE2   -->
    <select id="searchCHK_INV_JNR_LIST_MNG2" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchCHK_INV_JNR_LIST_MNG2 */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) 
		             ELSE MAX(inv_dtl.inv_sum_amt) 
		        END								AS inv_sum_amt	
			   ,(CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END) +
		        (CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END)							AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS old_pay_amt
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.payto_cd)) AS payto_nm
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(jnr_mst.level)				AS level
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE

		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
		       
		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt			       

		       ,MAX(inv_dtl.modi_tms) AS modi_tms
		       
		       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
			   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
			   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
			   ,MAX(isnull(jnr_mst.chk_pnt_yn, 'N'))  as chk_pnt_yn
			   ,MAX(jnr_mst.modi_tms) AS jnr_modi_tms
			   ,MAX(jnr_mst.ofc_blck_flg) AS ofc_blck_flg	<!-- 201601  추가  -->        
			   ,max(jnr_mst.p_ofc_cd) as master_ofc_cd           <!-- 201601  추가  -->           
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
            	/*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst          
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ and frt.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ and bl.DELT_FLG = 'N'
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ and oth.DELT_FLG = 'N'
	     	LEFT OUTER JOIN TB_WM_DOC_MST wms
	   			ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
			LEFT OUTER JOIN TB_ADD_INFO_BND bnd
		     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		    	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level IN ('1','2','3')
		 GROUP BY jnr_dtl.JNR_SEQ
    </select>
    
    <!-- Journal Master PK생성   -->
    <select id="selectJNR_MST_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(jnr_no)+1, 1)
          FROM  tb_jnr_mst
    </select>
    
    
    <!-- Journal Detail PK생성   -->
    <select id="selectJNR_DTL_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(jnr_seq)+1, 1)
          FROM  tb_jnr_dtl
         WHERE  jnr_no = #jnr_no#
    </select>
    
    <!-- Journal Master 정보를 INSERT 한다.   -->
    <insert id="insertJournalMst" parameterClass="JournalVO">
    	INSERT INTO tb_jnr_mst(
			 jnr_no
			,jnr_tp
			,post_dt
			,trdp_cd
			,payto_cd
			,rcvd_fm_nm
			,bank_seq
			,clr_yn
			,clr_dt
			,void_yn
			,void_dt
			,chk_no
			,chk_pnt_yn
			,chk_pnt_dt
			,chk_pnt_usrid
			,amt
			,curr_cd
			,level
			,rmk
			,delt_flg
			,p_ofc_cd
			,rgst_usrid
			,rgst_ofc_cd
			,rgst_tms
			,modi_usrid
			,modi_ofc_cd
			,modi_tms
			,ofc_blck_flg
		)VALUES(
			 #jnr_no#
			,#jnr_tp#
			,#post_dt#
			,#trdp_cd#
			,#payto_cd#
			,#rcvd_fm_nm#
			,#bank_seq#
			,#clr_yn#
			,#clr_dt#
			,#void_yn#
			,#void_dt#
			,#chk_no#
			,#chk_pnt_yn#
			,#chk_pnt_dt#
			,#chk_pnt_usrid#
			,isnull(#amt#, 0)
			,#curr_cd#
			,#level#
			,#rmk#
			,'N'
			,#p_ofc_cd#
			,#proc_usrid#
			,#proc_ofccd#
			,getdate()
			,#proc_usrid#
			,#proc_ofccd#
			,GETUTCDATE()
			,#ofc_blck_flg#
		)
    </insert>
    
    
    <!-- Journal Detail 정보를 INSERT 한다.   -->
    <insert id="insertJournalDtl" parameterClass="InvJorVO">
    	INSERT INTO tb_jnr_dtl(
			 jnr_no
			,jnr_seq
			,inv_no
			,inv_seq
			,ofc_cd
			,post_dt
			,gl_no
			,ref_no
			,bl_no
			,jnr_desc
			,curr_cd
			,xcrt
			,pay_amt
			,ttl_pay_amt
			,inp_type
			,p_ofc_cd
			,delt_flg
			,rgst_usrid
			,rgst_ofc_cd
			,rgst_tms
			,modi_usrid
			,modi_ofc_cd
			,modi_tms
		)VALUES(
			 #jnr_no#
			,#jnr_seq#
			,#inv_no#
			,#inv_seq#
			,#ofc_cd#
			,#inv_post_dt#
			,#gl_no#
			,#ref_no#
			,#bl_no#
			,#jnr_desc#
			,#inv_aply_curr_cd#
			,#inv_aply_xcrt#
			,#pay_amt#
			,#ttl_pay_amt#
			,#inp_type#
			,#p_ofc_cd#
			,'N'
			,#proc_usrid#
			,#proc_ofccd#
			,getdate()
			,#proc_usrid#
			,#proc_ofccd#
			,GETUTCDATE()
		)
    
    
    </insert>
    
    <!-- JOURNAL MASTER UPDATE   -->
    <update id="updateJournalMst" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET post_dt 		= #post_dt#
    	      ,bank_seq 	= #bank_seq#
    	      ,clr_yn		= #clr_yn#
    	      ,clr_dt		= #clr_dt#
    	      ,void_yn		= #void_yn#
    	      ,void_dt		= #void_dt#
    	      ,chk_no		= #chk_no#
    	      ,amt			= isnull(#amt#, 0)
    	      ,curr_cd		= #curr_cd#
    	      ,rmk			= #rmk#
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	WHERE jnr_no = #jnr_no#
    </update>
    
    <!-- JOURNAL MASTER UPDATE   -->
    <!-- jsjang 2013.9.5 #20755  : [GPL]Deposit Journal Update Error modify -->
    <update id="updateJournalMst_Manage" parameterClass="JournalVO">
    	/* updateJournalMst_Manage */
    	UPDATE TB_JNR_MST
    	   SET post_dt 		= #post_dt#
    	   	  ,trdp_cd 	= #trdp_cd#
    	      ,bank_seq 	= #bank_seq#
    	      ,clr_yn		= #clr_yn#
    	      ,clr_dt		= #clr_dt#
    	      ,void_yn		= #void_yn#
    	      ,void_dt		= #void_dt#
    	      ,chk_no		= #chk_no#
    	      ,amt			= isnull(#amt#, 0)
    	      ,curr_cd		= #curr_cd#
    	      ,rmk			= #rmk#
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			 <isNotEmpty property="rcvd_fm_nm">
			 	<isNotEmpty property="rcvd_fm_nm">
			 		,rcvd_fm_nm   = #rcvd_fm_nm#
			 	</isNotEmpty>
			 </isNotEmpty>	
			 
			 <isNotEmpty property="payto_cd">
			 	<isNotEmpty property="payto_cd">
			 		,payto_cd   = #payto_cd#
			 	</isNotEmpty>
			 </isNotEmpty>	
			  ,modi_tms		= GETUTCDATE()
    	WHERE jnr_no = #jnr_no#
    </update>    
    
    
    <!-- JOURNAL MASTER UPDATE   -->
    <update id="updateJournalMst_Mng" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET post_dt 		= #post_dt#
    	      ,bank_seq 	= #bank_seq#
    	      ,clr_yn		= #clr_yn#
    	      ,clr_dt		= #clr_dt#
    	      ,void_yn		= #void_yn#
    	      ,void_dt		= #void_dt#
    	      ,chk_no		= #chk_no#
    	      ,amt			= isnull(#amt#, 0)
    	      ,curr_cd		= #curr_cd#
    	      ,rmk			= #rmk#
    	      ,level		= #level#
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	WHERE jnr_no = #jnr_no#
    </update>
    
    <!-- JOURNAL MASTER UPDATE   -->
    <!-- jsjang 2013.9.5 #20755  : [GPL]Deposit Journal Update Error modify -->
    <update id="updateJournalMst_Mng_Manage" parameterClass="JournalVO">
    	/* updateJournalMst_Mng_Manage */
    	UPDATE TB_JNR_MST
    	   SET post_dt 		= #post_dt#
    	      ,trdp_cd 	= #trdp_cd#
    	      ,bank_seq 	= #bank_seq#
    	      ,clr_yn		= #clr_yn#
    	      ,clr_dt		= #clr_dt#
    	      ,void_yn		= #void_yn#
    	      ,void_dt		= #void_dt#
    	      ,chk_no		= #chk_no#
    	      ,amt			= isnull(#amt#, 0)
    	      ,curr_cd		= #curr_cd#
    	      ,rmk			= #rmk#
    	      ,level		= #level#
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,ofc_blck_flg	= #ofc_blck_flg#
			 <isNotEmpty property="rcvd_fm_nm">
			 	<isNotEmpty property="rcvd_fm_nm">
			 		,rcvd_fm_nm   = #rcvd_fm_nm#
			 	</isNotEmpty>
			 </isNotEmpty>	
			 
			 <isNotEmpty property="payto_cd">
			 	<isNotEmpty property="payto_cd">
			 		,payto_cd   = #payto_cd#
			 	</isNotEmpty>
			 </isNotEmpty>	
			  ,modi_tms		= GETUTCDATE()
    	WHERE jnr_no = #jnr_no#
    </update>    
    
    <!-- Journal Detail 정보를 UPADTE 한다.   -->
    <update id="updateJournalDtl" parameterClass="InvJorVO">
    	UPDATE TB_JNR_DTL
    	   SET pay_amt		= #pay_amt#
			  ,ttl_pay_amt	= #ttl_pay_amt#
			  ,ref_no		= #ref_no#
			  ,ofc_cd		= #ofc_cd#
			  ,post_dt		= #inv_post_dt#
			  ,gl_no		= #gl_no#
			  ,jnr_desc		= #jnr_desc#
			  ,xcrt			= #inv_aply_xcrt#
			  ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
		 WHERE jnr_no = #jnr_no#
		   AND jnr_seq = #jnr_seq#
    </update>
    
    
    <!-- Journal Detail 정보를 DELETE 한다.   -->
    <update id="deleteJournalDtl_DEL" parameterClass="InvJorVO">
    	<!--  
    	DELETE FROM TB_JNR_DTL
		 WHERE jnr_no = #jnr_no#
		   AND jnr_seq = #jnr_seq#
		  -->
		UPDATE TB_JNR_DTL
		   SET DELT_FLG = 'Y'
		      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
		 WHERE jnr_no = #jnr_no#
		   AND jnr_seq = #jnr_seq# 
    </update>
    
    
    <!-- Journal Detail_ALL 정보를 DELETE 한다.   -->
    <update id="deleteJournalDtl_ALL" parameterClass="java.util.HashMap">
    	<!--  
    	DELETE FROM TB_JNR_DTL
		 WHERE jnr_no = #jnr_no#
		  -->
		UPDATE TB_JNR_DTL
		   SET DELT_FLG = 'Y' 
		      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
		 WHERE jnr_no = #jnr_no# 
    </update>
    
    
    <!-- 인보이스 별 G/L No 조회  -->
    <select id="searchINV_GLNO" parameterClass="java.util.HashMap" resultClass="String">
    	SELECT CASE WHEN #inv_tp# = 'A/R'  THEN GL_AR
		            WHEN #inv_tp# = 'A/P'    THEN GL_AP
					WHEN #inv_tp# = 'CREDIT' THEN GL_AGENT_AR
					WHEN #inv_tp# = 'DEBIT'  THEN GL_AGENT_AR
			   END GL_NO
		  FROM TB_OFC
		 WHERE OFC_CD = #inv_ofc_cd#
    </select>
    
    <!-- 인보이스 별 CLEAR G/L No 조회  -->
    <select id="searchINV_CLR_GLNO" parameterClass="java.util.HashMap" resultClass="String">
    	SELECT CASE WHEN #clr_gl# = 'EL' THEN GL_EX_LOSS
		            WHEN #clr_gl# = 'ML' THEN GL_MISC_LOSS
					WHEN #clr_gl# = 'EP' THEN GL_EX_PROFIT
					WHEN #clr_gl# = 'MP' THEN GL_MISC_PROFIT
			   END GL_NO
		  FROM TB_OFC
		 WHERE OFC_CD = #inv_ofc_cd#
    </select>
    
    
    
    <!-- Journal Detail 정보를 UPDATE 한다.   -->
    <update id="upateInvDtl" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) + #ttl_pay_amt#
		      ,PAY_FRGN_AMT = isnull(pay_frgn_amt,0) + #pay_frgn_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) - #ttl_pay_amt#
		      ,BAL_FRGN_AMT = isnull(bal_frgn_amt,0) - #bal_frgn_amt#
		      ,LAST_PAY_DT  = #post_dt#
		      ,LAST_CHK_NO  = #last_chk_no#
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    
    
    <!-- Journal Detail 정보를 UPDATE 한다.   -->
    <update id="deleteInvDtl_DEL" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,PAY_FRGN_AMT = isnull(pay_frgn_amt,0) - #pay_frgn_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		      ,BAL_FRGN_AMT = isnull(bal_frgn_amt,0) + #bal_frgn_amt#
		      ,LAST_PAY_DT  = null
		      ,LAST_CHK_NO  = null
			    ,modi_tms			= GETUTCDATE()
		 WHERE  inv_seq = #inv_seq#
    </update>
    
    
    <!-- Journal Detail 정보를 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateInvDtlVoidCheck" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,PAY_FRGN_AMT = isnull(pay_frgn_amt,0) - #pay_frgn_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		      ,BAL_FRGN_AMT = isnull(bal_frgn_amt,0) + #bal_frgn_amt#
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    
    <!-- Invoice Detail 정보를 UPDATE 한다. VOID CHECK 용 JOURNAL DELETE(부분삭제)  -->
    <update id="deleteInvDtlVoidCheck" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,PAY_FRGN_AMT = isnull(pay_frgn_amt,0) - #pay_frgn_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		      ,BAL_FRGN_AMT = isnull(bal_frgn_amt,0) + #bal_frgn_amt#
		      ,LAST_PAY_DT  = null
		      ,LAST_CHK_NO  = null
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    
    <!-- Journal Detail 정보를 UPDATE 한다. VOID CHECK 후 DELETE 함  -->
    <update id="upateInvDtlInvSts" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,LAST_PAY_DT  = null
		      ,LAST_CHK_NO  = null
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다.   -->
    <update id="upateTrdpCurLmtAmt" parameterClass="InvJorVO">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) - #cur_lmt_amt#
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateTrdpCurLmtAmtVoidCheck" parameterClass="InvJorVO">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) + #cur_lmt_amt#
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 ADD 한다.   -->
    <update id="upateTrdpCurLmtAmtAdd" parameterClass="InvJorVO">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) + #cur_lmt_amt#
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 DELETE 한다.   -->
    <update id="upateTrdpCurLmtAmtDelete" parameterClass="InvJorVO">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) - #cur_lmt_amt#
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    <!-- #  : cur_amt 로직 변경 / replication Error 처리    -->
    <update id="updateTrdpCurAmt" parameterClass="String" >
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = (
					    	SELECT SUM(ISNULL(D.BAL_AMT, 0)) AS CUR_AMT 
							  FROM TB_INV_DTL D 
							  LEFT OUTER JOIN TB_INV M ON D.INV_SEQ = M.INV_SEQ 
							   AND ISNULL(M.DELT_FLG, '') != 'Y' 
							 WHERE D.DELT_FLG = 'N' 
							   AND M.SELL_BUY_TP_CD IN ('S', 'D') 
							   AND M.DELT_FLG = 'N' 
							   AND M.TRDP_CD = #trdp_cd#
							)
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    <!-- JOURNAL DETAIL DELETE   -->
    <update id="deleteJournalDtl" parameterClass="java.util.HashMap">
    	UPDATE tb_jnr_dtl
    	   SET delt_flg = 'Y'
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE jnr_no = #jnr_no#
    </update>
    
    
    <!-- JOURNAL MASTER DELETE   -->
    <update id="deleteJournalMst" parameterClass="java.util.HashMap">
    	UPDATE tb_jnr_mst
    	   SET delt_flg = 'Y'
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE jnr_no = #jnr_no# 
    </update>
    
    
    
    <!-- Deposit Journal List 조회  -->
    <select id="searchJNR_LIST" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchJNR_LIST */
    	<!-- 
    	SELECT mst.post_dt
		      ,mst.rcvd_fm_nm
		      ,mst.chk_no
		      ,(SELECT bk.BANK_NM FROM TB_BANK bk WHERE mst.bank_seq = bk.bank_seq) AS bank_seq
		      ,mst.amt
		      ,mst.curr_cd
		      ,mst.clr_dt
		      ,mst.void_yn
		      ,mst.void_dt
		      ,mst.p_ofc_cd
		      ,mst.rgst_usrid
		      ,mst.jnr_no
		      ,mst.trdp_cd
		  FROM TB_JNR_MST mst
		 WHERE mst.DELT_FLG = 'N'
		   AND JNR_TP = 'D'
		   AND LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_nm">
		 	AND mst.RCVD_FM_NM LIKE '%' + #s_rcv_from_nm# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO = #s_chk_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
	  ORDER BY mst.post_dt desc, mst.jnr_no desc	
    	   -->
    	
    	SELECT MAX(mst.post_dt)		AS post_dt
		      ,MAX(mst.rcvd_fm_nm)	AS rcvd_fm_nm
		      ,MAX(mst.chk_no)		AS chk_no
		      ,(SELECT bk.BANK_NM FROM TB_BANK bk WHERE MAX(mst.bank_seq) = bk.bank_seq) AS bank_seq
		      ,MAX(mst.amt)			AS amt
		      ,MAX(mst.curr_cd)		AS curr_cd
		      ,MAX(mst.clr_yn)		AS clr_yn
		      ,MAX(mst.clr_dt)		AS clr_dt
		      ,MAX(mst.void_yn)		AS void_yn
		      ,MAX(mst.void_dt)		AS void_dt
		      ,MAX(mst.p_ofc_cd)	AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)	AS rgst_usrid
		      ,mst.jnr_no
		      ,MAX(mst.trdp_cd)		AS trdp_cd
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				    ELSE MAX(bl.bl_no)
			   END AS hbl_no
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				    ELSE MAX(mbl.bl_no) 		
			   END AS mbl_no
			  ,MAX(bl.ref_no)		AS ref_no
			  ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
			  ,MAX(mst.rmk) AS RMK	<!-- 20150709 추가. Deposit List remark 삽입 -->
			  ,MAX(oth.REF_NO) AS oth_ref_no <!-- 52071 [You First Express] Other Filing No. 추가 on Payment/Deposit List -->   
			FROM TB_JNR_MST mst
		LEFT JOIN TB_JNR_DTL dtl 
			ON mst.JNR_NO = dtl.JNR_NO	
		LEFT JOIN TB_INV_DTL inv_dtl 
			ON inv_dtl.INV_SEQ = dtl.INV_SEQ AND inv_dtl.DELT_FLG = 'N' 	
		LEFT JOIN TB_FRT frt 
			ON frt.INV_SEQ = inv_dtl.INV_SEQ AND frt.DELT_FLG = 'N'  
		LEFT JOIN TB_INTG_BL bl 
			ON bl.INTG_BL_SEQ = frt.INTG_BL_SEQ AND bl.DELT_FLG = 'N'
		LEFT JOIN TB_OTH_SALES oth 
			ON oth.OTH_SEQ = frt.OTH_SEQ AND oth.DELT_FLG = 'N'	
		LEFT JOIN tb_intg_bl_rlt rlt
			ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT JOIN tb_intg_bl mbl
		    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
		LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
			ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   AND isnull(dtl.DELT_FLG,'N') = 'N'
		   AND JNR_TP = 'D'
		   AND LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_cd">
		 	AND mst.TRDP_CD = #s_rcv_from_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_nm">
		    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
		                WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE #s_rcv_from_nm# + '%')
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_oth_ref_no">
		 	AND oth.REF_NO LIKE '%' + #s_oth_ref_no# + '%'
		 </isNotEmpty>		 
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_void_yn">
			AND mst.void_yn = #s_void_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_void_strdt">
		 	<isNotEmpty property="s_void_enddt">
		 		AND mst.void_dt between #s_void_strdt# AND #s_void_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_hbl_no">
			AND (CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
				    ELSE bl.bl_no
			   END) = #s_hbl_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_mbl_no">
			AND (CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
				    ELSE mbl.bl_no 		
			   END) = #s_mbl_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_issued_by">
			AND mst.rgst_usrid = #s_issued_by#
		 </isNotEmpty>
	  GROUP BY mst.jnr_no
	  ORDER BY MAX(mst.modi_tms) desc, MAX(mst.post_dt) desc, mst.jnr_no desc
    </select>
    
    
    
    
    
    <!-- Deposit Journal List 조회 MANAGE  -->
    <select id="searchJNR_LIST_MNG" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchJNR_LIST_MNG */
    	SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,(SELECT bk.BANK_NM FROM TB_BANK bk WHERE MAX(mst.bank_seq) = bk.bank_seq) AS bank_seq
		      ,MAX(mst.amt)				AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_yn)			AS clr_yn
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,mst.jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,CASE WHEN MAX(mst.level) IN ('2','3') THEN 'Y'
		      	    WHEN MAX(mst.level) = '1' THEN 'N'
		       END AS block
		      <!-- ZOOT::TODO 215-01-08
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				    ELSE MAX(bl.bl_no)
			   END AS hbl_no
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				    ELSE MAX(mbl.bl_no) 		
			   END AS mbl_no
			  ,MAX(bl.ref_no)		AS ref_no -->
		      ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		      ,MAX(mst.rmk) AS RMK	<!-- 20150709 추가. Deposit Lv2 List remark 삽입 -->
		      ,MAX(mst.ofc_blck_flg) AS OFC_BLCK_FLG	<!-- 201601  추가. OFFICE 접근 권한 추가 -->
		      ,MAX(mst.level) AS LEVEL_VALUE	<!-- 201601  추가. OFFICE 접근 권한 추가 -->
		  FROM TB_JNR_MST mst
		LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		  	ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		<!-- ZOOT::TODO 215-01-08
		LEFT JOIN TB_JNR_DTL dtl 
			ON mst.JNR_NO = dtl.JNR_NO	
		LEFT JOIN TB_INV_DTL inv_dtl 
			ON inv_dtl.INV_SEQ = dtl.INV_SEQ AND inv_dtl.DELT_FLG = 'N' 	
		LEFT JOIN TB_FRT frt 
			ON frt.INV_SEQ = inv_dtl.INV_SEQ AND frt.DELT_FLG = 'N'  
		LEFT JOIN TB_INTG_BL bl 
			ON bl.INTG_BL_SEQ = frt.INTG_BL_SEQ AND bl.DELT_FLG = 'N'
		LEFT JOIN tb_intg_bl_rlt rlt
			ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT JOIN tb_intg_bl mbl
		    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N' -->
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   <!-- ZOOT::TODO 215-01-08
		   AND isnull(dtl.DELT_FLG,'N') = 'N' -->
		   AND JNR_TP = 'D'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_cd">
		 	AND mst.TRDP_CD = #s_rcv_from_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_nm">
		    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
		                WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE #s_rcv_from_nm# + '%')
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_void_yn">
			AND mst.void_yn = #s_void_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_void_strdt">
		 	<isNotEmpty property="s_void_enddt">
		 		AND mst.void_dt between #s_void_strdt# AND #s_void_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_block_yn">
		 	<isEqual property="s_block_yn" compareValue="Y">
		 		AND mst.level = '2'
		 	</isEqual>
		 	<isEqual property="s_block_yn" compareValue="N">
		 		AND mst.level = '1'
		 	</isEqual>
		 </isNotEmpty>
		 <isEmpty property="s_block_yn">
			 AND LEVEL  IN('1','2')
		 </isEmpty>
		 <isNotEmpty property="s_issued_by">
			AND mst.rgst_usrid = #s_issued_by#
		 </isNotEmpty>
	  GROUP BY mst.jnr_no
	  ORDER BY MAX(mst.modi_tms) desc, MAX(mst.post_dt) desc, mst.jnr_no desc
    </select>
    
    
    
    <!-- Check Journal List 조회  -->
    <select id="searchCHK_JNR_LIST" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchCHK_JNR_LIST */
    	<!--  
    	SELECT mst.post_dt
		      ,mst.rcvd_fm_nm
		      ,mst.chk_no
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = mst.trdp_cd and delt_flg = 'N') AS trdp_cd
		      ,(SELECT bk.BANK_NM FROM TB_BANK bk WHERE mst.bank_seq = bk.bank_seq) AS bank_nm
		      ,mst.amt
		      ,mst.curr_cd
		      ,mst.clr_dt
		      ,mst.void_yn
		      ,mst.void_dt
		      ,mst.chk_pnt_yn
		      ,mst.p_ofc_cd
		      ,mst.rgst_usrid
		      ,mst.jnr_no
		      ,mst.trdp_cd
		  FROM TB_JNR_MST mst
		 WHERE mst.DELT_FLG = 'N'
		   AND JNR_TP = 'C'
		   AND LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO = #s_chk_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
	  ORDER BY mst.post_dt desc, mst.jnr_no desc
	    -->
	  
	  <!--  
	  SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd) and delt_flg = 'N') AS trdp_cd
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(mst.chk_pnt_yn)		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		  FROM TB_JNR_MST mst
	LEFT JOIN  (SELECT jnr_dtl.jnr_no
	                  ,CASE WHEN inv_mst.sell_buy_tp_cd in ('S','D') THEN ttl_pay_amt * -1 
	                        WHEN inv_mst.sell_buy_tp_cd in ('B','C') THEN ttl_pay_amt
	                        ELSE ttl_pay_amt
	                   END ttl_pay_amt
	              FROM TB_JNR_DTL jnr_dtl
			LEFT JOIN  TB_INV_DTL inv_dtl ON jnr_dtl.inv_no  = inv_dtl.INV_NO
			LEFT JOIN  TB_INV     inv_mst ON inv_dtl.INV_SEQ = inv_mst.inv_seq
			   ) dtl ON mst.JNR_NO = dtl.JNR_NO
		 WHERE mst.DELT_FLG = 'N'
		   AND mst.JNR_TP = 'C'
		   AND mst.LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO = #s_chk_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
	  GROUP BY mst.JNR_NO
	  ORDER BY post_dt desc, jnr_no desc
	   -->
	 
	 
	 
	 <!-- 
	 SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd) and delt_flg = 'N') AS trdp_nm
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(mst.chk_pnt_yn)		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select COUNT(x.jnr_no)	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS dtl_cnt
		      ,(select CASE WHEN COUNT(x.jnr_no) > 15 THEN 'Y' ELSE 'N' END	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS rider_yn
		  FROM TB_JNR_MST mst
	LEFT JOIN  TB_JNR_DTL dtl ON mst.JNR_NO = dtl.JNR_NO
		 WHERE mst.DELT_FLG = 'N'
		   AND mst.JNR_TP = 'C'
		   AND mst.LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO = #s_chk_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
	  GROUP BY mst.JNR_NO
	  ORDER BY post_dt desc, jnr_no desc
	    -->
	 
		SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd)) AS trdp_nm
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_yn)			AS clr_yn
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(isnull(mst.chk_pnt_yn, 'N'))		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select COUNT(x.jnr_no)	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS dtl_cnt
		      ,(select CASE WHEN COUNT(x.jnr_no) > 12 THEN 'Y' ELSE 'N' END	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS rider_yn
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				    ELSE MAX(bl.bl_no)
			   END AS hbl_no
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				    ELSE MAX(mbl.bl_no) 		
			   END AS mbl_no
			  ,MAX(bl.ref_no)			AS ref_no 
			  ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
			  ,MAX(mst.rmk) AS RMK	<!-- 20150709 추가. payment list remark 삽입 -->   
			  ,MAX(oth.REF_NO) AS oth_ref_no <!-- 52071 [You First Express] Other Filing No. 추가 on Payment/Deposit List -->   
		  FROM TB_JNR_MST mst
	LEFT JOIN  TB_JNR_DTL dtl 
		ON mst.JNR_NO = dtl.JNR_NO
	LEFT JOIN TB_INV_DTL inv_dtl 
		ON inv_dtl.INV_SEQ = dtl.INV_SEQ AND inv_dtl.DELT_FLG = 'N' 	
	LEFT JOIN TB_FRT frt 
		ON frt.INV_SEQ = inv_dtl.INV_SEQ AND frt.DELT_FLG = 'N'  
	LEFT JOIN TB_INTG_BL bl 
		ON bl.INTG_BL_SEQ = frt.INTG_BL_SEQ AND bl.DELT_FLG = 'N'
	LEFT JOIN TB_OTH_SALES oth 
		ON oth.OTH_SEQ = frt.OTH_SEQ AND oth.DELT_FLG = 'N'	
	LEFT JOIN tb_intg_bl_rlt rlt
		ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
	LEFT JOIN tb_intg_bl mbl
	    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
	LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   AND isnull(dtl.DELT_FLG,'N') = 'N'
		   AND mst.JNR_TP = 'C'
		   AND mst.LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_nm">
		    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
		                WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE #s_vendor_nm# + '%')
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_oth_ref_no">
		 	AND oth.REF_NO LIKE '%' + #s_oth_ref_no# + '%'
		 </isNotEmpty>			 
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_void_yn">
			AND mst.void_yn = #s_void_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_void_strdt">
		 	<isNotEmpty property="s_void_enddt">
		 		AND mst.void_dt between #s_void_strdt# AND #s_void_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_hbl_no">
			AND (CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
				    ELSE bl.bl_no
			   END) = #s_hbl_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_mbl_no">
			AND (CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
				    ELSE mbl.bl_no 		
			   END) = #s_mbl_no#
		 </isNotEmpty>
		 <isNotEmpty property="s_print_yn">
			AND isnull(mst.chk_pnt_yn, 'N') = #s_print_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_issued_by">
			AND mst.rgst_usrid = #s_issued_by#
		 </isNotEmpty>
	  GROUP BY mst.JNR_NO
	  ORDER BY MAX(mst.modi_tms) desc, post_dt desc, jnr_no desc
	   
    </select>
    
    
    
    
    
    
    <!-- Check Journal List 조회 MANAGE  -->
    <select id="searchCHK_JNR_LIST_MNG" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchCHK_JNR_LIST_MNG */
		SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd)) AS trdp_nm
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_yn)			AS clr_yn
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(isnull(mst.chk_pnt_yn, 'N'))		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,CASE WHEN MAX(mst.level) IN ('2','3') THEN 'Y'
		      	    WHEN MAX(mst.level) = '1' THEN 'N'
		       END 						AS block
			  ,(select COUNT(x.jnr_no)	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS dtl_cnt
		      ,(select CASE WHEN COUNT(x.jnr_no) > 12 THEN 'Y' ELSE 'N' END	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS rider_yn		
		      <!-- ZOOT::TODO 215-01-08
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				    ELSE MAX(bl.bl_no)
			   END AS hbl_no
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				    ELSE MAX(mbl.bl_no) 		
			   END AS mbl_no
			  ,MAX(bl.ref_no)			AS ref_no -->
		      ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		      ,MAX(mst.rmk) AS RMK	<!-- 20150709 추가. payment LV2 list remark 삽입 -->  
		      ,MAX(mst.ofc_blck_flg) AS OFC_BLCK_FLG	<!-- 201601  추가. OFFICE 접근 권한 추가 -->
		      ,MAX(mst.level) AS LEVEL_VALUE	<!-- 201601  추가. OFFICE 접근 권한 추가 --> 
		  FROM TB_JNR_MST mst
		LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		  	ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		  <!-- ZOOT::TODO 215-01-08
		LEFT JOIN TB_JNR_DTL dtl 
			ON mst.JNR_NO = dtl.JNR_NO	
		LEFT JOIN TB_INV_DTL inv_dtl 
			ON inv_dtl.INV_SEQ = dtl.INV_SEQ AND inv_dtl.DELT_FLG = 'N' 	
		LEFT JOIN TB_FRT frt 
			ON frt.INV_SEQ = inv_dtl.INV_SEQ AND frt.DELT_FLG = 'N'  
		LEFT JOIN TB_INTG_BL bl 
			ON bl.INTG_BL_SEQ = frt.INTG_BL_SEQ AND bl.DELT_FLG = 'N'
		LEFT JOIN tb_intg_bl_rlt rlt
			ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT JOIN tb_intg_bl mbl
		    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N' -->
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   <!-- ZOOT::TODO 215-01-08
		   AND isnull(dtl.DELT_FLG,'N') = 'N' -->
		   AND mst.JNR_TP = 'C'
		   AND mst.LEVEL  IN ('1','2')
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_nm">
		    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
		                WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.ENG_NM LIKE #s_vendor_nm# + '%')
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 
		 <isNotEmpty property="s_vendor_nm">
		    AND EXISTS(SELECT 'x' FROM tb_trdp trd 
		                WHERE  trd.trdp_cd = mst.trdp_cd AND trd.eng_nm LIKE #s_vendor_nm#+'%' ) 
		 </isNotEmpty>
		 
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_void_yn">
			AND mst.void_yn = #s_void_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_void_strdt">
		 	<isNotEmpty property="s_void_enddt">
		 		AND mst.void_dt between #s_void_strdt# AND #s_void_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_print_yn">
				AND isnull(mst.chk_pnt_yn, 'N') = #s_print_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_block_yn">
		 	<isEqual property="s_block_yn" compareValue="Y">
		 		AND mst.LEVEL  = '2'
		 	</isEqual>
		 	<isEqual property="s_block_yn" compareValue="N">
		 		AND mst.level = '1'
		 	</isEqual>
		 </isNotEmpty>
		 <isEmpty property="s_block_yn">
			 AND mst.LEVEL  IN ('1','2')
		 </isEmpty>
		 <isNotEmpty property="s_issued_by">
			AND mst.rgst_usrid = #s_issued_by#
		 </isNotEmpty>
	  GROUP BY mst.JNR_NO
	  ORDER BY MAX(mst.modi_tms) desc, post_dt desc, jnr_no desc
	   
    </select>
    
    
    
    <!-- Check Journal List 조회  MANAGE2   -->
    <select id="searchCHK_JNR_LIST_MNG2" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchCHK_JNR_LIST_MNG2 */
		SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd)) AS trdp_nm
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_yn)			AS clr_yn
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(isnull(mst.chk_pnt_yn, 'N'))		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,CASE WHEN MAX(mst.level) IN ('2','3') THEN 'Y'
		      	    WHEN MAX(mst.level) = '1' THEN 'N'
		       END 						AS block
		      ,(select COUNT(x.jnr_no)	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS dtl_cnt
		      ,(select CASE WHEN COUNT(x.jnr_no) > 12 THEN 'Y' ELSE 'N' END	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS rider_yn
		      <!-- ZOOT::TODO 215-01-08
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				    ELSE MAX(bl.bl_no)
			   END AS hbl_no
		      ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				    ELSE MAX(mbl.bl_no) 		
			   END AS mbl_no
			  ,MAX(bl.ref_no)			AS ref_no  -->
		      ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		      ,MAX(mst.rmk) AS RMK	<!-- 20150709 추가. payment LV3 list remark 삽입 -->
		      ,MAX(mst.ofc_blck_flg) AS OFC_BLCK_FLG	<!-- 201601  추가. OFFICE 접근 권한 추가 -->
		      ,MAX(mst.level) AS LEVEL_VALUE	<!-- 201601  추가. OFFICE 접근 권한 추가 --> 
		  FROM TB_JNR_MST mst
		LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
			ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		<!-- ZOOT::TODO 215-01-08
		LEFT JOIN TB_JNR_DTL dtl 
			ON mst.JNR_NO = dtl.JNR_NO	
		LEFT JOIN TB_INV_DTL inv_dtl 
			ON inv_dtl.INV_SEQ = dtl.INV_SEQ AND inv_dtl.DELT_FLG = 'N' 	
		LEFT JOIN TB_FRT frt 
			ON frt.INV_SEQ = inv_dtl.INV_SEQ AND frt.DELT_FLG = 'N'  
		LEFT JOIN TB_INTG_BL bl 
			ON bl.INTG_BL_SEQ = frt.INTG_BL_SEQ AND bl.DELT_FLG = 'N'
		LEFT JOIN tb_intg_bl_rlt rlt
			ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT JOIN tb_intg_bl mbl
		    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'-->
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   <!--ZOOT::TODO 215-01-08
		   AND isnull(dtl.DELT_FLG,'N') = 'N' -->
		   AND mst.JNR_TP = 'C'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 
		 <isNotEmpty property="s_vendor_nm">
		    AND EXISTS(SELECT 'x' FROM tb_trdp trd 
		                WHERE  trd.trdp_cd = mst.trdp_cd AND trd.eng_nm LIKE #s_vendor_nm#+'%' ) 
		 </isNotEmpty>
		 
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_amt_fr">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEmpty>
		 <isNotEmpty property="s_void_yn">
			AND mst.void_yn = #s_void_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_void_strdt">
		 	<isNotEmpty property="s_void_enddt">
		 		AND mst.void_dt between #s_void_strdt# AND #s_void_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_print_yn">
				AND isnull(mst.chk_pnt_yn, 'N') = #s_print_yn#
		 </isNotEmpty>
		 <isNotEmpty property="s_block_yn">
		 	<isEqual property="s_block_yn" compareValue="Y">
		 		AND mst.LEVEL  IN ('2','3')
		 	</isEqual>
		 	<isEqual property="s_block_yn" compareValue="N">
		 		AND mst.level = '1'
		 	</isEqual>
		 </isNotEmpty>
		 <isEmpty property="s_block_yn">
			 AND mst.LEVEL  IN ('1','2','3')
		 </isEmpty>
		 <isNotEmpty property="s_issued_by">
			AND mst.rgst_usrid = #s_issued_by#
		 </isNotEmpty>
	  GROUP BY mst.JNR_NO
	  ORDER BY MAX(mst.modi_tms) desc, post_dt desc, jnr_no desc
	   
    </select>
    
    
    <!-- JOURNAL MST POST DATE UPDATE  -->
    <update id="updateJNR_POSTDATE" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET POST_DT = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE JNR_NO = #jnr_no#
    </update>
    
    <!-- JOURNAL DTL POST DATE UPDATE  -->
    <update id="updateJNR_DTL_POSTDATE" parameterClass="JournalVO">
    	UPDATE TB_JNR_DTL
    	   SET POST_DT = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE JNR_NO = #jnr_no#
    	    AND LTRIM(INV_SEQ) =''
    </update>
    
    
    <!-- GENERAL JOURNAL POST DATE UPDATE  -->
    <update id="updateGNR_JNR_POSTDATE" parameterClass="GeneralVO">
    	UPDATE TB_SLIP_MST
    	   SET POST_DT = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE SLIP_NO = #slip_no#
    </update>
    
    <!-- Journal Master Info 조회  -->
    <select id="searchJNR_MST_INFO" parameterClass="java.util.HashMap" resultClass="JournalVO">
    	SELECT  jnr.jnr_no
    		   ,isnull(jnr.void_yn,'N') as void_yn	
    	  FROM TB_JNR_MST jnr
    	 WHERE jnr.JNR_NO = #jnr_no#
    	   AND isnull(jnr.DELT_FLG,'N') = 'N'
    </select>
    
    <!-- Journal Detail List 조회  -->
    <select id="searchJNR_DTL_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
    	SELECT  jnr_dtl.inv_no
    		   ,jnr_dtl.pay_amt	
    	 	   ,jnr_dtl.ttl_pay_amt
    	 	   ,jnr_dtl.curr_cd
    	 	   ,inv_mst.inv_seq
    	 	   ,inv_mst.sell_buy_tp_cd
    	  FROM TB_JNR_DTL jnr_dtl
	      JOIN TB_INV_DTL inv_dtl ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
	      JOIN TB_INV inv_mst     ON inv_dtl.INV_SEQ = inv_mst.INV_SEQ
    	 WHERE jnr_dtl.JNR_NO = #jnr_no#
    	   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
    </select>
    
    
    
    <!-- Journal Detail 정보를 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateInvDtlJnrDelete" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,PAY_FRGN_AMT = isnull(pay_frgn_amt,0) - #pay_frgn_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		      ,BAL_FRGN_AMT = isnull(bal_frgn_amt,0) + #bal_frgn_amt#
			    ,modi_tms			= GETUTCDATE()
		 WHERE INV_NO = #inv_no#  
		   <isNotEmpty property="inv_seq">
		   	   AND inv_seq = #inv_seq#
		   </isNotEmpty>
    </update>
    
    
    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다.  -->
    <update id="upateTrdpCurLmtAmtJnrDelete" parameterClass="InvJorVO">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) + #cur_lmt_amt#
    	 WHERE TRDP_CD = #trdp_cd#
    </update>
    
    
    
    <!-- Check Journal Print 정보를 UPDATE 한다.  -->
    <update id="updateChkPntDt" parameterClass="java.util.HashMap">
   		UPDATE TB_JNR_MST
   		   SET CHK_PNT_YN = 'Y'
   		      ,CHK_PNT_DT = convert(varchar(8), getdate(), 112)
   		      ,CHK_PNT_USRID = #proc_usrid#
   		      <isEqual property="f_list_yn" compareValue="Y">
   		      ,MODI_TMS = GETUTCDATE()
   		      </isEqual>
   		 WHERE JNR_NO = #f_jnr_no#   		     
    </update>
    
    <select id="searchJnrModiTms" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchJnrModiTms  */
		SELECT MAX(MODI_TMS) AS MODI_TMS
		FROM (
			SELECT MODI_TMS
			  FROM TB_JNR_MST
			 WHERE JNR_NO = #jnr_no#
		) INVAL
    </select>
    
    <!-- GL_NO 로  BANK INFO 조회  -->
    <select id="searchGlBankInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	
    	SELECT gl.gl_cd 
		      ,gl.rmk
		  FROM TB_GL_CD gl
		 WHERE USE_FLG = 'Y'
		   AND gl_cd = #gl_no#
		   <isNull property="block_all_yn">
		    <isNotNull property="usrid">
		   AND (BLOCK_YN = 'N' OR BLOCK_YN = (SELECT
			  ISNULL(MAX(A.USE_FLG), 'N') AS AUTH_BLOCK
			 FROM TB_ROLE_FNC A, TB_USR B
			 WHERE A.ROLE_CD = B.ROLE_CD
			 AND ROLE_FNC_CD = 'G01' 
			 AND B.USRID  = #usrid#))
			 </isNotNull>
			</isNull>
		<!--  
		SELECT   bank_seq
    			,bank_nm
    			,gl_cd
    	  FROM TB_BANK
    	 WHERE GL_CD = #gl_no#
    	   -->
    </select>
    
    
    <!-- BANK_NAME으로 BANK_SEQ 조회  -->
    <select id="searchBankNm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	SELECT   bank_seq
    			,bank_nm
    	  FROM TB_BANK
    	 WHERE bank_nm = #com_nm#
    </select>
    
    <!-- GL 정보로 BANK INFO 조회  -->
    <select id="searchBankInfoByGL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   bank.bank_seq
    			,bank.bank_nm
    			,bank.gl_cd
    			,gl.rmk
    	  FROM tb_bank bank
    	       LEFT OUTER JOIN tb_gl_cd gl ON gl.gl_cd = bank.gl_cd
    	 WHERE bank.use_flg = 'Y' 
    	   <isNotNull property="usrid">
		   AND (gl.BLOCK_YN = 'N' OR gl.BLOCK_YN = (SELECT
			  ISNULL(MAX(A.USE_FLG), 'N') AS AUTH_BLOCK
			 FROM TB_ROLE_FNC A, TB_USR B
			 WHERE A.ROLE_CD = B.ROLE_CD
			 AND ROLE_FNC_CD = 'G01' 
			 AND B.USRID  = #usrid#))
			</isNotNull>
    	 <dynamic>
    	 	<isNotNull property="gl_no">
    	 		AND bank.gl_cd = #gl_no#
    	 	</isNotNull>
    	 	<isNotNull property="bank_nm">
    	 		AND bank.bank_nm = #bank_nm#
    	 	</isNotNull>
    	 	<isNotNull property="bank_seq">
    	 		AND bank.bank_seq = #bank_seq#
    	 	</isNotNull>
    	 	<isNotNull property="gl_rmk">
    	 		AND gl.rmk = #gl_rmk#
    	 	</isNotNull>
    	 </dynamic>
    </select>
    
    <!-- GL_NO 으로 GL_RMK 를 검색한다.  -->
    <select id="getGlInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT gl_cd
	,rmk
	FROM tb_gl_cd
	WHERE use_flg = 'Y'
		<isNotNull property="usrid">
			AND (BLOCK_YN = 'N' OR BLOCK_YN = (SELECT
			ISNULL(MAX(A.USE_FLG), 'N') AS AUTH_BLOCK
			FROM TB_ROLE_FNC A, TB_USR B
			WHERE A.ROLE_CD = B.ROLE_CD
			AND ROLE_FNC_CD = 'G01'
			AND B.USRID = #usrid#))
		</isNotNull>
         
         <dynamic>
    	 	<isNotNull property="gl_no">
    	 		AND gl_cd = #gl_no#
    	 	</isNotNull>
    	 	<isNotNull property="gl_rmk">
    	 		AND rmk = #gl_rmk#
    	 	</isNotNull>
    	 </dynamic>
    </select>
    
    
    <!-- CUST_NAME으로 CUST_CD 조회  -->
    <select id="searchCustNm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	SELECT   trdp_cd
    			,eng_nm
    	  FROM TB_TRDP
    	 WHERE eng_nm = #com_nm#
    </select>
    
    
    
    <!-- GL_NO 으로 GL_RMK 를 검색한다.  -->
    <select id="getGlRmk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	SELECT  gl_cd
       		   ,rmk
          FROM TB_GL_CD
         WHERE GL_CD   = #s_gl_no#
           AND USE_FLG = 'Y' 
		<isNotNull property="usrid">
			AND (BLOCK_YN = 'N' OR BLOCK_YN = (SELECT
			ISNULL(MAX(A.USE_FLG), 'N') AS AUTH_BLOCK
			FROM TB_ROLE_FNC A, TB_USR B
			WHERE A.ROLE_CD = B.ROLE_CD
			AND ROLE_FNC_CD = 'G01'
			AND B.USRID = #usrid#))
		</isNotNull>
		<isEqual property="jnr_tp" compareValue="P">
	 	    AND gl_pay_flg = 'Y'
	    </isEqual>
	    <isEqual property="jnr_tp" compareValue="D">
	 	    AND gl_dept_flg = 'Y'
	    </isEqual>
    </select>
    
    
    
    <!-- General Master PK생성   -->
    <select id="selectSLIP_MST_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(slip_no)+1, 1)
          FROM  tb_slip_mst
    </select>
    
    
    <!-- General Master DT_SEQ   -->
    <select id="selectSLIP_DT_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(dt_seq)+1, 1)
          FROM  tb_slip_mst
         WHERE  post_dt = #post_dt#
    </select>
    
    
    <!-- General Detaile PK생성   -->
    <select id="selectSLIP_DTL_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(slip_seq)+1, 1)
          FROM  tb_slip_dtl
    </select>
    
    
    
    <!-- General Master 정보를 INSERT 한다.   -->
    <insert id="insertGeneralMst" parameterClass="GeneralVO">
    	INSERT INTO TB_SLIP_MST(
			 slip_no
			,slip_tp
			,slip_2nd_tp
			,ref_no
			,post_dt
			,reserve_field01
			,dt_seq
			,g_debit
			,g_credit
			,curr_cd
			,rmk
			,delt_flg
			,p_ofc_cd
			,rgst_usrid
			,rgst_ofc_cd
			,rgst_tms
			,modi_usrid
			,modi_ofc_cd
			,modi_tms
		)VALUES(
			 #slip_no#
			,#slip_tp#
			,#slip_2nd_tp#
			,#ref_no#
			,#post_dt#
			,#post_dt#
			,#dt_seq#
			,#g_debit#
			,#g_credit#
			,#curr_cd#
			,#rmk#
			,'N'
			,#p_ofc_cd#
			,#proc_usrid#
			,#proc_ofccd#
			,getdate()
			,#proc_usrid#
			,#proc_ofccd#
			,GETUTCDATE()
		)
    </insert>
    
    
    <!-- General Detail 정보를 INSERT 한다.   -->
    <insert id="insertGeneralDtl" parameterClass="GeneralVO">
    	INSERT INTO TB_SLIP_DTL(
			 slip_no
			,slip_seq
			,gl_no
			,com_tp
			,com_cd
			,com_nm
			,gl_sub
			,debit
			,credit
			,curr_cd
			,xcrt
			,ttl_debit
			,ttl_credit
			,slip_desc
			,p_ofc_cd
			,rgst_usrid
			,rgst_ofc_cd
			,rgst_tms
			,modi_usrid
			,modi_ofc_cd
			,modi_tms
		)VALUES(
			 #slip_no#
			,#slip_seq#
			,#gl_no#
			,#com_tp#
			,#com_cd#
			,#com_nm#
			,#gl_sub#
			,#debit#
			,#credit#
			,#curr_cd#
			,#xcrt#
			,#debit#
			,#credit#
			,#slip_desc#
			,#p_ofc_cd#
			,#proc_usrid#
			,#proc_ofccd#
			,getdate()
			,#proc_usrid#
			,#proc_ofccd#
			,GETUTCDATE()
		)
    </insert>
    
    
    <!-- General Master 정보를 UPDATE 한다.   -->
    <update id="updateGeneralMst" parameterClass="GeneralVO">
    	UPDATE TB_SLIP_MST
		   SET post_dt		= #post_dt#
		      ,reserve_field01 = #post_dt#
			  ,g_debit		= #g_debit#
			  ,g_credit		= #g_credit#
			  ,curr_cd		= #curr_cd#
			  ,rmk			= #rmk#
			  ,p_ofc_cd		= #p_ofc_cd#
			  ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
		WHERE slip_no = #slip_no#
    </update>
    
    
    <!-- General Detail 정보를 UPDATE 한다.   -->
    <update id="updateGeneralDtl" parameterClass="GeneralVO">
    	UPDATE TB_SLIP_DTL
    	   SET   gl_no			= #gl_no#
				,com_tp			= #com_tp#
				,com_cd			= #com_cd#
				,com_nm			= #com_nm#
				,gl_sub			= #gl_sub#
				,debit			= #debit#
				,credit			= #credit#
				,curr_cd		= #curr_cd#
				,ttl_debit		= #debit#
				,ttl_credit		= #credit#
				,slip_desc		= #slip_desc#
				,p_ofc_cd		= #p_ofc_cd#
				,modi_usrid		= #proc_usrid#
			    ,modi_ofc_cd	= #proc_ofccd#
			    ,modi_tms		= GETUTCDATE()
		WHERE slip_no  = #slip_no#
		  AND slip_seq = #slip_seq#
    </update>
    
    <!-- General Detail 정보를 개별삭제 한다.   -->
    <update id="deleteGeneralDtl" parameterClass="GeneralVO">
    	DELETE FROM TB_SLIP_DTL
    	 WHERE slip_no  = #slip_no#
		   AND slip_seq = #slip_seq# 
    </update>
    
    
    <!-- General Master 정보를 삭제 한다.   -->
    <update id="deleteGeneralMst" parameterClass="GeneralVO">
    	UPDATE TB_SLIP_MST
		   SET delt_flg		= 'Y'
			  ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
		WHERE slip_no = #slip_no#
    </update>
    
    
    <!-- General Journal 조회  -->
    <select id="searchGENERAL_JOURNAL" parameterClass="java.util.HashMap" resultClass="GeneralVO">
    	SELECT mst.SLIP_NO
		      ,mst.POST_DT
		      ,mst.DT_SEQ
		      ,mst.G_DEBIT
		      ,mst.G_CREDIT
		      ,mst.CURR_CD
		      ,mst.RMK
		      ,mst.P_OFC_CD
		      ,dtl.SLIP_SEQ
		      ,dtl.GL_NO
		      ,(SELECT TOP 1 x.rmk FROM TB_GL_CD x WHERE x.GL_CD = dtl.GL_NO) AS GL_RMK
		      ,dtl.COM_TP
		      ,dtl.COM_CD
		      ,dtl.COM_NM
		      ,dtl.GL_SUB
		      ,dtl.DEBIT
		      ,dtl.CREDIT
		      ,dtl.SLIP_DESC
		      ,mst.ACCT_DT
		      ,ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG) AS CLT_CMPL_FLG1
		      ,mst.JNR_YN
		      ,mst.CLS_YN
		      ,mst.DELT_FLG
		      ,mst.SLIP_TP
		  FROM TB_SLIP_MST mst
		 LEFT JOIN TB_SLIP_DTL dtl ON mst.SLIP_NO = dtl.SLIP_NO
		 LEFT OUTER JOIN (SELECT SLIP_NO AS SLIP_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_SLIP_MST) BLCK 
		 	ON MST.SLIP_NO = BLCK.SLIP_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE mst.SLIP_NO = #f_slip_no#
    </select>
    
    
    
    <!-- General Journal List 조회  -->
    <select id="searchGENERAL_JOURNAL_LIST" parameterClass="java.util.HashMap" resultClass="GeneralVO">
		/* AccJorJournalSQL.xml > searchGENERAL_JOURNAL_LIST */
    	SELECT mst.SLIP_NO
		      ,MAX(mst.POST_DT)		AS POST_DT
		      ,MAX(mst.DT_SEQ)		AS DT_SEQ 
		      ,MAX(mst.G_DEBIT)		AS G_DEBIT
		      ,MAX(mst.G_CREDIT)	AS G_CREDIT
		      ,MAX(mst.CURR_CD)		AS CURR_CD
		      ,MAX(mst.RMK)			AS RMK
		      ,MAX(mst.P_OFC_CD)	AS P_OFC_CD
		      ,MAX(mst.rgst_usrid)  AS rgst_usrid
		      ,MAX(dtl.SLIP_SEQ)	AS SLIP_SEQ
		      ,MAX(dtl.GL_NO)		AS GL_NO
		      ,MAX(dtl.COM_TP)		AS COM_TP
		      ,MAX(dtl.COM_CD)		AS COM_CD
		      ,MAX(dtl.COM_NM)		AS COM_NM
		      ,MAX(mst.ACCT_DT)		AS ACCT_DT
		  FROM TB_SLIP_MST mst
		 LEFT JOIN TB_SLIP_DTL dtl ON mst.SLIP_NO = dtl.SLIP_NO
		 WHERE delt_flg = 'N'
		   AND mst.slip_tp = 'SL'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND dtl.COM_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
	    GROUP BY mst.slip_no
	    ORDER BY MAX(mst.post_dt) desc
    </select>
    
    
    <!-- CLEAR 처리를 위한 INVOICE 금액조회   -->
    <select id="selectCLR_INV_AMT" parameterClass="InvJorVO" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > selectCLR_INV_AMT */
    	SELECT isnull(INV_SUM_AMT,0)						AS inv_sum_amt
		      ,isnull(BAL_AMT,0)  							AS bal_sum_amt
		  FROM TB_INV_DTL
		 WHERE INV_NO = #inv_no#
		   <isNotEmpty property="inv_seq">
		 	  AND inv_seq = #inv_seq#
		   </isNotEmpty>
    </select>
    
    <!-- INVOICE CLEAR 정보를 UPDATE 한다.   -->
    <update id="upateCLR_INV_STS" parameterClass="InvJorVO">
    	UPDATE TB_INV_DTL
    	   SET inv_sts_cd   = #inv_sts_cd#
			    ,modi_tms			= GETUTCDATE()
    	 WHERE inv_no = #inv_no#
    	   <isNotEmpty property="inv_seq">
		 	AND inv_seq = #inv_seq#
		 </isNotEmpty>
    </update>
    
    
    
    <!-- BATCH ACCOUNTING LIST 조회   -->
    <select id="searchBAT_ACC_LIST" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchBAT_ACC_LIST */
    	SELECT mst.POST_DT
		      ,mst.TRDP_CD
		      ,CASE WHEN mst.LEVEL = '3' THEN '*******************'
		            ELSE (SELECT x.ENG_NM FROM TB_TRDP x WHERE x.TRDP_CD = mst.TRDP_CD) 
		       END AS TRDP_NM
		      ,mst.CHK_NO
		      ,mst.CURR_CD
		      ,(SELECT COUNT(dtl.JNR_NO) FROM TB_JNR_DTL dtl WHERE mst.JNR_NO = dtl.JNR_NO) AS items
		      ,mst.AMT
		      ,mst.VOID_YN
		      ,mst.VOID_DT
		      ,mst.CLR_YN
		      ,mst.CLR_DT
		      ,mst.JNR_NO
		      ,mst.JNR_TP
		      ,mst.BANK_SEQ
		      ,(SELECT x.bank_nm FROM tb_bank x where x.bank_seq = mst.BANK_SEQ) as BANK_NM
		      ,mst.P_OFC_CD
		      ,mst.OFC_BLCK_FLG
		      ,mst.LEVEL <!-- #51951 -->
		  FROM TB_JNR_MST mst
		 WHERE 1 = 1
		 <isEqual property="act_radio" compareValue="1">
		 	AND mst.DELT_FLG = 'N'
		    AND mst.VOID_YN  = 'N'
		    AND mst.CLR_YN   = 'N'
		    AND mst.JNR_TP   IN('D','B')
			 <isNotEmpty property="s_post_strdt">
			 	<isNotEmpty property="s_post_enddt">
			 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
			 	</isNotEmpty>
			 </isNotEmpty>
		 </isEqual>
		 <isEqual property="act_radio" compareValue="2">
		 	AND mst.DELT_FLG = 'N'
		    AND mst.VOID_YN  = 'N'
		    AND mst.CLR_YN   = 'N'
		    AND mst.JNR_TP   IN('C','V')
			 <isNotEmpty property="s_post_strdt">
			 	<isNotEmpty property="s_post_enddt">
			 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
			 	</isNotEmpty>
			 </isNotEmpty>
		 </isEqual>
		 <isEqual property="act_radio" compareValue="3">
		 	AND mst.DELT_FLG = 'N'
		    AND mst.VOID_YN  = 'N'
		    AND mst.CLR_YN   = 'Y'
		    AND mst.JNR_TP   IN('D','B')
		    <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.CLR_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 </isEqual>
		 <isEqual property="act_radio" compareValue="4">
		 	AND mst.DELT_FLG = 'N'
		    AND mst.VOID_YN  = 'N'
		    AND mst.CLR_YN   = 'Y'
		    AND mst.JNR_TP   IN('C','V')
		    <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.CLR_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 </isEqual>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd# 
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 ORDER BY mst.POST_DT, mst.CHK_NO
    </select>
    
    
    
    
    <!-- BATCH ACCOUNTING EXCEL LIST 조회   -->
    <select id="searchBAT_ACC_LIST_EXCEL" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchBAT_ACC_LIST_EXCEL */
    	SELECT jnr_mst.JNR_NO							AS JNR_NO
    	      ,MAX(jnr_mst.CLR_DT)						AS CLR_DT
		      ,ISNULL(MAX(inv_dtl.INV_NO), MAX(inv_dtl.BUY_INV_NO))	AS INV_NO
		      ,CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) = 'S' THEN 'A/R'
		      		WHEN MAX(inv_mst.SELL_BUY_TP_CD) = 'B' THEN 'A/P'
		      		WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('C','D') THEN 'DB/CR'
		       END 										AS INV_TP
		      ,MAX(jnr_mst.TRDP_CD) 					AS TRDP_CD
		      ,(SELECT ENG_NM FROM TB_TRDP WHERE TRDP_CD = MAX(jnr_mst.TRDP_CD)) AS TRDP_NM
		      ,MAX(inv_dtl.INV_DT) 						AS INV_DT
		      ,ISNULL(MAX(bl.BL_NO),  MAX(oth.HBL_NO)) 	AS BL_NO
		      ,ISNULL(MAX(bl.REF_NO), MAX(oth.REF_NO)) 	AS REF_NO
		      ,CASE WHEN MAX(jnr_mst.JNR_TP) = 'D' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('S','D') THEN MAX(inv_dtl.INV_SUM_AMT)
		                                                     ELSE MAX(inv_dtl.INV_SUM_AMT) * -1
		                                                END 
		            WHEN MAX(jnr_mst.JNR_TP) = 'C' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('B','C') THEN MAX(inv_dtl.INV_SUM_AMT)
		                                                     ELSE MAX(inv_dtl.INV_SUM_AMT) * -1
		                                                END
		       END										AS INV_SUM_AMT
		      ,CASE WHEN MAX(jnr_mst.JNR_TP) = 'D' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('S','D') THEN MAX(jnr_dtl.TTL_PAY_AMT)
		                                                     ELSE MAX(jnr_dtl.TTL_PAY_AMT) * -1
		                                                END 
		            WHEN MAX(jnr_mst.JNR_TP) = 'C' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('B','C') THEN MAX(jnr_dtl.TTL_PAY_AMT)
		                                                     ELSE MAX(jnr_dtl.TTL_PAY_AMT) * -1
		                                                END
		       END										AS PAY_AMT
		      ,CASE WHEN MAX(jnr_mst.JNR_TP) = 'D' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('S','D') THEN MAX(inv_dtl.BAL_AMT)
		                                            ELSE MAX(inv_dtl.BAL_AMT) * -1
		                                       END 
		            WHEN MAX(jnr_mst.JNR_TP) = 'C' THEN CASE WHEN MAX(inv_mst.SELL_BUY_TP_CD) IN ('B','C') THEN MAX(inv_dtl.BAL_AMT)
		                                            ELSE MAX(inv_dtl.BAL_AMT) * -1
		                                       END
		       END										AS BAL_AMT
		  FROM TB_JNR_MST jnr_mst
		      ,TB_JNR_DTL jnr_dtl
		  LEFT JOIN TB_INV_DTL inv_dtl ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ AND ISNULL(inv_dtl.DELT_FLG, 'N') = 'N'
		  JOIN TB_INV inv_mst ON inv_dtl.INV_SEQ = inv_mst.INV_SEQ AND ISNULL(inv_mst.DELT_FLG, 'N') = 'N'
		  JOIN TB_FRT frt ON inv_dtl.INV_SEQ = frt.INV_SEQ AND ISNULL(frt.DELT_FLG, 'N') = 'N'     
		  LEFT JOIN TB_INTG_BL bl ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND ISNULL(bl.DELT_FLG, 'N') = 'N'     
		  LEFT JOIN TB_OTH_SALES oth ON frt.OTH_SEQ = oth.OTH_SEQ AND ISNULL(oth.DELT_FLG, 'N') = 'N'
		 WHERE 1=1
		   AND jnr_mst.JNR_NO = jnr_dtl.JNR_NO
		   AND ISNULL(jnr_mst.DELT_FLG, 'N') = 'N'          
		   AND ISNULL(jnr_dtl.DELT_FLG, 'N') = 'N'
		   AND jnr_mst.JNR_NO IN $f_param_val$
		GROUP BY jnr_mst.JNR_NO, inv_dtl.INV_SEQ 
		ORDER BY jnr_mst.JNR_NO, inv_dtl.INV_SEQ
    </select>
    
    
    <!-- BATCH ACCOUNTING CLEAR UPDATE 한다.   -->
    <update id="updateBAT_ACC_CLEAR" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET CLR_YN       = 'Y'
    	      ,CLR_DT       = #deposit_dt#
    	      ,BATCH_SEQ    = #batch_seq#
    	      ,BANK_SEQ		= #bank_seq#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE jnr_no = #jnr_no#
    	   AND jnr_tp = #jnr_tp#
    </update>
    
    
    
    <!-- BATCH ACCOUNTING CANCEL UPDATE 한다.   -->
    <update id="updateBAT_ACC_CANCEL" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET CLR_YN    	= 'N'
    	      ,CLR_DT    	= ''
    	      ,BATCH_SEQ 	= #batch_seq#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE jnr_no = #jnr_no#
    	   AND jnr_tp = #jnr_tp#
    </update>
    
    
    
    
    <!-- BANK OUTSTANDING 조회  -->
    <select id="searchBankOutstanding" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > searchBankOutstanding */
	    SELECT bank_nm,
		       bank_seq,
		       <isEqual property="s_ofc_cd" compareValue="">
	        	<isEqual property="f_grp_by_ofc" compareValue="G">
	        		ofc_cd,
	        	</isEqual>
	        	<isNotEqual property="f_grp_by_ofc" compareValue="G">
	        		'ALL' AS ofc_cd,
	        	</isNotEqual>
	           </isEqual>
		       <isNotEqual property="s_ofc_cd" compareValue="">
	        		MAX(ofc_cd) AS ofc_cd,
	        	</isNotEqual>
		       CASE 
		            WHEN A.bank_seq IS NULL THEN 1          
		            ELSE 0      
		        END AS order_seq,
		       SUM(d_amt) AS d_amt,
		       SUM(c_amt) AS c_amt,
		       SUM(t_amt) AS t_amt       
		  FROM (
		    	SELECT
					  CASE WHEN M.bank_seq is not null THEN '*' + B.bank_nm
					       ELSE B.bank_nm
					  END bank_nm,
					  M.bank_seq,
					  D.OFC_CD,
					  M.jnr_tp,
					  CASE WHEN MAX(M.JNR_TP) IN ('D','B') THEN SUM(CASE WHEN I.SELL_BUY_TP_CD IN ('S', 'D') THEN D.PAY_AMT
					                                                     WHEN I.SELL_BUY_TP_CD IN ('B', 'C') THEN D.PAY_AMT * -1
					                                                     ELSE D.PAY_AMT 
					                                                END)
					       ELSE 0
					  END AS d_amt,
					  CASE WHEN MAX(M.JNR_TP) IN ('C','V') THEN SUM(CASE WHEN I.SELL_BUY_TP_CD IN ('S', 'D') THEN D.PAY_AMT * -1
					                                                     WHEN I.SELL_BUY_TP_CD IN ('B', 'C') THEN D.PAY_AMT
					                                                     ELSE D.PAY_AMT 
					                                                END)
					       ELSE 0
					  END AS c_amt,
					  (CASE WHEN MAX(M.JNR_TP) IN ('D','B') THEN SUM(CASE WHEN I.SELL_BUY_TP_CD IN ('S', 'D') THEN D.PAY_AMT
					                                                      WHEN I.SELL_BUY_TP_CD IN ('B', 'C') THEN D.PAY_AMT * -1
					                                                      ELSE D.PAY_AMT 
					                                                 END) 
					        ELSE 0 
					   END) - (CASE WHEN MAX(M.JNR_TP) IN ('C','V') THEN SUM(CASE WHEN I.SELL_BUY_TP_CD IN ('S', 'D') THEN D.PAY_AMT * -1
							                                                      WHEN I.SELL_BUY_TP_CD IN ('B', 'C') THEN D.PAY_AMT
							                                                      ELSE D.PAY_AMT 
							                                                 END) 
							        ELSE 0 
							   END) AS t_amt
				FROM TB_JNR_MST M
			JOIN TB_JNR_DTL D ON M.JNR_NO = D.JNR_NO
			LEFT OUTER JOIN TB_INV I ON D.INV_SEQ = I.INV_SEQ AND I.DELT_FLG = 'N'
			RIGHT OUTER JOIN TB_BANK B ON M.BANK_SEQ = B.BANK_SEQ
			   WHERE 1=1
			     AND isnull(M.DELT_FLG,'N') = 'N'
			     AND isnull(D.DELT_FLG,'N') = 'N'
			   <![CDATA[
			     AND M.POST_DT <= #f_deposit_dt#
			     AND (ISNULL(M.CLR_DT,'') = '' OR M.CLR_DT  > #f_deposit_dt#)
			     AND (NOT(ISNULL(M.VOID_YN,'N') = 'Y' AND ISNULL(VOID_DT,'') <=  #f_deposit_dt#) OR  M.BANK_SEQ IS NULL)
			   ]]>
			   	 <isNotEqual property="s_ofc_cd" compareValue="">
				 	AND D.OFC_CD = #s_ofc_cd#
				 </isNotEqual>
			   GROUP BY B.BANK_NM, M.BANK_SEQ, D.OFC_CD, M.JNR_TP, M.JNR_NO   
     		) A                 
	    GROUP BY
	        A.BANK_NM,
	        A.BANK_SEQ
	        <isEqual property="s_ofc_cd" compareValue="">
	        	<isEqual property="f_grp_by_ofc" compareValue="G">
	        		,A.OFC_CD
	        	</isEqual>
	        </isEqual>
	        
	    ORDER BY
	        ORDER_SEQ,
	        A.BANK_NM ASC
	        <isEqual property="s_ofc_cd" compareValue="">
	        	<isEqual property="f_grp_by_ofc" compareValue="G">
	        		,A.OFC_CD
	        	</isEqual>
	        </isEqual>
    </select>
    
    
    
    <!-- Beginning Statement Balance   -->
    <!--   CLEAR DATE 기준으로, FROM 날짜 이전의 모든 DEPOSIT - CHECK + SLIP DEBIT - SLIP CREDIT   -->
    <!--   1.1 JOURNAL 에서 DEPOSIT, CHECK AMOUNT 를 가져온다.    -->
    <select id="calcBankReconciliation1_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	SELECT
			'1-1' AS TP,
			(ISNULL(SUM((CASE 
							WHEN JNR_TP IN ('D','B') AND MD = 'M' THEN AMT
			                WHEN JNR_TP IN ('C','V') AND MD = 'D' THEN AMT
			                ELSE 0
					      END)), 0) 
			 +	    
			 ISNULL((SELECT INIT_AMT FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#), 0)
			 ) AS DEBIT1_1,
			SUM(
			(CASE
				WHEN JNR_TP IN ('C','V') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('D','B') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS CREDIT1_1
			FROM
			(
				SELECT
				'M' AS MD, JNR_NO, JNR_TP, POST_DT, CLR_YN, CLR_DT, AMT, CURR_CD, P_OFC_CD
				FROM
				TB_JNR_MST
				WHERE 1=1
				<![CDATA[
				AND ISNULL(DELT_FLG,'N') <> 'Y'
				AND (
					(ISNULL(CLR_DT,'') < #s_strdt# AND ISNULL(VOID_YN,'')<>'Y') OR
					(ISNULL(CLR_DT,'') < #s_strdt# AND ISNULL(VOID_DT,'')>#s_strdt#)
				)				
				AND ISNULL(CLR_DT,'') <> ''
				AND BANK_SEQ = #s_bank_cd#
				]]>
				
				/* SDKANG 추가 2014-08-10 */
	            UNION ALL
				
				SELECT
				'D' AS MD, M.JNR_NO, M.JNR_TP, M.POST_DT, M.CLR_YN, M.CLR_DT, D.TTL_PAY_AMT AS  AMT, M.CURR_CD, M.P_OFC_CD
				FROM
				TB_JNR_MST M,
	            TB_JNR_DTL D
				WHERE 1=1
				<![CDATA[
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
	            AND ISNULL(D.DELT_FLG,'N') <> 'Y'
	            AND M.JNR_NO = D.JNR_NO
				AND (
					(ISNULL(M.CLR_DT,'') < #s_strdt# AND ISNULL(M.VOID_YN,'')<>'Y') OR
					(ISNULL(M.CLR_DT,'') < #s_strdt# AND ISNULL(M.VOID_DT,'')>#s_strdt#)
				)				
				AND ISNULL(M.CLR_DT,'') <> ''
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
			) A
    </select>
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation1_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation1_2 */
    	/* SLIP 에서 DEBIT, CREDIT 금액을 가져온다. */
    	SELECT
			'1.2' AS TP,
			SUM(TTL_DEBIT) AS DEBIT1_2,
			SUM(TTL_CREDIT) AS CREDIT1_2
			FROM
			(
				SELECT
				M.SLIP_NO, M.SLIP_TP, M.SLIP_2ND_TP, M.POST_DT, M.G_DEBIT, M.G_CREDIT, M.CURR_CD, M.P_OFC_CD,
				D.GL_NO, D.COM_TP, D.COM_CD, D.TTL_DEBIT, D.TTL_CREDIT
				FROM
				TB_SLIP_MST M,
				TB_SLIP_DTL D
				WHERE 1=1
				<![CDATA[
				AND M.SLIP_NO = D.SLIP_NO
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND M.POST_DT < #s_strdt#
				AND ISNULL(M.POST_DT,'') <> ''
				AND M.SLIP_TP = 'SL'
				/* SDKANG 추가 2014-08-10 */
				/* AND D.COM_TP = 'B' */
				/* AND D.COM_CD = s_bank_cd */
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
			) A
    </select>
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation2_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation2_1 */
    	/* 2. Total Deposit/Credit (+), Total Check/Debit (-) */
    	/* CLEAR DATE 기준으로, 입력일자 구간의 DEPOSIT + SLIP DEBIT */
    	/* 2-1 JOURNAL 에서 DEPOSIT, CHECK AMOUNT 를 가져온다. */
    	SELECT
			'2-1' AS TP,
			SUM(
			(CASE
				WHEN JNR_TP IN ('D','B') AND MD = 'M' THEN AMT
		        WHEN JNR_TP IN ('C','V') AND MD = 'D' THEN AMT
		        ELSE 0
			END)) AS DEBIT2_1,
			SUM(
			(CASE
				WHEN JNR_TP IN ('C','V') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('D','B') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS CREDIT2_1
			FROM
			(
				SELECT
				'M' AS MD, JNR_NO, JNR_TP, POST_DT, CLR_YN, CLR_DT, AMT, CURR_CD, P_OFC_CD
				FROM
				TB_JNR_MST
				WHERE 1=1
				<![CDATA[
				AND ISNULL(DELT_FLG,'N') <> 'Y'
				AND (
					(ISNULL(CLR_DT,'') BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(VOID_YN,'')<>'Y') OR
					(ISNULL(CLR_DT,'') BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(VOID_YN,'')='Y' AND ISNULL(VOID_DT,'') > #s_enddt#)
				)				
				AND ISNULL(CLR_DT,'') <> ''
				AND BANK_SEQ = #s_bank_cd#
				]]>
				
				/* SDKANG 2014-08-10 */
	            UNION ALL
	            
	            SELECT
				'D' AS MD, M.JNR_NO, M.JNR_TP, M.POST_DT, M.CLR_YN, M.CLR_DT, D.TTL_PAY_AMT AS  AMT, M.CURR_CD, M.P_OFC_CD
				FROM
				TB_JNR_MST M,
				TB_JNR_DTL D
				WHERE 1=1 
				<![CDATA[
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND ISNULL(D.DELT_FLG,'N') <> 'Y'
				AND M.JNR_NO = D.JNR_NO
				AND (
					(ISNULL(M.CLR_DT,'') BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(M.VOID_YN,'')<>'Y') OR
					(ISNULL(M.CLR_DT,'') BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(M.VOID_YN,'')='Y' AND ISNULL(M.VOID_DT,'') > #s_enddt#)
				)				
				AND ISNULL(M.CLR_DT,'') <> ''
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
	            
			) A
    </select>
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation2_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation2_2 */
    	/* 2.2 SLIP 에서 DEBIT, CREDIT 금액을 가져온다. */
    	SELECT
			'2-2' AS TP,
			SUM(TTL_DEBIT) AS DEBIT2_2,
			SUM(TTL_CREDIT) AS CREDIT2_2
			FROM
			(
				SELECT
				M.SLIP_NO, M.SLIP_TP, M.SLIP_2ND_TP, M.POST_DT, M.G_DEBIT, M.G_CREDIT, M.CURR_CD, M.P_OFC_CD,
				D.GL_NO, D.COM_TP, D.COM_CD, D.TTL_DEBIT, D.TTL_CREDIT
				FROM
				TB_SLIP_MST M,
				TB_SLIP_DTL D
				WHERE 1=1
				<![CDATA[
				AND M.SLIP_NO = D.SLIP_NO
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND M.POST_DT BETWEEN #s_strdt# AND #s_enddt#
				AND ISNULL(M.POST_DT,'') <> ''
				AND M.SLIP_TP = 'SL'
				/* SDKANG 2014-08-10 */
				/* AND D.COM_TP = 'B' */
				/* AND D.COM_CD = s_bank_cd */
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
			) A
    </select>
    
    
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation4 */
    	/* 4. Outstanding Deposit/Credit (+), Outstanding Total Check/Debit (-) */
    	/* CLR 안된, 혹은 TO 일자 기준으로 CLR DT 가 큰 자료 */
    	SELECT
			'4' AS TP,
			SUM(
			(CASE
				WHEN JNR_TP IN ('D','B') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('C','V') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS DEBIT4,
			SUM(
			(CASE
				WHEN JNR_TP IN ('C','V') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('D','B') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS CREDIT4
			FROM
			(
				SELECT
				'M' AS MD, JNR_NO, JNR_TP, POST_DT, CLR_YN, CLR_DT, AMT, CURR_CD, P_OFC_CD
				FROM
				TB_JNR_MST
				WHERE 1=1
				<![CDATA[
				AND ISNULL(DELT_FLG,'N') <> 'Y'	
				AND (
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_YN,'') <> 'Y') OR
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_DT,'') > #s_enddt#)
				)				
				AND BANK_SEQ = #s_bank_cd#
				]]>
				
				/* SDKANG 2014-08-10 */
				UNION ALL
				
				SELECT
				'D' AS MD, M.JNR_NO, M.JNR_TP, M.POST_DT, M.CLR_YN, M.CLR_DT, D.TTL_PAY_AMT AS AMT, M.CURR_CD, M.P_OFC_CD
				FROM
				TB_JNR_MST M,
	            TB_JNR_DTL D
				WHERE 1=1
				<![CDATA[
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND ISNULL(D.DELT_FLG,'N') <> 'Y'
				AND M.JNR_NO = D.JNR_NO
				AND (
					(ISNULL(M.POST_DT,'') <= #s_enddt# AND (M.CLR_DT > #s_enddt# OR ISNULL(M.CLR_DT,'') = '') AND ISNULL(M.VOID_YN,'') <> 'Y') OR
					(ISNULL(M.POST_DT,'') <= #s_enddt# AND (M.CLR_DT > #s_enddt# OR ISNULL(M.CLR_DT,'') = '') AND ISNULL(M.VOID_DT,'') > #s_enddt#)
				)	
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)			
				]]>	
	
			) A
    </select>
    
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation6_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation6_1 */
    	/* 6. Beginning Book Balance */
    	/* POST DATE 기준으로, FROM 날짜 이전의 모든 DEPOSIT - CHECK + SLIP DEBIT - SLIP CREDIT */
    	/* 6.1 JOURNAL 에서 DEPOSIT, CHECK AMOUNT 를 가져온다. */
    	SELECT
			'6-1' AS TP,
			(ISNULL(SUM((CASE
							 WHEN JNR_TP IN ('D','B') AND MD = 'M' THEN AMT
							 WHEN JNR_TP IN ('C','V') AND MD = 'D' THEN AMT
							 ELSE 0
						 END)), 0)
            +
            ISNULL((SELECT INIT_AMT FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#), 0)
            ) AS DEBIT6_1,
			SUM(
			(CASE
				WHEN JNR_TP IN ('C','V') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('D','B') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS CREDIT6_1
			FROM
			(
				SELECT
				'M' AS MD, JNR_NO, JNR_TP, POST_DT, CLR_YN, CLR_DT, AMT, CURR_CD, P_OFC_CD
				FROM
				TB_JNR_MST
				WHERE 1=1
				<![CDATA[
				AND ISNULL(DELT_FLG,'N') <> 'Y'
				AND (
					(ISNULL(POST_DT,'') < #s_strdt# AND ISNULL(VOID_YN,'')<>'Y') OR
					(ISNULL(POST_DT,'') < #s_strdt# AND ISNULL(VOID_DT,'')>=#s_strdt#)
				)				
				AND ISNULL(POST_DT,'') <> ''
				AND BANK_SEQ = #s_bank_cd#
				]]>
				
				/* SDKANG 2014-08-10 */
				UNION ALL
				
				SELECT
				'D' AS MD, M.JNR_NO, M.JNR_TP, M.POST_DT, M.CLR_YN, M.CLR_DT, D.TTL_PAY_AMT AS AMT, M.CURR_CD, M.P_OFC_CD
				FROM
				TB_JNR_MST M,
				TB_JNR_DTL D
				WHERE 1=1
				<![CDATA[
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND ISNULL(D.DELT_FLG,'N') <> 'Y'
				AND M.JNR_NO = D.JNR_NO
				AND (
					(ISNULL(M.POST_DT,'') < #s_strdt# AND ISNULL(M.VOID_YN,'')<>'Y') OR
					(ISNULL(M.POST_DT,'') < #s_strdt# AND ISNULL(M.VOID_DT,'')>=#s_strdt#)
				)				
				AND ISNULL(M.POST_DT,'') <> ''
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
				
			) A
    </select>
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation6_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation6_2 */
    	/* SLIP 에서 DEBIT, CREDIT 금액을 가져온다. */
    	SELECT
			'6.2' AS TP,
			SUM(TTL_DEBIT) AS DEBIT6_2,
			SUM(TTL_CREDIT) AS CREDIT6_2
			FROM
			(
				SELECT
				M.SLIP_NO, M.SLIP_TP, M.SLIP_2ND_TP, M.POST_DT, M.G_DEBIT, M.G_CREDIT, M.CURR_CD, M.P_OFC_CD,
				D.GL_NO, D.COM_TP, D.COM_CD, D.TTL_DEBIT, D.TTL_CREDIT
				FROM
				TB_SLIP_MST M,
				TB_SLIP_DTL D
				WHERE 1=1
				<![CDATA[
				AND M.SLIP_NO = D.SLIP_NO
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND M.POST_DT < #s_strdt#
				AND ISNULL(M.POST_DT,'') <> ''
				AND M.SLIP_TP = 'SL'
				/* SDKANG 2014-08-10 */
				/* AND D.COM_TP = 'B' */
				/* AND D.COM_CD = s_bank_cd */
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
			) A
    </select>
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation7_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation7_1 */
    	/* 7. Total Deposit/Credit (+), Total Check/Debit (-) */
    	/* POST DATE 기준으로, 입력일자 구간의 DEPOSIT + SLIP DEBIT */
    	/* 7-1 JOURNAL 에서 DEPOSIT, CHECK AMOUNT 를 가져온다. */
    	SELECT
			'7-1' AS TP,
			SUM(
			(CASE
				WHEN JNR_TP IN ('D','B') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('C','V') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS DEBIT7_1,
			SUM(
			(CASE
				WHEN JNR_TP IN ('C','V') AND MD = 'M' THEN AMT
				WHEN JNR_TP IN ('D','B') AND MD = 'D' THEN AMT
				ELSE 0
			END)) AS CREDIT7_1
			FROM
			(
			    <![CDATA[
				SELECT
				'M' AS MD, JNR_NO, JNR_TP, POST_DT, CLR_YN, CLR_DT, 
				(CASE WHEN ISNULL(VOID_YN,'')='Y' AND (POST_DT < #s_strdt# OR  POST_DT > #s_enddt#)
				      THEN AMT*-1 
				      ELSE AMT 
				 END) AS AMT,
				CURR_CD, P_OFC_CD
				FROM
				TB_JNR_MST
				WHERE 1=1
				AND ISNULL(DELT_FLG,'N') <> 'Y'
				AND (
					(POST_DT BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(VOID_YN,'')<>'Y') OR
					(POST_DT BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(VOID_DT,'00000000') > #s_enddt#) OR
					((POST_DT < #s_strdt# OR  POST_DT > #s_enddt#) AND ISNULL(VOID_DT,'99999999') BETWEEN  #s_strdt# AND #s_enddt#)
				)				
				AND ISNULL(POST_DT,'') <> ''
				AND BANK_SEQ = #s_bank_cd#
				]]>
				
				/* SDKANG 2014-08-10 */
				UNION ALL
				
				<![CDATA[
				SELECT
				'D' AS MD, M.JNR_NO, M.JNR_TP, M.POST_DT, M.CLR_YN, M.CLR_DT,
				(CASE WHEN ISNULL(M.VOID_YN,'')='Y' AND (M.POST_DT < #s_strdt# OR  M.POST_DT > #s_enddt#)
				      THEN D.TTL_PAY_AMT*-1
					  ELSE D.TTL_PAY_AMT
				 END) AS AMT,
	            M.CURR_CD, M.P_OFC_CD
				FROM
				TB_JNR_MST M,
				TB_JNR_DTL D 
				WHERE 1=1
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND ISNULL(D.DELT_FLG,'N') <> 'Y'
				AND M.JNR_NO = D.JNR_NO
				AND (
					(M.POST_DT BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(M.VOID_YN,'')<>'Y') OR
					(M.POST_DT BETWEEN #s_strdt# AND #s_enddt# AND ISNULL(M.VOID_DT,'00000000') > #s_enddt#) OR
					((M.POST_DT < #s_strdt# OR  M.POST_DT > #s_enddt#) AND ISNULL(M.VOID_DT,'99999999') BETWEEN  #s_strdt# AND #s_enddt#)
				)				
				AND ISNULL(M.POST_DT,'') <> ''
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
	
			) A
    </select>
    
    
    <!-- Beginning Statement Balance   -->
    <select id="calcBankReconciliation7_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > calcBankReconciliation7_2 */
    	/* 7.2 SLIP 에서 DEBIT, CREDIT 금액을 가져온다. */
    	SELECT
			'7-2' AS TP,
			SUM(TTL_DEBIT) AS DEBIT7_2,
			SUM(TTL_CREDIT) AS CREDIT7_2
			FROM
			(
				SELECT
				M.SLIP_NO, M.SLIP_TP, M.SLIP_2ND_TP, M.POST_DT, M.G_DEBIT, M.G_CREDIT, M.CURR_CD, M.P_OFC_CD,
				D.GL_NO, D.COM_TP, D.COM_CD, D.TTL_DEBIT, D.TTL_CREDIT
				FROM
				TB_SLIP_MST M,
				TB_SLIP_DTL D
				WHERE 1=1
				<![CDATA[
				AND M.SLIP_NO = D.SLIP_NO
				AND ISNULL(M.DELT_FLG,'N') <> 'Y'
				AND M.POST_DT BETWEEN #s_strdt# AND #s_enddt#
				AND ISNULL(M.POST_DT,'') <> ''
				AND M.SLIP_TP = 'SL'
				/* SDKANG 2014-08-10 */
				/* AND D.COM_TP = 'B' */
				/* AND D.COM_CD = s_bank_cd */
				AND D.GL_NO = (SELECT GL_CD FROM TB_BANK WHERE BANK_SEQ = #s_bank_cd#)
				]]>
			) A
    </select>
    
    
    <!-- Bank Reconciliation  Deposit And Credits 조회  -->
    <select id="searchDepositAndCreditsList" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchDepositNCreditsList */
    	/* 1. DEPOSIT AND CREDITS */
			<![CDATA[
			SELECT M.POST_DT
			     , M.CHK_NO
			     , M.RCVD_FM_NM
			     , M.CURR_CD
			     , M.AMT
			     , M.P_OFC_CD
			     , M.CLR_YN
			     , M.CLR_DT
			     , ISNULL(M.VOID_YN, 'N') AS VOID_YN
			     , M.VOID_DT
			  FROM TB_JNR_MST M
			 WHERE 1=1
			   AND ISNULL(DELT_FLG,'N') <> 'Y'	
			   AND (
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_YN,'') <> 'Y') OR
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_DT,'') > #s_enddt#)
				)				
				AND BANK_SEQ = #s_bank_cd#
				AND M.JNR_TP IN ('D','B')
			   ]]>   	
    </select>
    
    
    <!-- Bank Reconciliation Checks And Debits 조회  -->
    <select id="searchChecksAndDebitsList" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchChecksAndDebitsList */
    	/* 2. CHECKS AND DEBITS  */
		<![CDATA[
			SELECT M.POST_DT
			     , M.CHK_NO
			     , (SELECT LOCL_NM
			          FROM TB_TRDP
			         WHERE TRDP_CD = M.PAYTO_CD) AS PAYTO_NM
			     , M.CURR_CD
			     , M.AMT
			     , M.P_OFC_CD
			     , M.CLR_YN
			     , M.CLR_DT
			     , ISNULL(M.VOID_YN, 'N') AS VOID_YN
			     , M.VOID_DT
			  FROM TB_JNR_MST M
			 WHERE 1=1
			   AND ISNULL(DELT_FLG,'N') <> 'Y'	
			   AND (
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_YN,'') <> 'Y') OR
					(ISNULL(POST_DT,'') <= #s_enddt# AND (CLR_DT > #s_enddt# OR ISNULL(CLR_DT,'') = '') AND ISNULL(VOID_DT,'') > #s_enddt#)
				)				
				AND BANK_SEQ = #s_bank_cd#
				AND M.JNR_TP IN ('C','V')
    	]]> 
    </select>
    
    
    <!-- Tax Bill Deposit InvoiceList 조회  -->
    <select id="searchTAX_INV_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchTAX_INV_LIST */
    	SELECT  MAX(inv_mst.INV_DT)				AS inv_post_dt
		       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)+MAX(inv_mst.BND_CLSS_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(inv_mst.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_mst.BUY_INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(inv_mst.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
		       ,MAX(inv_mst.INV_APLY_XCRT)		AS inv_aply_xcrt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_mst.INV_SUM_AMT)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_mst.INV_SUM_AMT) * -1
		        END								AS inv_sum_amt	
			   
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_mst.BAL_AMT),0)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_mst.BAL_AMT),0) * -1
		        END								AS bal_sum_amt
		        
		       ,MAX(inv_mst.cmb_inv_seq)	    AS inv_seq
		       ,MAX(inv_mst.inv_no)				AS inv_no
		       ,MAX(inv_mst.trdp_cd)			AS trdp_cd

		       ,CASE WHEN isnull(MAX(inv_mst.BAL_AMT),0) = 0 THEN '1'
		             ELSE '0'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		  FROM TB_CMB_INV inv_mst
		 WHERE inv_mst.TRDP_CD = #s_cust_cd#
		   <isNotEmpty property="f_curr_cd">
		   AND inv_mst.INV_APLY_CURR_CD = #f_curr_cd#
		   </isNotEmpty>
		   AND inv_mst.BAL_AMT != 0
		   <isNotEmpty property="s_inv_no">
		       AND inv_mst.INV_NO = #s_inv_no#	
		   </isNotEmpty>
		   <isNotEmpty property="s_v_inv_no">
		       AND inv_mst.BUY_INV_NO = #s_v_inv_no#	
		   </isNotEmpty>
		   <isEqual property="dept_chk1" compareValue="Y">
		       <isEqual property="dept_chk2" compareValue="Y">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
		       	   </isEqual>
		       </isEqual>
		       <isEqual property="dept_chk2" compareValue="N">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
		       	   </isEqual>
		       </isEqual>	    		
		   </isEqual>
		   
		   <isEqual property="dept_chk1" compareValue="N">
		       <isEqual property="dept_chk2" compareValue="Y">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
		       	   </isEqual>
		       </isEqual>
		       <isEqual property="dept_chk2" compareValue="N">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('')
		       	   </isEqual>
		       </isEqual>	    		
		   </isEqual>
		 GROUP BY inv_mst.CMB_INV_SEQ     
     
    </select>
    
    
    
    
    <!-- TAX BILL 생성된 DEPOSIT JOURNAL InvoiceList 조회  -->
    <select id="searchTAX_INV_JNR_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchTAX_INV_JNR_LIST */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)+MAX(inv_mst.BND_CLSS_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_mst.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(jnr_dtl.REF_NO)				AS ref_no
		       ,MAX(jnr_dtl.BL_NO)				AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_mst.inv_sum_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_mst.inv_sum_amt) * -1
		             ELSE MAX(inv_mst.inv_sum_amt)
		        END								AS inv_sum_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_mst.BAL_AMT),0)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_mst.BAL_AMT),0) * -1
		             ELSE isnull(MAX(inv_mst.BAL_AMT),0)
		        END								AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt)
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             ELSE MAX(jnr_dtl.ttl_pay_amt)
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             ELSE MAX(jnr_dtl.ttl_pay_amt)
		        END								AS old_pay_amt	
		          
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_mst.cmb_inv_seq)		AS inv_seq
		       ,MAX(inv_mst.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_mst.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) as CLT_CMPL_FLG
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N' AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_CMB_INV inv_mst          
            	ON jnr_dtl.INV_NO = inv_mst.INV_NO AND jnr_dtl.INV_SEQ = inv_mst.CMB_INV_SEQ
            LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
            	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1            
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level = '1'
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
    
    <!-- Tax Bill Journal Detail 정보를 UPDATE 한다.   -->
    <update id="upateTaxInvDtl" parameterClass="InvJorVO">
    	UPDATE TB_CMB_INV
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) + #ttl_pay_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) - #ttl_pay_amt#
		 WHERE INV_NO = #inv_no#  
		 <isNotEmpty property="inv_seq">
		 	AND cmb_inv_seq = #inv_seq#
		 </isNotEmpty>
    </update>
    
    
    
    <!-- Tax Bill Journal Detail 정보를 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateTaxInvDtlVoidCheck" parameterClass="InvJorVO">
    	UPDATE TB_CMB_INV
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		 WHERE INV_NO = #inv_no#    
		   <isNotEmpty property="inv_seq">
		 	AND cmb_inv_seq = #inv_seq#
		 </isNotEmpty>
    </update>
    
    
    <!-- Tax Bill INVOICE CLEAR 정보를 UPDATE 한다.   -->
    <update id="upateTAX_CLR_INV_STS" parameterClass="InvJorVO">
    	UPDATE TB_CMB_INV
    	   SET inv_sts_cd   = #inv_sts_cd#
    	 WHERE inv_no = #inv_no#
    	   <isNotEmpty property="inv_seq">
		 	AND cmb_inv_seq = #inv_seq#
		 </isNotEmpty>
    </update>
    
    
    <!-- TAX BILL Journal Detail 정보를 UPDATE 한다. VOID CHECK 후 DELETE 함  -->
    <update id="upateTaxInvDtlInvSts" parameterClass="InvJorVO">
    	UPDATE TB_CMB_INV
		   SET INV_STS_CD	= #inv_sts_cd#
		 WHERE INV_NO = #inv_no#    
		   <isNotEmpty property="inv_seq">
		 	AND cmb_inv_seq = #inv_seq#
		 </isNotEmpty>
    </update>
    
    
    <!-- Tax Bill Check InvoiceList 조회  -->
    <select id="searchTAX_CHK_INV_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchTAX_CHK_INV_LIST */
    	SELECT  MAX(inv_mst.INV_DT)				AS inv_post_dt
		       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)+MAX(inv_mst.BND_CLSS_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(inv_mst.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_mst.BUY_INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(inv_mst.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
		       ,MAX(inv_mst.INV_APLY_XCRT)		AS inv_aply_xcrt
		       
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_mst.INV_SUM_AMT) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_mst.INV_SUM_AMT) 
		        END								AS inv_sum_amt	
			   
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_mst.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_mst.BAL_AMT),0)
		        END								AS bal_sum_amt

		       ,MAX(inv_mst.cmb_inv_seq)		AS inv_seq
		       ,MAX(inv_mst.inv_no)				AS inv_no
		       ,MAX(inv_mst.trdp_cd)			AS trdp_cd

		       ,CASE WHEN isnull(MAX(inv_mst.BAL_AMT),0) = 0 THEN '1'
		             ELSE '0'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		  FROM TB_CMB_INV inv_mst
		 WHERE inv_mst.TRDP_CD = #s_cust_cd#
		   <isNotEmpty property="f_curr_cd">
		   AND inv_mst.INV_APLY_CURR_CD = #f_curr_cd#
		   </isNotEmpty>
		   AND inv_mst.BAL_AMT != 0
		   <isNotEmpty property="s_inv_no">
		       AND inv_mst.BUY_INV_NO = #s_inv_no#	
		   </isNotEmpty>
		   <isEqual property="dept_chk1" compareValue="Y">
		       <isEqual property="dept_chk2" compareValue="Y">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
		       	   </isEqual>
		       </isEqual>
		       <isEqual property="dept_chk2" compareValue="N">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
		       	   </isEqual>
		       </isEqual>	    		
		   </isEqual>
		   
		   <isEqual property="dept_chk1" compareValue="N">
		       <isEqual property="dept_chk2" compareValue="Y">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
		       	   </isEqual>
		       </isEqual>
		       <isEqual property="dept_chk2" compareValue="N">
		       	   <isEqual property="dept_chk3" compareValue="Y">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
		       	   </isEqual>
		       	   <isEqual property="dept_chk3" compareValue="N">
		       	   	   AND inv_mst.sell_buy_tp_cd IN('')
		       	   </isEqual>
		       </isEqual>	    		
		   </isEqual>
		 GROUP BY inv_mst.CMB_INV_SEQ     
     
    </select>
    
    
    
    <!-- 생성된 TAX BILL CHECK JOURNAL InvoiceList 조회  -->
    <select id="searchTAX_CHK_INV_JNR_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > searchTAX_CHK_INV_JNR_LIST */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)+MAX(inv_mst.BND_CLSS_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_mst.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_mst.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(jnr_dtl.REF_NO)				AS ref_no
		       ,MAX(jnr_dtl.BL_NO)				AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_mst.inv_sum_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_mst.inv_sum_amt) 
		             ELSE MAX(inv_mst.inv_sum_amt) 
		        END								AS inv_sum_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_mst.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_mst.BAL_AMT),0)
		             ELSE isnull(MAX(inv_mst.BAL_AMT),0)
		        END								AS bal_sum_amt
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS old_pay_amt
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_mst.cmb_inv_seq)		AS inv_seq
		       ,MAX(inv_mst.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_mst.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N' AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_CMB_INV inv_mst          
            	ON jnr_dtl.INV_NO = inv_mst.INV_NO AND jnr_dtl.INV_SEQ = inv_mst.CMB_INV_SEQ
            LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
            	ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #f_jnr_no#
		 <isNotEmpty property="f_jnr_tp">
		   AND jnr_mst.jnr_tp = #f_jnr_tp#
		 </isNotEmpty>
		   AND jnr_mst.level = '1'
		 GROUP BY jnr_dtl.JNR_SEQ
		 
    </select>
    
    
    
    
    <!-- Tax Bill Deposit Journal List 조회  -->
    <select id="searchTAX_JNR_LIST" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchTAX_JNR_LIST */
    	SELECT mst.post_dt
		      ,mst.rcvd_fm_nm
		      ,mst.chk_no
		      ,(SELECT bk.BANK_NM FROM TB_BANK bk WHERE mst.bank_seq = bk.bank_seq) AS bank_seq
		      ,mst.amt
		      ,mst.curr_cd
		      ,mst.clr_yn
		      ,mst.clr_dt
		      ,mst.void_yn
		      ,mst.void_dt
		      ,mst.p_ofc_cd
		      ,mst.rgst_usrid
		      ,mst.jnr_no
		      ,mst.trdp_cd
		      ,ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG) AS CLT_CMPL_FLG
		  FROM TB_JNR_MST mst
		  LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		  	ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE mst.DELT_FLG = 'N'
		   AND JNR_TP = 'B'
		   AND LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_rcv_from_cd">
		 	AND mst.TRDP_CD = #s_rcv_from_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEqual property="s_amt_fr" compareValue="0">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEqual>
	  ORDER BY mst.post_dt desc, mst.jnr_no desc
    </select>
    
    
    
    <!-- Tax Bill Check Journal List 조회  -->
    <select id="searchTAX_CHK_JNR_LIST" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchTAX_CHK_JNR_LIST */
		SELECT MAX(mst.post_dt)			AS post_dt
		      ,MAX(mst.rcvd_fm_nm)		AS rcvd_fm_nm
		      ,MAX(mst.chk_no)			AS chk_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select eng_nm from tb_trdp x where x.trdp_cd = MAX(mst.trdp_cd) and delt_flg = 'N') AS trdp_nm
		      ,MAX(mst.bank_seq)		AS bank_seq
		      ,(select bk.BANK_NM FROM TB_BANK bk where MAX(mst.bank_seq) = bk.bank_seq) AS bank_nm
		      ,MAX(mst.AMT)     		AS amt
		      ,MAX(mst.curr_cd)			AS curr_cd
		      ,MAX(mst.clr_yn)			AS clr_yn
		      ,MAX(mst.clr_dt)			AS clr_dt
		      ,MAX(mst.void_yn)			AS void_yn
		      ,MAX(mst.void_dt)			AS void_dt
		      ,MAX(isnull(mst.chk_pnt_yn, 'N'))		AS chk_pnt_yn
		      ,MAX(mst.p_ofc_cd)		AS p_ofc_cd
		      ,MAX(mst.rgst_usrid)		AS rgst_usrid
		      ,MAX(mst.jnr_no)			AS jnr_no
		      ,MAX(mst.trdp_cd)			AS trdp_cd
		      ,(select COUNT(x.jnr_no)	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS dtl_cnt
		      ,(select CASE WHEN COUNT(x.jnr_no) > 12 THEN 'Y' ELSE 'N' END	
		          from TB_JNR_DTL x 
		         where x.JNR_NO = MAX(mst.JNR_NO) 
		         <isNotEmpty property="s_ofc_cd">
				 	AND MAX(mst.P_OFC_CD) = #s_ofc_cd#
				 </isNotEmpty>
		       ) AS rider_yn
		      ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		  FROM TB_JNR_MST mst
	LEFT JOIN  TB_JNR_DTL dtl ON mst.JNR_NO = dtl.JNR_NO
	LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		ON MST.JNR_NO = BLCK.JNR_NO1 AND MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE isnull(mst.DELT_FLG,'N') = 'N'
		   AND isnull(dtl.DELT_FLG,'N') = 'N'
		   AND mst.JNR_TP = 'V'
		   AND mst.LEVEL  = '1'
		 <isNotEmpty property="s_post_strdt">
		 	<isNotEmpty property="s_post_enddt">
		 		AND mst.POST_DT between #s_post_strdt# AND #s_post_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_deposit_strdt">
		 	<isNotEmpty property="s_deposit_enddt">
		 		AND mst.CLR_DT between #s_deposit_strdt# AND #s_deposit_enddt#
		 	</isNotEmpty>
		 </isNotEmpty>
		 <isNotEmpty property="s_vendor_cd">
		 	AND mst.TRDP_CD = #s_vendor_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_bank_cd">
		 	AND mst.BANK_SEQ = #s_bank_cd#
		 </isNotEmpty>
		 <isNotEmpty property="s_chk_no">
		 	AND mst.CHK_NO LIKE '%' + #s_chk_no# + '%'
		 </isNotEmpty>
		 <isNotEmpty property="s_ofc_cd">
		 	AND mst.P_OFC_CD = #s_ofc_cd#
		 </isNotEmpty>
		 <isNotEqual property="s_amt_fr" compareValue="0">
			AND mst.AMT BETWEEN replace(#s_amt_fr#, ',', '') AND replace(#s_amt_to#, ',', '')
		 </isNotEqual>
	  GROUP BY mst.JNR_NO
	  ORDER BY post_dt desc, jnr_no desc
	   
    </select>
    
    
    
    <!-- TAX BILL Journal Detail 정보를 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateTaxInvDtlJnrDelete" parameterClass="InvJorVO">
    	UPDATE TB_CMB_INV
		   SET INV_STS_CD	= #inv_sts_cd#
		      ,PAY_AMT		= isnull(pay_amt,0) - #ttl_pay_amt#
		      ,BAL_AMT		= isnull(bal_amt,0) + #ttl_pay_amt#
		 WHERE INV_NO = #inv_no#  
		   <isNotEmpty property="inv_seq">
		   	   AND cmb_inv_seq = #inv_seq#
		   </isNotEmpty>
    </update>
    
    
    
    <!-- TAX BILL Journal Detail List 조회  -->
    <select id="searchTAX_JNR_DTL_LIST" parameterClass="java.util.HashMap" resultClass="InvJorVO">
    	SELECT  jnr_dtl.inv_no
    		   ,jnr_dtl.pay_amt	
    	 	   ,jnr_dtl.ttl_pay_amt
    	 	   ,jnr_dtl.curr_cd
    	 	   ,inv_mst.cmb_inv_seq AS inv_seq
    	 	   ,inv_mst.sell_buy_tp_cd
    	  FROM TB_JNR_DTL jnr_dtl
	      JOIN TB_CMB_INV inv_mst ON jnr_dtl.INV_NO  = inv_mst.INV_NO  AND jnr_dtl.inv_seq = inv_mst.cmb_inv_seq
    	 WHERE jnr_dtl.JNR_NO = #jnr_no#
    	   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N' 
    </select>
    
    
    <!-- INVOICE의 연결된 JOURNAL중 가장큰 POST_DT를 가져온다.   -->
    <select id="selectMaxPostDate" parameterClass="InvJorVO" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > selectMaxPostDate */
    	SELECT
			#inv_seq# AS INV_SEQ,
			POST_DT AS LAST_PAY_DT,
			CHK_NO AS LAST_CHK_NO
		FROM
			TB_JNR_MST
		WHERE
			JNR_NO = 
			(
				SELECT TOP 1 M.JNR_NO
				FROM
				TB_JNR_MST M,
				TB_JNR_DTL D
				WHERE 1=1
				AND M.JNR_NO = D.JNR_NO
				AND ISNULL(M.DELT_FLG,'N') = 'N'
				AND ISNULL(D.DELT_FLG,'N') = 'N'
				AND ISNULL(M.VOID_YN,'N') = 'N'
				AND D.INV_SEQ = #inv_seq#
				ORDER BY M.POST_DT DESC, M.MODI_TMS DESC
			)
    </select>
    
    
    
    
    <!-- INVOICE의 연결된 JOURNAL중 가장큰 POST_DT를 가져온다.   -->
    <select id="selectJnrMaxPostDate" parameterClass="java.util.HashMap" resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > selectJnrMaxPostDate */
    	SELECT
			#inv_seq# AS INV_SEQ,
			POST_DT AS LAST_PAY_DT,
			CHK_NO AS LAST_CHK_NO
		FROM
			TB_JNR_MST
		WHERE
			JNR_NO = 
			(
				SELECT TOP 1 M.JNR_NO
				FROM
				TB_JNR_MST M,
				TB_JNR_DTL D
				WHERE 1=1
				AND M.JNR_NO = D.JNR_NO
				AND ISNULL(M.DELT_FLG,'N') = 'N'
				AND ISNULL(D.DELT_FLG,'N') = 'N'
				AND ISNULL(M.VOID_YN,'N') = 'N'
				AND D.INV_SEQ = #inv_seq#
				AND D.JNR_NO != #jnr_no#
				ORDER BY M.POST_DT DESC, M.MODI_TMS DESC
			)
    </select>
    
    
    <!-- INVOICE의 LAST_PAID_DT와 LAST_CHK_NO를 UPDATE 한다.   -->
    <update id="updateInvLastInfo" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
		   SET LAST_PAY_DT  = #last_pay_dt#
		      ,LAST_CHK_NO  = #last_chk_no#
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    <!-- INVOICE의 LAST_PAID_DT와 LAST_CHK_NO를 UPDATE 한다.   -->
    <update id="updateJnrInvLastInfo" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
		   SET LAST_PAY_DT  = #last_pay_dt#
		      ,LAST_CHK_NO  = #last_chk_no#
		      ,INV_STS_CD	= #inv_sts_cd#
			    ,modi_tms			= GETUTCDATE()
		 WHERE inv_seq = #inv_seq#
    </update>
    
    
    <select id="searchBankChkForm" parameterClass="java.util.HashMap" resultClass="String">
    	SELECT   chk_form
    	  FROM TB_BANK
    	 WHERE bank_seq = #bank_seq#
    </select>
    
    <select id="searchBankCurChkNo" parameterClass="java.util.HashMap" resultClass="String">
    	SELECT   cur_chk_no + '@' + lst_chk_no
    	  FROM TB_BANK
    	 WHERE bank_seq = #bank_seq#
    </select>
    
    <update id="increaseBankCurChkNo" parameterClass="java.util.HashMap">
    	UPDATE TB_BANK
		   SET   cur_chk_no  = cur_chk_no + 1
		WHERE  bank_seq = #bank_seq#
    </update>
    
    <!-- Payment 조회   -->
    <select id="searchPaymentByBankCheck" parameterClass="java.util.HashMap" resultClass="JournalVO">
		/* AccJorJournalSQL.xml > searchPaymentByBankCheck */
    	SELECT mst.POST_DT
			      ,mst.TRDP_CD
			      ,(SELECT x.ENG_NM FROM TB_TRDP x WHERE x.TRDP_CD = mst.TRDP_CD) AS TRDP_NM
			      ,mst.CHK_NO
			      ,mst.CURR_CD
			      ,mst.AMT AS pay_amt
			      ,mst.AMT
			      ,mst.CLR_YN
			      ,mst.CLR_DT
			      ,mst.JNR_NO
			      ,mst.JNR_TP
			      ,mst.BANK_SEQ
			      ,mst.P_OFC_CD
		  FROM TB_JNR_MST mst
		 WHERE 1 = 1
		 AND mst.DELT_FLG = 'N'
		    AND mst.VOID_YN  = 'N'
		    AND mst.JNR_TP   IN('C','V')
			AND mst.BANK_SEQ = #bank_seq#
			AND mst.CHK_NO = #chk_no#
    </select>
    
    <!-- Bank Balance CLEAR By Excel 처리   -->
    <update id="updateBankBalClrByExl" parameterClass="JournalVO">
    	UPDATE TB_JNR_MST
    	   SET CLR_YN       = 'Y'
    	      ,CLR_DT       = #deposit_dt#
    	      ,BANK_SEQ		= #bank_seq#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE jnr_no = #jnr_no#
    	     AND jnr_tp = #jnr_tp#
    </update>




    <!-- Payment History   -->
    <select id="searchPaymentHistory" parameterClass="java.util.HashMap" resultClass="JournaHistoryVO">
/* AccJorJournalSQL.xml > searchPaymentHistory */
<![CDATA[
SELECT DENSE_RANK() over (order by inv_aply_curr_cd asc, inv_dt desc, trdp_nm asc, dept_nm asc, inv_tp asc, inv_seq asc) as rnum,        
       z.* 
  FROM (
SELECT inv_dtl.inv_dt, 
       inv_dtl.inv_due_dt,
       (select eng_nm from tb_trdp where trdp_cd = inv_mst.trdp_cd) as trdp_nm,
       inv_mst.inv_dept_cd as dept_nm,
       CASE WHEN inv_mst.sell_buy_tp_cd = 'S' THEN 'A/R'
             WHEN inv_mst.sell_buy_tp_cd = 'D' THEN 'DEBIT'
             WHEN inv_mst.sell_buy_tp_cd = 'C' THEN 'CREDIT'
             WHEN inv_mst.sell_buy_tp_cd = 'B' THEN 'A/P'
       END AS inv_tp,
       CASE WHEN inv_mst.sell_buy_tp_cd = 'B' THEN inv_dtl.buy_inv_no
             ELSE inv_dtl.inv_no
       END AS inv_no,
       CASE WHEN isnull(frt.intg_bl_seq,'') != '' THEN bl.ref_no
            WHEN isnull(frt.oth_seq,'') != '' THEN oth.ref_no
       END AS ref_no,
       bl.bl_no AS bl_no,
       inv_dtl.inv_aply_curr_cd AS inv_aply_curr_cd,
       inv_dtl.inv_seq,
       (CASE WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.inv_sum_amt
			                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.inv_sum_amt * -1
			                                             ELSE inv_dtl.inv_sum_amt
			                                        END)
		     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.inv_sum_amt * -1
					                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.inv_sum_amt
					                                     ELSE inv_dtl.inv_sum_amt 
					                                END) 
		     ELSE 0
         END) AS inv_sum_amt,
       (CASE WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.bal_amt
			                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.bal_amt * -1
			                                             ELSE inv_dtl.bal_amt
			                                        END)
		     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.bal_amt * -1
					                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.bal_amt
					                                     ELSE inv_dtl.bal_amt
					                                END) 
		    ELSE 0
        END) AS bal_sum_amt,
       (CASE WHEN jnr_mst.void_yn = 'Y' THEN null
             WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN jnr_dtl.pay_amt
			                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN jnr_dtl.pay_amt * -1
			                                             ELSE jnr_dtl.pay_amt
			                                        END)
		     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN jnr_dtl.pay_amt * -1
					                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN jnr_dtl.pay_amt
					                                     ELSE jnr_dtl.pay_amt 
					                                END) 
		     ELSE 0
        END) AS pay_amt,  
       jnr_mst.post_dt,
       (select x.bank_nm from tb_bank x where x.bank_seq = jnr_mst.bank_seq) as bank_nm,
       jnr_mst.chk_no,
       jnr_mst.clr_dt,
       jnr_mst.void_dt,
       RANK() OVER(partition by inv_dtl.inv_seq ORDER BY frt.FRT_SEQ) AS rank_no
  FROM TB_INV inv_mst
       JOIN TB_INV_DTL inv_dtl ON inv_mst.inv_seq = inv_dtl.inv_seq and inv_dtl.delt_flg = 'N'
       JOIN TB_FRT frt ON inv_dtl.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
       LEFT JOIN TB_INTG_BL bl ON frt.intg_bl_seq = bl.intg_bl_seq AND bl.delt_flg = 'N'
       LEFT JOIN TB_OTH_SALES oth ON frt.oth_seq = oth.oth_seq AND oth.delt_flg = 'N'
       LEFT JOIN TB_JNR_DTL jnr_dtl ON jnr_dtl.inv_seq = inv_dtl.inv_seq  AND isnull(jnr_dtl.delt_flg,'N') = 'N'
       LEFT JOIN TB_JNR_MST jnr_mst ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.delt_flg,'N') = 'N'
 WHERE isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
   AND inv_mst.DELT_FLG = 'N'
]]>
   <isNotEmpty property="f_ofc_cd">
   	   AND inv_mst.ofc_cd = #f_ofc_cd#
   </isNotEmpty>
   
   <isNotEmpty property="f_start_date">
	   <isEqual property="f_date_flag" compareValue="A">
	   	   AND inv_dtl.inv_dt between #f_start_date# and #f_end_date#
	   </isEqual>
	   <isEqual property="f_date_flag" compareValue="B">
	   	   AND inv_dtl.inv_due_dt between #f_start_date# and #f_end_date#
	   </isEqual>
	   <isEqual property="f_date_flag" compareValue="C">
	   	   AND jnr_mst.post_dt between #f_start_date# and #f_end_date#
	   </isEqual>
   </isNotEmpty>
   
   AND inv_mst.air_sea_clss_cd != 'G'
   
   AND ( 1=2
   <isEqual property="f_sell_buy_tp_cd_s" compareValue="A">
   	   OR inv_mst.sell_buy_tp_cd = 'S'
   </isEqual>
   <isEqual property="f_sell_buy_tp_cd_b" compareValue="A">
   	   OR inv_mst.sell_buy_tp_cd = 'B'
   </isEqual>
   <isEqual property="f_sell_buy_tp_cd_d" compareValue="A">
   	   OR inv_mst.sell_buy_tp_cd = 'D'
   </isEqual>
      <isEqual property="f_sell_buy_tp_cd_c" compareValue="A">
   	   OR inv_mst.sell_buy_tp_cd = 'C'
   </isEqual>
      )

   AND ( 1=2
   <isEqual property="f_dpt_tp_1" compareValue="A">
   	   OR inv_mst.inv_dept_cd  = 'OTH'
   </isEqual>
   <isEqual property="f_dpt_tp_2" compareValue="A">
   	   OR inv_mst.inv_dept_cd IN ('AOM', 'AOH')
   </isEqual>
   <isEqual property="f_dpt_tp_3" compareValue="A">
   	   OR inv_mst.inv_dept_cd IN ('AIM', 'AIH')
   </isEqual>
   <isEqual property="f_dpt_tp_4" compareValue="A">
   	   OR inv_mst.inv_dept_cd IN ('SOM', 'SOH')
   </isEqual>
   <isEqual property="f_dpt_tp_5" compareValue="A">
   	   OR inv_mst.inv_dept_cd IN ('SIM', 'SIH')
   </isEqual>
   )

   <isNotEmpty property="f_inv_aply_curr_cd">
   	   AND inv_dtl.inv_aply_curr_cd = #f_inv_aply_curr_cd#
   </isNotEmpty>
   
   <isEqual property="s_cust_flag" compareValue="A">
	   <isNotEmpty property="f_trdp_cd">
	   	   AND inv_mst.trdp_cd = #f_trdp_cd#
	   </isNotEmpty>
   </isEqual>
   <isEqual property="s_cust_flag" compareValue="B">
	   <isNotEmpty property="f_grp_id_cd">
	   	   AND EXISTS (SELECT 'X' FROM TB_TRDP X WHERE X.GRP_ID_CD = #f_grp_id_cd# AND X.TRDP_CD = inv_mst.trdp_cd)
	   </isNotEmpty>
   </isEqual>

   <isEqual property="s_inv_sts_cd" compareValue="O">
		AND inv_dtl.INV_STS_CD != 'IE'
		AND inv_dtl.BAL_AMT != 0
   </isEqual>
) Z
WHERE rank_no = 1
order by inv_aply_curr_cd asc, inv_dt desc, trdp_nm asc, dept_nm asc, inv_tp asc, inv_no asc, post_dt asc
    </select>

   
	<!-- Payment History Level 2 -->
    <select id="searchPaymentHistoryLev2" parameterClass="java.util.HashMap" resultClass="JournaHistoryVO">
		/* AccJorJournalSQL.xml > searchPaymentHistoryLev2 */
		<![CDATA[
		SELECT  (CASE WHEN num = 1 THEN amt
		              ELSE 0
		         END) AS sub_total_amt  
		       ,z.* 
		  FROM (
		SELECT RANK()  OVER(partition by jnr_mst.bank_seq, jnr_mst.jnr_no order by jnr_mst.bank_seq asc, jnr_mst.jnr_no asc, jnr_dtl.jnr_seq asc) AS num,
		       jnr_mst.bank_seq,
		       jnr_mst.post_dt,
		       CASE WHEN jnr_mst.JNR_TP = 'D' THEN 'Deposit'
		             WHEN jnr_mst.JNR_TP = 'C' THEN 'Payment'
		       END AS jnr_tp,
		       bank.bank_nm as bank_nm,
		       jnr_mst.p_ofc_cd,
		       trdp.eng_nm as trdp_nm,
		       (CASE WHEN ISNULL(jnr_mst.chk_no, '') = '' THEN ' ' ELSE jnr_mst.chk_no END) AS chk_no,
		       jnr_mst.jnr_no,
		       jnr_mst.amt,
		       jnr_mst.curr_cd,
		       (CASE WHEN LEN(ISNULL(jnr_mst.clr_dt, '')) = 8 
		             THEN substring(jnr_mst.clr_dt, 5, 2) + '-' + substring(jnr_mst.clr_dt, 7, 2) + '-' + substring(jnr_mst.clr_dt, 1, 4)
		             ELSE ' ' 
		        END)  AS clr_dt,
		       (CASE WHEN LEN(ISNULL(jnr_mst.void_dt, '')) = 8 
		             THEN substring(jnr_mst.void_dt, 5, 2) + '-' + substring(jnr_mst.void_dt, 7, 2) + '-' + substring(jnr_mst.void_dt, 1, 4)
		             ELSE ' '
		        END) AS void_dt,
		       CASE WHEN inv_mst.sell_buy_tp_cd = 'B' THEN inv_dtl.buy_inv_no
		             ELSE inv_dtl.inv_no
		       END AS inv_no,       
		       jnr_dtl.post_dt AS inv_post_dt,
		       inv_dtl.inv_dt, 
       		   inv_dtl.inv_due_dt,
		       jnr_dtl.ofc_cd,
		       CASE WHEN inv_mst.sell_buy_tp_cd = 'S' AND inv_mst.air_sea_clss_cd != 'G' THEN 'A/R'
		             WHEN inv_mst.sell_buy_tp_cd = 'D' AND inv_mst.air_sea_clss_cd != 'G' THEN 'DEBIT'
		             WHEN inv_mst.sell_buy_tp_cd = 'C' AND inv_mst.air_sea_clss_cd != 'G' THEN 'CREDIT'
		             WHEN inv_mst.sell_buy_tp_cd = 'B' AND inv_mst.air_sea_clss_cd != 'G' THEN 'A/P'
		             WHEN inv_mst.sell_buy_tp_cd = 'S' AND inv_mst.air_sea_clss_cd = 'G' THEN 'A/R(G&A)'
		             WHEN inv_mst.sell_buy_tp_cd = 'B' AND inv_mst.air_sea_clss_cd = 'G' THEN 'A/P(G&A)'
		             WHEN jnr_dtl.INP_TYPE = 'M' THEN 'N/A'
		       END AS inv_tp,
		       (CASE WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.inv_sum_amt
					                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.inv_sum_amt * -1
					                                             ELSE inv_dtl.inv_sum_amt
					                                        END)
				     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.inv_sum_amt * -1
							                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.inv_sum_amt
							                                     ELSE inv_dtl.inv_sum_amt 
							                                END) 
				     ELSE 0
		         END) AS inv_sum_amt,
		       (CASE WHEN jnr_mst.void_yn = 'Y' THEN null
		             WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN jnr_dtl.pay_amt
					                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN jnr_dtl.pay_amt * -1
					                                             ELSE jnr_dtl.pay_amt
					                                        END)
				     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN jnr_dtl.pay_amt * -1
							                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN jnr_dtl.pay_amt
							                                     ELSE jnr_dtl.pay_amt 
							                                END) 
				     ELSE 0
		        END) AS pay_amt,  
		       (CASE WHEN jnr_mst.jnr_tp IN ('D','B') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.bal_amt
					                                             WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.bal_amt * -1
					                                             ELSE inv_dtl.bal_amt
					                                        END)
				     WHEN jnr_mst.jnr_tp IN ('C','V') THEN (CASE WHEN inv_mst.sell_buy_tp_cd IN ('S', 'D') THEN inv_dtl.bal_amt * -1
							                                     WHEN inv_mst.sell_buy_tp_cd IN ('B', 'C') THEN inv_dtl.bal_amt
							                                     ELSE inv_dtl.bal_amt
							                                END) 
				    ELSE 0
		       END) AS bal_sum_amt,
		       jnr_dtl.gl_no,
		       gl_cd.rmk AS gl_nm,
		       jnr_dtl.jnr_desc		       
		  FROM TB_JNR_MST jnr_mst 
		  	   JOIN TB_JNR_DTL jnr_dtl ON jnr_dtl.jnr_no = jnr_mst.jnr_no  AND ISNULL(jnr_dtl.delt_flg,'N') = 'N'
		       LEFT OUTER JOIN TB_INV inv_mst ON inv_mst.inv_seq = jnr_dtl.inv_seq AND inv_mst.delt_flg = 'N' AND ISNULL(inv_mst.tax_bil_flg, 'N') != 'Y'
		       LEFT OUTER JOIN TB_INV_DTL inv_dtl ON inv_dtl.inv_seq = inv_mst.inv_seq AND inv_dtl.delt_flg = 'N'
		       LEFT OUTER JOIN TB_TRDP trdp ON trdp.trdp_cd = jnr_mst.trdp_cd
		       LEFT OUTER JOIN TB_BANK bank ON bank.bank_seq = jnr_mst.bank_seq
		       LEFT OUTER JOIN TB_GL_CD gl_cd ON gl_cd.gl_cd = jnr_dtl.gl_no
		 WHERE isnull(jnr_mst.delt_flg,'N') = 'N'            
		]]>
		   <isNotEmpty property="f_ofc_cd">
		   	   AND jnr_mst.p_ofc_cd = #f_ofc_cd#
		   </isNotEmpty>
		   
		   <isNotEmpty property="f_bank_cd">
		   	   AND jnr_mst.bank_seq = #f_bank_cd#
		   </isNotEmpty>
		   
		   <isNotEmpty property="f_start_date">
			   <isEqual property="f_date_flag" compareValue="A">
			   	   AND jnr_mst.post_dt between #f_start_date# and #f_end_date#
			   </isEqual>
			   <isEqual property="f_date_flag" compareValue="B">
			   	   AND jnr_mst.clr_dt between #f_start_date# and #f_end_date#
			   </isEqual>
		   </isNotEmpty>
		   
		   AND ( 1=2
		   <isEqual property="f_payment_tp_d" compareValue="A">
		   	   OR (jnr_mst.JNR_TP = 'D')
		   </isEqual>
		   <isEqual property="f_payment_tp_p" compareValue="A">
		   	   OR (jnr_mst.JNR_TP = 'C')
		   </isEqual>
		      )   
		      
		   <isEqual property="s_cust_flag" compareValue="A">
			   <isNotEmpty property="f_trdp_cd">
			   	   AND jnr_mst.trdp_cd = #f_trdp_cd#
			   </isNotEmpty>
		   </isEqual>
		   <isEqual property="s_cust_flag" compareValue="B">
			   <isNotEmpty property="f_grp_id_cd">
			   	   AND EXISTS (SELECT 'X' FROM TB_TRDP X WHERE X.GRP_ID_CD = #f_grp_id_cd# AND X.TRDP_CD = jnr_mst.trdp_cd)
			   </isNotEmpty>
		   </isEqual>
		   
		   <isNotEmpty property="f_gl_no">
		   	   AND jnr_dtl.gl_no = #f_gl_no#
		   </isNotEmpty>
		      
		   AND ( 1=2
		   <isEqual property="f_sell_buy_tp_cd_s" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'S' and inv_mst.air_sea_clss_cd != 'G')
		   </isEqual>
		   <isEqual property="f_sell_buy_tp_cd_b" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'B' and inv_mst.air_sea_clss_cd != 'G')
		   </isEqual>
		   <isEqual property="f_sell_buy_tp_cd_d" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'D' and inv_mst.air_sea_clss_cd != 'G')
		   </isEqual>
		    <isEqual property="f_sell_buy_tp_cd_c" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'C' and inv_mst.air_sea_clss_cd != 'G')
		   </isEqual>
		   <isEqual property="f_sell_buy_tp_cd_ar_gnr" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'S' and inv_mst.air_sea_clss_cd = 'G')
		   </isEqual>
		   <isEqual property="f_sell_buy_tp_cd_ap_gnr" compareValue="A">
		   	   OR (inv_mst.sell_buy_tp_cd = 'B' and inv_mst.air_sea_clss_cd = 'G')
		   </isEqual>
		   <isEqual property="f_sell_buy_tp_cd_na" compareValue="A">
		   	   OR (jnr_dtl.INP_TYPE = 'M')
		   </isEqual>
		      )
		) Z
		WHERE 1 = 1
		order by  bank_seq asc, post_dt asc, jnr_tp asc, p_ofc_cd asc, trdp_nm asc, jnr_no asc, chk_no asc
	</select>    


        
    <select id="selectJournalHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.jor.journal.dto.JnrHisVO">
    	SELECT 
			JNR_NO,
			MODI_SEQ,
			(SELECT X.LOCL_NM FROM TB_TRDP X WHERE X.TRDP_CD = MST.TRDP_CD) AS TRDP_CD,
			<isEqual property="jnr_tp" compareValue="D">
			RCVD_FM_NM,
			</isEqual>
			<isEqual property="jnr_tp" compareValue="C">
			(SELECT X.LOCL_NM FROM TB_TRDP X WHERE X.TRDP_CD = MST.PAYTO_CD) AS RCVD_FM_NM,
			</isEqual>
			POST_DT,
			CURR_CD,
			(SELECT X.BANK_NM FROM TB_BANK X WHERE X.BANK_SEQ = MST.BANK_SEQ) AS BANK_SEQ,
			CHK_NO,
			AMT,
			CLR_DT,
			VOID_DT,
			MODI_USRID,
			MODI_OFC_CD,
			CONVERT(VARCHAR(10),MODI_TMS,110)+' '+CONVERT(VARCHAR(5),MODI_TMS,108) AS MODI_TMS,
			(SELECT DELT_FLG FROM TB_JNR_MST X WHERE X.JNR_NO = MST.JNR_NO) AS DELT_FLG,
			CASE WHEN MST.JNR_NO LIKE 'JNR%' THEN 'Y' ELSE 'N' END MIG_YN
    	  FROM TB_JNR_HIS_MST MST
    	 WHERE JNR_NO = #jnr_no# 
    	 ORDER BY MODI_SEQ DESC    	 
    </select>
    
        
    <select id="selectJournalDetailHistory" parameterClass="HashMap" resultClass="InvJorVO">
    	SELECT 
		  JNR_NO
	      ,JNR_SEQ
	      ,MODI_SEQ
	      ,DTL_SEQ
	      ,INV_NO
	      ,BUY_INV_NO
	      ,OFC_CD
	      ,INV_POST_DT
	      ,INV_DEPT_CD
	      ,INV_TP
	      ,REF_NO
	      ,BL_NO
	      ,INV_POST_DT
	      ,INV_APLY_CURR_CD
	      ,INV_APLY_XCRT
	      ,INV_SUM_AMT
	      ,BAL_SUM_AMT
	      ,PAY_AMT
	      ,TTL_PAY_AMT
	      ,OLD_PAY_AMT
	      ,GL_NO
	      ,GL_RMK
	      ,JNR_DESC
	      ,TRDP_CD
	      ,TRDP_NM
	      ,RCVD_FM_NM
	      ,PAYTO_CD
	      ,RGST_USRID
	      ,RGST_OFC_CD
	      ,RGST_TMS
	      ,MODI_USRID
	      ,MODI_OFC_CD
	      ,MODI_TMS
	      ,INV_SEQ
    	  FROM TB_JNR_HIS_DTL 
    	 WHERE JNR_NO = #jnr_no# 
    	  AND modi_seq = #modi_seq# 
    	 ORDER BY MODI_SEQ DESC    	 
    </select>
    
    
    <insert id="insertJournalHistory" parameterClass="HashMap">
		INSERT INTO TB_JNR_HIS_MST
           (JNR_NO
           ,MODI_SEQ
           ,JNR_TP
           ,POST_DT
           ,TRDP_CD
           ,PAYTO_CD
           ,RCVD_FM_NM
           ,BANK_SEQ
           ,CLR_YN
           ,CLR_DT
           ,BATCH_SEQ
           ,VOID_YN
           ,VOID_DT
           ,CHK_NO
           ,CHK_PNT_YN
           ,CHK_PNT_DT
           ,CHK_PNT_USRID
           ,AMT
           ,CURR_CD
           ,LEVEL
           ,RMK
           ,DELT_FLG
           ,P_OFC_CD
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           ,MODI_TMS
           ,CLT_CMPL_FLG
           ,SLIP_NO
           ,JNR_YN
           ,JNR_DT
           ,CLS_YN
           ,CLS_DT
           ,BLOCK_DT
		) SELECT
	   		#f_jnr_no#
		   ,(SELECT  isnull(max(modi_seq)+1, 1) FROM  TB_JNR_HIS_MST WHERE JNR_NO = #f_jnr_no#)
           ,#f_jnr_tp#
           ,REPLACE(#f_post_dt#,'-','')		
           ,#s_cust_cd#
           ,#s_paid_cd#
           ,#f_rcv_from#
           ,#f_bank_cd#
           ,#clr_yn#
           ,REPLACE(#f_deposit_dt#,'-','')	
           ,#batch_seq#
           ,#void_yn#
           ,REPLACE(#f_void_dt#,'-','')	
           ,#f_chk_no#
           ,#chk_pnt_yn#
           ,REPLACE(#chk_pnt_dt#,'-','')	
           ,#chk_pnt_usrid#
           ,#f_rcv_amt#
           ,#f_curr_cd#
           ,#level#
           ,#f_remark#
           ,#delt_flg#
           ,#p_ofc_cd#
		   ,#modi_usrid#
		   ,#modi_ofc_cd#	
		   ,getdate()
		   ,#modi_usrid#			
		   ,#modi_ofc_cd#			
		   ,GETUTCDATE()
           ,#clt_cmpl_flg#
           ,#slip_no#
           ,#jnr_yn#
           ,REPLACE(#f_jnr_dt#,'-','')	
           ,#cls_yn#
           ,REPLACE(#f_cls_dt#,'-','')
		   ,REPLACE(#f_block_dt#,'-','')
    </insert>
    
    <insert id="insertJournalListHistory" parameterClass="HashMap">
		INSERT INTO TB_JNR_HIS_MST
           (JNR_NO
           ,MODI_SEQ
           ,JNR_TP
           ,POST_DT
           ,TRDP_CD
           ,PAYTO_CD
           ,RCVD_FM_NM
           ,BANK_SEQ
           ,CLR_YN
           ,CLR_DT
           ,BATCH_SEQ
           ,VOID_YN
           ,VOID_DT
           ,CHK_NO
           ,CHK_PNT_YN
           ,CHK_PNT_DT
           ,CHK_PNT_USRID
           ,AMT
           ,CURR_CD
           ,LEVEL
           ,RMK
           ,DELT_FLG
           ,P_OFC_CD
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           ,MODI_TMS
           ,CLT_CMPL_FLG
           ,SLIP_NO
           ,JNR_YN
           ,JNR_DT
           ,CLS_YN
           ,CLS_DT
           ,BLOCK_DT
		) SELECT
	   		#f_jnr_no#
		   ,(SELECT  isnull(max(modi_seq)+1, 1) FROM  TB_JNR_HIS_MST WHERE JNR_NO = #f_jnr_no#)
           ,#f_jnr_tp#
           ,#f_post_dt#		
           ,TRDP_CD
           ,PAYTO_CD
           ,RCVD_FM_NM
           ,BANK_SEQ
           ,CLR_YN
           ,CLR_DT	
           ,BATCH_SEQ
           ,VOID_YN
           ,VOID_DT	
           ,CHK_NO
           ,CHK_PNT_YN
           ,CHK_PNT_DT	
           ,CHK_PNT_USRID
           ,AMT
           ,CURR_CD
           ,#f_level#
           ,RMK
           ,DELT_FLG
           ,P_OFC_CD
		   ,#modi_usrid#
		   ,#modi_ofc_cd#	
		   ,getdate()
		   ,#modi_usrid#			
		   ,#modi_ofc_cd#			
		   ,GETUTCDATE()
           ,CLT_CMPL_FLG
           ,SLIP_NO
           ,JNR_YN
           ,JNR_DT	
           ,CLS_YN
           ,CLS_DT
		   ,BLOCK_DT
		FROM TB_JNR_MST
		WHERE JNR_NO = #f_jnr_no#
		AND JNR_TP = #f_jnr_tp#
    </insert>
    
    <insert id="insertJournalHistoryForBatch" parameterClass="JournalVO">
		INSERT INTO TB_JNR_HIS_MST
           (JNR_NO
           ,MODI_SEQ
           ,JNR_TP
           ,POST_DT
           ,TRDP_CD
           ,PAYTO_CD
           ,RCVD_FM_NM
           ,BANK_SEQ
           ,CLR_YN
           ,CLR_DT
           ,BATCH_SEQ
           ,VOID_YN
           ,VOID_DT
           ,CHK_NO
           ,CHK_PNT_YN
           ,CHK_PNT_DT
           ,CHK_PNT_USRID
           ,AMT
           ,CURR_CD
           ,LEVEL
           ,RMK
           ,DELT_FLG
           ,P_OFC_CD
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           ,MODI_TMS
		) SELECT 
			JNR_NO
			,(SELECT  isnull(max(modi_seq)+1, 1) FROM  TB_JNR_HIS_MST WHERE JNR_NO = #jnr_no#)
	       ,JNR_TP
	       ,POST_DT
	       ,TRDP_CD
	       ,PAYTO_CD
	       ,RCVD_FM_NM
	       ,BANK_SEQ
	       ,CLR_YN
	       ,CLR_DT
	       ,BATCH_SEQ
	       ,VOID_YN
	       ,VOID_DT
	       ,CHK_NO
	       ,CHK_PNT_YN
	       ,CHK_PNT_DT
	       ,CHK_PNT_USRID
	       ,AMT
	       ,CURR_CD
	       ,LEVEL
	       ,RMK
	       ,DELT_FLG
	       ,P_OFC_CD
		   ,#proc_usrid#			
		   ,#proc_ofccd#			
		   ,getdate()
		   ,#proc_usrid#			
		   ,#proc_ofccd#			
		   ,GETUTCDATE()
	  FROM TB_JNR_MST 
	  	WHERE JNR_NO = #jnr_no#
    </insert>
    
    <insert id="insertJournalDetailHistory" parameterClass="InvJorVO">
        INSERT INTO TB_JNR_HIS_DTL(
			JNR_NO,
			JNR_SEQ,
			MODI_SEQ,
			DTL_SEQ,
			INV_NO,
			BUY_INV_NO,
			OFC_CD,
			INV_POST_DT,
			INV_DEPT_CD,
			INV_TP,
			REF_NO,
			BL_NO,
			INV_APLY_CURR_CD,
			INV_APLY_XCRT,
			INV_SUM_AMT,	
			BAL_SUM_AMT,
			PAY_AMT,
			TTL_PAY_AMT,	
			OLD_PAY_AMT,
			GL_NO,
			GL_RMK,
			JNR_DESC,
			INV_SEQ,
			TRDP_CD,
			TRDP_NM,
			RCVD_FM_NM,
			PAYTO_CD,
			RGST_USRID,
			RGST_OFC_CD,
			RGST_TMS,
			MODI_USRID,
			MODI_OFC_CD,
			MODI_TMS
		) SELECT
			#jnr_no#,
			#jnr_seq#,
			#modi_seq#,
			#dtl_seq#,
			#inv_no#,
			#buy_inv_no#,
			#ofc_cd#,
			#inv_post_dt#,
			#inv_dept_cd#,
			#inv_tp#,
			#ref_no#,
			#bl_no#,
			#inv_aply_curr_cd#,
			#inv_aply_xcrt#,
			#inv_sum_amt#,	
			#bal_sum_amt#,
			#pay_amt#,
			#ttl_pay_amt#,	
			#old_pay_amt#,
			#gl_no#,
			#gl_rmk#,
			#jnr_desc#,
			#inv_seq#,
			#trdp_cd#,
			#trdp_nm#,
			#rcvd_fm_nm#,
			#payto_cd#,
			#rgst_usrid#,
			#rgst_ofc_cd#,
			getdate(),
			#rgst_usrid#,
			#rgst_ofc_cd#,
			GETUTCDATE()
    </insert>
    
    <select id="selectJnrDtlForJnrHistory" parameterClass="java.util.HashMap"  resultClass="InvJorVO">
		/* AccJorJournalSQL.xml > selectJnrDtlForJnrHistory */
    	SELECT  MAX(jnr_dtl.POST_DT)			AS inv_post_dt
		       ,MAX(jnr_dtl.OFC_CD)				AS ofc_cd
		       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'D/C'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'D/C'
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
		        END								AS inv_tp
		       ,MAX(jnr_dtl.INV_NO)				AS inv_no
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
		             ELSE MAX(jnr_dtl.INV_NO)
		        END 							AS buy_inv_no
		       ,MAX(CASE WHEN bl.REF_NO IS NULL OR bl.REF_NO = '' THEN jnr_dtl.REF_NO ELSE bl.REF_NO END)			AS ref_no
		       ,MAX(CASE WHEN bl.BL_NO  IS NULL OR bl.BL_NO = ''  THEN jnr_dtl.BL_NO  ELSE bl.BL_NO  END)	 		AS bl_no
		       ,MAX(jnr_dtl.CURR_CD)   			AS inv_aply_curr_cd
		       ,MAX(jnr_dtl.XCRT)				AS inv_aply_xcrt


		 		<isEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt) 
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             ELSE MAX(inv_dtl.inv_sum_amt) 
		        END								AS inv_sum_amt	
		        </isEqual>
		 		<isNotEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.inv_sum_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.inv_sum_amt) 
		             ELSE MAX(inv_dtl.inv_sum_amt) 
		        END								AS inv_sum_amt	
		        </isNotEqual>
		        
		 		<isEqual property="jnr_tp" compareValue="D">
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END								AS bal_sum_amt
		        </isEqual>
		 		<isNotEqual property="jnr_tp" compareValue="D">
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
		             ELSE isnull(MAX(inv_dtl.BAL_AMT),0)
		        END								AS bal_sum_amt
		        </isNotEqual>
		        
		        <isEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) * -1
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
		        </isEqual>
		 		<isNotEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.pay_amt) 
		             ELSE MAX(jnr_dtl.pay_amt) 
		        END								AS pay_amt	
		        </isNotEqual>
		      		        
		        <isEqual property="jnr_tp" compareValue="D">
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		        </isEqual>
		 		<isNotEqual property="jnr_tp" compareValue="D">
			   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS ttl_pay_amt	
		        </isNotEqual>  
		    		      		        
		        <isEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt)
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) * -1 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS old_pay_amt	
		        </isEqual>
		 		<isNotEqual property="jnr_tp" compareValue="D">
		       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(jnr_dtl.ttl_pay_amt) * -1
		             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(jnr_dtl.ttl_pay_amt) 
		             ELSE MAX(jnr_dtl.ttl_pay_amt) 
		        END								AS old_pay_amt
		        </isNotEqual>  
		        
		       ,MAX(jnr_dtl.GL_NO)				AS gl_no
		       ,(select x.rmk from tb_gl_cd x where x.gl_cd = MAX(jnr_dtl.GL_NO)) AS gl_rmk
		       ,MAX(jnr_dtl.JNR_DESC)			AS jnr_desc
		       ,MAX(inv_dtl.inv_seq)			AS inv_seq
		       ,MAX(inv_dtl.inv_no)				AS inv_no
		       ,MAX(jnr_mst.trdp_cd)			AS trdp_cd
		       ,(SELECT eng_nm FROM TB_TRDP WHERE trdp_cd = MAX(jnr_mst.trdp_cd)) AS trdp_nm
		       ,MAX(jnr_mst.RCVD_FM_NM)			AS rcvd_fm_nm
		       ,MAX(jnr_mst.payto_cd)			AS payto_cd
		       ,MAX(jnr_mst.JNR_NO)				AS jnr_no
		       ,MAX(jnr_dtl.JNR_SEQ)			AS jnr_seq
		       ,MAX(jnr_mst.post_dt)			AS r_post_dt
		       ,MAX(jnr_mst.bank_seq)			AS r_bank_seq
		       ,MAX(jnr_mst.clr_yn)				AS r_clr_yn
		       ,MAX(jnr_mst.clr_dt)				AS r_clr_dt
		       ,MAX(jnr_mst.void_yn)			AS r_void_yn
		       ,MAX(jnr_mst.void_dt)			AS r_void_dt
		       ,MAX(jnr_mst.chk_no)				AS r_chk_no
		       ,MAX(jnr_mst.amt)				AS r_amt
		       ,MAX(jnr_mst.curr_cd)			AS r_curr_cd
		       ,MAX(jnr_mst.rmk)				AS r_rmk
		       ,CASE WHEN MAX(jnr_dtl.INP_TYPE) = 'S' 
						 THEN CASE WHEN MAX(inv_dtl.INV_STS_CD) = 'IE' THEN '1'
								   ELSE '0'
							  END
					 ELSE '1'
		        END 							AS clr_flag
		       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, JNR_MST.CLT_CMPL_FLG)) AS CLT_CMPL_FLG
		       
		       ,MAX(jnr_dtl.INP_TYPE)			AS INP_TYPE
		       ,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD	
		       
		       ,MAX(jnr_mst.JNR_YN)				AS jnr_yn
		       ,MAX(jnr_mst.JNR_DT)				AS jnr_dt
		       ,MAX(jnr_mst.CLS_YN)				AS cls_yn
		       ,MAX(jnr_mst.CLS_DT)				AS cls_dt	
		       ,(SELECT MAX(modi_seq) FROM TB_JNR_HIS_MST his_mst
					WHERE his_mst.JNR_NO = jnr_dtl.JNR_NO
				) AS MODI_SEQ	       
		       		       
		  FROM TB_JNR_MST jnr_mst
		    LEFT OUTER JOIN TB_JNR_DTL jnr_dtl
		        ON jnr_mst.jnr_no = jnr_dtl.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl          
            	/*ON jnr_dtl.INV_NO = inv_dtl.INV_NO AND jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ*/
            	ON jnr_dtl.INV_SEQ = inv_dtl.INV_SEQ
    		LEFT OUTER JOIN TB_INV inv_mst          
            	ON inv_dtl.inv_seq = inv_mst.inv_seq
		    LEFT OUTER JOIN TB_FRT frt 
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ
			LEFT OUTER JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ
			LEFT OUTER JOIN TB_OTH_SALES oth
		     	ON frt.OTH_SEQ = oth.OTH_SEQ
		    LEFT OUTER JOIN (SELECT JNR_NO AS JNR_NO1, P_OFC_CD AS P_OFC_CD1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_JNR_MST_BLCK) BLCK 
		   		ON JNR_MST.JNR_NO = BLCK.JNR_NO1 AND JNR_MST.P_OFC_CD = BLCK.P_OFC_CD1
		 WHERE jnr_mst.jnr_no = #jnr_no#
		   AND isnull(jnr_mst.DELT_FLG,'N') = 'N'
		   AND isnull(jnr_dtl.DELT_FLG,'N') = 'N'
		 GROUP BY jnr_dtl.JNR_SEQ ,jnr_dtl.JNR_NO
    </select>
    
    <select id="selectModiSeqJnrHistory" parameterClass="String" resultClass="String">
		SELECT MAX(modi_seq) 
		FROM TB_JNR_HIS_MST his_mst
		WHERE  his_mst.jnr_no = #value#
    </select>
    
    <select id="getDupCheckNo" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getDupCheckNo  */
		SELECT MAX(CHK_NO) 
		  FROM TB_JNR_MST mst
		 WHERE  1=1
		   AND  mst.jnr_no != #f_jnr_no#
		   AND  mst.CHK_NO = #f_chk_no#
		<isEqual property="f_jnr_tp" compareValue="D">
			AND  mst.TRDP_CD = #f_cust_cd#
		</isEqual>
		<isNotEqual property="f_jnr_tp" compareValue="D">
			AND  mst.BANK_SEQ = #f_bank_cd#
			AND  mst.JNR_TP = #f_jnr_tp#
		</isNotEqual>
    </select>
    
    <select id="getJnrVoidInfo" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getJnrVoidInfo  */
		SELECT MAX(void_yn) 
		  FROM TB_JNR_MST mst
		 WHERE  1=1
		   AND  mst.jnr_no = #f_jnr_no#		   
    </select>
    <!-- Payment Save시 오류수정 LKH 2015.02.24 -->
    <select id="selectInvSeqList" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO" parameterClass="java.lang.String">
		/*  AccInvInvoiceSQL.xml > selectInvSeqList  */
		SELECT DISTINCT OTH_SEQ, WMS_SEQ, INV_SEQ  FROM TB_FRT
		WHERE INV_SEQ IN (
			SELECT INV_SEQ FROM TB_JNR_DTL
			WHERE JNR_NO = #value# 
			)		  
    </select>
    
        <!-- LKH TODO::작업중 --> 
    <select id="selectInvSeqTargetList" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO" parameterClass="java.lang.String">
		/*  AccInvInvoiceSQL.xml > selectInvSeqTargetList  */
		SELECT Max(oth_seq)     AS OTH_SEQ, 
		       Max(wms_seq)     AS WMS_SEQ, 
		       Max(intg_bl_seq) AS INTG_BL_SEQ 
		FROM   (SELECT Max(Isnull(oth_seq, '')) OTH_SEQ, 
		               Max(Isnull(wms_seq, '')) WMS_SEQ, 
		               CASE 
		                 WHEN Max(Isnull(oth_seq, '')) = '' 
		                      AND Max(Isnull(wms_seq, '')) = '' THEN Max(intg_bl_seq) 
		                 ELSE '' 
		               END                      AS INTG_BL_SEQ 
		        FROM   tb_frt 
		        WHERE  inv_seq IN (SELECT inv_seq 
		                           FROM   tb_jnr_dtl 
		                           WHERE  jnr_no = #value# 
		                          ) 
		        GROUP  BY oth_seq, 
		                  wms_seq, 
		                  intg_bl_seq) A  
                  
    </select>
    
    <!-- Deposit/Payment Invoice List 조회 (Enter)  -->
    <select id="searchINV_CNT" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* AccJorJournalSQL.xml > searchINV_CNT */
		SELECT  COUNT(inv_seq) AS inv_cnt, MAX(cust_cd) AS cust_cd, MAX(cust_nm) AS cust_nm, MAX(acct_pay_ord) AS acct_pay_ord
	    FROM   (
	    	SELECT  inv_mst.inv_seq 				AS inv_seq
	    	       ,MAX(inv_mst.trdp_cd)			AS cust_cd
				   ,MAX(trdp.eng_nm)				AS cust_nm
				   ,MAX(trdp.reserve_field09)		AS acct_pay_ord
			  FROM TB_INV inv_mst
			    LEFT OUTER JOIN TB_INV_DTL inv_dtl 
			     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
			    LEFT JOIN TB_FRT frt 
			     	ON inv_mst.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
			    LEFT OUTER JOIN TB_TRDP trdp 	
			        ON trdp.trdp_cd = inv_mst.trdp_cd 	
			 WHERE isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
			   AND inv_mst.DELT_FLG = 'N'
			 <isNotEmpty property="s_cust_cd">
			   AND inv_mst.TRDP_CD = #s_cust_cd#
			 </isNotEmpty>  
			 <isNotEmpty property="s_cust_nm">
			    AND EXISTS(SELECT 1 FROM TB_TRDP trd 
			                WHERE trd.TRDP_CD = inv_mst.TRDP_CD AND trd.ENG_NM LIKE #s_cust_nm# + '%')
			 </isNotEmpty>
			 <isNotEmpty property="f_curr_cd">
			   AND frt.inv_curr_cd = #f_curr_cd#
			 </isNotEmpty>  
			 <isEqual property="his_chk" compareValue="O">
			   AND inv_dtl.INV_STS_CD != 'IE'
			   AND inv_dtl.BAL_AMT != 0
			 </isEqual>
			   <isNotEmpty property="s_inv_no">
			       AND ( inv_dtl.INV_NO = #s_inv_no# OR inv_dtl.BUY_INV_NO = #s_inv_no# )	
			   </isNotEmpty>
			   <isEqual property="dept_chk1" compareValue="Y">
			       <isEqual property="dept_chk2" compareValue="Y">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','D','C')
			       	   </isEqual>
			       </isEqual>
			       <isEqual property="dept_chk2" compareValue="N">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('S')
			       	   </isEqual>
			       </isEqual>	    		
			   </isEqual>
			   <isEqual property="dept_chk1" compareValue="N">
			       <isEqual property="dept_chk2" compareValue="Y">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C','B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('D','C')
			       	   </isEqual>
			       </isEqual>
			       <isEqual property="dept_chk2" compareValue="N">
			       	   <isEqual property="dept_chk3" compareValue="Y">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('B')
			       	   </isEqual>
			       	   <isEqual property="dept_chk3" compareValue="N">
			       	   	   AND inv_mst.sell_buy_tp_cd IN('')
			       	   </isEqual>
			       </isEqual>	    		
			   </isEqual>
			 GROUP BY inv_mst.INV_SEQ    
		 ) inval 
    </select>
    
</sqlMap>